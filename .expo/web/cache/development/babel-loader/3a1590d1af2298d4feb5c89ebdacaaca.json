{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\StatsAppNative\\\\MyApp\\\\screens\\\\PlayerRegistrationScreen\\\\PlayerRegistrationScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useEffect, useState, Component } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\n\nvar PlayerRegistrationScreen = function (_Component) {\n  _inherits(PlayerRegistrationScreen, _Component);\n\n  var _super = _createSuper(PlayerRegistrationScreen);\n\n  function PlayerRegistrationScreen(props) {\n    var _this;\n\n    _classCallCheck(this, PlayerRegistrationScreen);\n\n    _this = _super.call(this, props);\n\n    _this.updateInputVal = function (val, prop) {\n      var state = _this.state;\n      state[prop] = val;\n\n      _this.setState(state);\n    };\n\n    _this.handleAuthorChange = function () {\n      _this.function1();\n    };\n\n    _this.function1 = function () {\n      console.log('das');\n    };\n\n    _this.NewAccountSignUp = function () {\n      var _this$state = _this.state,\n          fullName = _this$state.fullName,\n          email = _this$state.email,\n          password = _this$state.password,\n          inviteCode = _this$state.inviteCode,\n          sportType = _this$state.sportType;\n\n      if (fullName.length > 0) {} else {\n        alert(\"Please enter your full name.\");\n      }\n\n      if (_this.state.password !== _this.state.confirmPassword) {\n        alert(\"Passwords don't match.\");\n        return;\n      }\n\n      if (sportType == '') {\n        alert(\"Please select a sport\");\n      }\n\n      firebase.auth().createUserWithEmailAndPassword(email, password).then(function (response) {\n        var uid = response.user.uid;\n        var userType = \"Player\";\n        var data = {\n          id: uid,\n          email: email,\n          fullName: fullName,\n          userType: userType,\n          sportType: sportType,\n          totalGoals: 0,\n          totalPoints: 0,\n          totalPasses: 0,\n          totalShots: 0,\n          totalShotsOnTarget: 0,\n          totalTackles: 0,\n          totalWonTheBall: 0,\n          totalLostTheBall: 0,\n          totalYellowCards: 0,\n          totalRedCards: 0,\n          totalAssists: 0\n        };\n        var usersRef = firebase.database().ref('users/' + uid);\n        usersRef.set(data).then(function () {\n          return alert(\"Account Created\", _this.props.navigation.navigate('Login'));\n        });\n      });\n    };\n\n    _this.SignUpOptionExistingAcccount = function () {\n      _this.setState({\n        displayOptions: false\n      });\n\n      _this.setState({\n        displayExistingSignup: true\n      });\n\n      _this.setState({\n        displayNewAccountSignup: false\n      });\n    };\n\n    _this.SignUpOptionNewAccount = function () {\n      _this.setState({\n        displayOptions: false\n      });\n\n      _this.setState({\n        displayExistingSignup: false\n      });\n\n      _this.setState({\n        displayNewAccountSignup: true\n      });\n    };\n\n    _this.state = {\n      fullName: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      inviteCode: '',\n      sportType: '',\n      teamAdminInvite: '',\n      isLoading: false,\n      displayOptions: true,\n      displayExistingSignup: false,\n      displayNewAccountSignup: false,\n      HA_ID: '',\n      AccountCreationStatus: false\n    };\n    _this.handleAuthorChange = _this.handleAuthorChange.bind(_assertThisInitialized(_this));\n    _this.ExistingSignUp = _this.ExistingSignUp.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(PlayerRegistrationScreen, [{\n    key: \"LinkAccount\",\n    value: function LinkAccount() {\n      var fullName = this.state.fullName;\n      var email = this.state.email;\n      var password = this.state.password;\n      var inviteCode = this.state.inviteCode;\n      var sportType = this.state.sportType;\n      var teamAdminInvite = this.state.teamAdminInvite;\n\n      if (fullName.length > 0) {} else {\n        return alert(\"Please enter your full name.\");\n      }\n\n      if (this.state.password !== this.state.confirmPassword) {\n        return alert(\"Passwords don't match.\");\n      }\n\n      if (sportType == '') {\n        return alert(\"Please select a sport\");\n      }\n\n      if (email == '') {\n        return alert(\"Please enter your email\");\n      }\n\n      var reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n      if (reg.test(email) === false) {\n        return alert(\"Email is Not Correct\");\n      }\n\n      if (teamAdminInvite == '') {\n        return alert(\"Please enter your team invite code\");\n      }\n\n      if (inviteCode == '') {\n        return alert(\"Please enter your player invite code\");\n      }\n\n      var findTeam = firebase.database().ref('/teams').orderByChild(\"teamAdminInvite\").equalTo(teamAdminInvite).once('value').then(function (snapshot) {\n        if (snapshot.exists()) {\n          snapshot.forEach(function (childSnapshot) {\n            var value = childSnapshot.val();\n            var HA_ID = value.CreatedByUserID;\n            var TeamRecordSportType = value.SportType;\n            var find = firebase.database().ref('teams').child(HA_ID).child('players').orderByChild('inviteCode').equalTo(inviteCode).once('value').then(function (snapshot1) {\n              if (snapshot.exists()) {\n                snapshot1.forEach(function (childSnapshot1) {\n                  var value1 = childSnapshot1.val();\n                  var VerifiedVariable = value1.Verified;\n\n                  if (TeamRecordSportType == sportType) {\n                    if (value1.Verified == false) {\n                      firebase.auth().createUserWithEmailAndPassword(email, password).then(function (response) {\n                        var uid = response.user.uid;\n                        var userType = \"Player\";\n\n                        if (sportType == 'GAA') {\n                          var data = {\n                            id: uid,\n                            teamID: HA_ID,\n                            email: email,\n                            fullName: fullName,\n                            userType: userType,\n                            totalPoints: 0,\n                            totalPasses: 0,\n                            totalShots: 0,\n                            totalShotsOnTarget: 0,\n                            totalTackles: 0,\n                            totalWonTheBall: 0,\n                            totalLostTheBall: 0,\n                            totalYellowCards: 0,\n                            totalRedCards: 0,\n                            totalAssists: 0\n                          };\n                          var usersRef = firebase.database().ref('users/' + uid);\n                          usersRef.set(data).then(function () {\n                            childSnapshot1.ref.update({\n                              UserID: data.id,\n                              Verified: true,\n                              inviteCode: ''\n                            });\n                          });\n                        }\n                      });\n                    }\n                  }\n                });\n              }\n            });\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var options;\n      var AccountCreationStatus = this.state.AccountCreationStatus;\n\n      if (this.state.displayOptions == true) {\n        options = React.createElement(ScrollView, {\n          style: stylesPlayerReg.container,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 621,\n            columnNumber: 17\n          }\n        }, React.createElement(Text, {\n          style: stylesPlayerReg.footerText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 623,\n            columnNumber: 19\n          }\n        }, \"Has your team already created a temporary player account for you? If so click the below!\"), React.createElement(TouchableOpacity, {\n          style: stylesPlayerReg.button,\n          onPress: this.SignUpOptionExistingAcccount,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 626,\n            columnNumber: 29\n          }\n        }, React.createElement(Text, {\n          style: stylesPlayerReg.buttonTitle,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 627,\n            columnNumber: 33\n          }\n        }, \"Existing Player account\")), React.createElement(Text, {\n          style: stylesPlayerReg.footerText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 632,\n            columnNumber: 29\n          }\n        }, \"Click below if you want to create a new player account!\"), React.createElement(TouchableOpacity, {\n          style: stylesPlayerReg.button,\n          onPress: this.SignUpOptionNewAccount,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 635,\n            columnNumber: 29\n          }\n        }, React.createElement(Text, {\n          style: stylesPlayerReg.buttonTitle,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 636,\n            columnNumber: 33\n          }\n        }, \"New Player Account\")));\n      }\n\n      if (this.state.displayExistingSignup == true) {\n        options = React.createElement(ScrollView, {\n          style: stylesPlayerReg.container,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 649,\n            columnNumber: 17\n          }\n        }, React.createElement(Text, {\n          style: stylesPlayerReg.footerText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 650,\n            columnNumber: 17\n          }\n        }, \" Please enter your full name:\"), React.createElement(TextInput, {\n          style: stylesPlayerReg.input,\n          placeholderTextColor: \"#aaaaaa\",\n          placeholder: \"Please enter your full name\",\n          onChangeText: function onChangeText(text) {\n            return _this2.setState({\n              fullName: text\n            });\n          },\n          value: this.state.fullName,\n          underlineColorAndroid: \"transparent\",\n          autoCapitalize: \"none\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 651,\n            columnNumber: 17\n          }\n        }), React.createElement(Text, {\n          style: stylesPlayerReg.footerText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 662,\n            columnNumber: 17\n          }\n        }, \" Please enter your email:\"), React.createElement(TextInput, {\n          style: stylesPlayerReg.input,\n          placeholderTextColor: \"#aaaaaa\",\n          placeholder: \"Please enter your email\",\n          onChangeText: function onChangeText(text) {\n            return _this2.setState({\n              email: text\n            });\n          },\n          value: this.state.email,\n          underlineColorAndroid: \"transparent\",\n          autoCapitalize: \"none\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 663,\n            columnNumber: 17\n          }\n        }), React.createElement(Text, {\n          style: stylesPlayerReg.footerText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 674,\n            columnNumber: 17\n          }\n        }, \" Please enter your password:\"), React.createElement(TextInput, {\n          style: stylesPlayerReg.input,\n          placeholderTextColor: \"#aaaaaa\",\n          secureTextEntry: true,\n          placeholder: \"Password\",\n          onChangeText: function onChangeText(text) {\n            return _this2.setState({\n              password: text\n            });\n          },\n          value: this.state.password,\n          underlineColorAndroid: \"transparent\",\n          autoCapitalize: \"none\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 675,\n            columnNumber: 17\n          }\n        }), React.createElement(Text, {\n          style: stylesPlayerReg.footerText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 686,\n            columnNumber: 18\n          }\n        }, \" Please confirm your password:\"), React.createElement(TextInput, {\n          style: stylesPlayerReg.input,\n          placeholderTextColor: \"#aaaaaa\",\n          secureTextEntry: true,\n          placeholder: \"Confirm Password\",\n          onChangeText: function onChangeText(text) {\n            return _this2.setState({\n              confirmPassword: text\n            });\n          },\n          value: this.state.confirmPassword,\n          underlineColorAndroid: \"transparent\",\n          autoCapitalize: \"none\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 687,\n            columnNumber: 17\n          }\n        }), React.createElement(Text, {\n          style: stylesPlayerReg.footerText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 700,\n            columnNumber: 17\n          }\n        }, \" Please confirm your sport:\"), React.createElement(Picker, {\n          selectedValue: this.state.sportType,\n          style: stylesPlayerReg.input,\n          onValueChange: function onValueChange(text) {\n            return _this2.setState({\n              sportType: text\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 702,\n            columnNumber: 17\n          }\n        }, React.createElement(Picker.Item, {\n          label: \"Select a sport\",\n          value: \"\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 708,\n            columnNumber: 29\n          }\n        }), React.createElement(Picker.Item, {\n          label: \"GAA\",\n          value: \"GAA\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 709,\n            columnNumber: 29\n          }\n        }), React.createElement(Picker.Item, {\n          label: \"Soccer\",\n          value: \"Soccer\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 710,\n            columnNumber: 29\n          }\n        })), React.createElement(Text, {\n          style: stylesPlayerReg.footerText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 715,\n            columnNumber: 17\n          }\n        }, \"Please enter your \\\"PLAYER\\\" invite code. This can be obtained from your Team Analyst:\"), React.createElement(TextInput, {\n          style: stylesPlayerReg.input,\n          placeholderTextColor: \"#aaaaaa\",\n          placeholder: \"Please enter your Player invite code\",\n          onChangeText: function onChangeText(text) {\n            return _this2.setState({\n              inviteCode: text\n            });\n          },\n          value: this.state.inviteCode,\n          underlineColorAndroid: \"transparent\",\n          autoCapitalize: \"none\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 716,\n            columnNumber: 17\n          }\n        }), React.createElement(Text, {\n          style: stylesPlayerReg.footerText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 727,\n            columnNumber: 17\n          }\n        }, \"Please enter your \\\"TEAM\\\" invite code. This can be obtained from your Team Analyst:\"), React.createElement(TextInput, {\n          style: stylesPlayerReg.input,\n          placeholderTextColor: \"#aaaaaa\",\n          placeholder: \"Please enter your Team invite code\",\n          onChangeText: function onChangeText(text) {\n            return _this2.setState({\n              teamAdminInvite: text\n            });\n          },\n          value: this.state.teamAdminInvite,\n          underlineColorAndroid: \"transparent\",\n          autoCapitalize: \"none\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 728,\n            columnNumber: 17\n          }\n        }), React.createElement(View, {\n          style: stylesPlayerReg.footerView,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 738,\n            columnNumber: 17\n          }\n        }, React.createElement(TouchableOpacity, {\n          style: stylesPlayerReg.button,\n          onClick: this.ExistingSignUp(),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 739,\n            columnNumber: 21\n          }\n        }, React.createElement(Text, {\n          style: stylesPlayerReg.buttonTitle,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 750,\n            columnNumber: 21\n          }\n        }, \"Sign up!\"))));\n      }\n\n      if (this.state.displayNewAccountSignup == true) {\n        options = React.createElement(ScrollView, {\n          style: stylesPlayerReg.container,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 763,\n            columnNumber: 17\n          }\n        }, React.createElement(Text, {\n          style: stylesPlayerReg.footerText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 765,\n            columnNumber: 17\n          }\n        }, \" New Account\"), React.createElement(Text, {\n          style: stylesPlayerReg.footerText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 766,\n            columnNumber: 17\n          }\n        }, \" Please enter your full name:\"), React.createElement(TextInput, {\n          style: stylesPlayerReg.input,\n          placeholderTextColor: \"#aaaaaa\",\n          placeholder: \"Please enter your full name\",\n          onChangeText: function onChangeText(text) {\n            return _this2.setState({\n              fullName: text\n            });\n          },\n          value: this.state.fullName,\n          underlineColorAndroid: \"transparent\",\n          autoCapitalize: \"none\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 767,\n            columnNumber: 17\n          }\n        }), React.createElement(Text, {\n          style: stylesPlayerReg.footerText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 778,\n            columnNumber: 17\n          }\n        }, \" Please enter your email:\"), React.createElement(TextInput, {\n          style: stylesPlayerReg.input,\n          placeholderTextColor: \"#aaaaaa\",\n          placeholder: \"Please enter your email\",\n          onChangeText: function onChangeText(text) {\n            return _this2.setState({\n              email: text\n            });\n          },\n          value: this.state.email,\n          underlineColorAndroid: \"transparent\",\n          autoCapitalize: \"none\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 779,\n            columnNumber: 17\n          }\n        }), React.createElement(Text, {\n          style: stylesPlayerReg.footerText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 790,\n            columnNumber: 17\n          }\n        }, \" Please enter your password:\"), React.createElement(TextInput, {\n          style: stylesPlayerReg.input,\n          placeholderTextColor: \"#aaaaaa\",\n          secureTextEntry: true,\n          placeholder: \"Password\",\n          onChangeText: function onChangeText(text) {\n            return _this2.setState({\n              password: text\n            });\n          },\n          value: this.state.password,\n          underlineColorAndroid: \"transparent\",\n          autoCapitalize: \"none\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 791,\n            columnNumber: 17\n          }\n        }), React.createElement(Text, {\n          style: stylesPlayerReg.footerText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 802,\n            columnNumber: 18\n          }\n        }, \" Please confirm your password:\"), React.createElement(TextInput, {\n          style: stylesPlayerReg.input,\n          placeholderTextColor: \"#aaaaaa\",\n          secureTextEntry: true,\n          placeholder: \"Confirm Password\",\n          onChangeText: function onChangeText(text) {\n            return _this2.setState({\n              confirmPassword: text\n            });\n          },\n          value: this.state.confirmPassword,\n          underlineColorAndroid: \"transparent\",\n          autoCapitalize: \"none\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 803,\n            columnNumber: 17\n          }\n        }), React.createElement(Text, {\n          style: stylesPlayerReg.footerText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 815,\n            columnNumber: 17\n          }\n        }, \" Please confirm your sport:\"), React.createElement(Picker, {\n          selectedValue: this.state.sportType,\n          style: stylesPlayerReg.input,\n          onValueChange: function onValueChange(text) {\n            return _this2.setState({\n              sportType: text\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 817,\n            columnNumber: 17\n          }\n        }, React.createElement(Picker.Item, {\n          label: \"Select a sport\",\n          value: \"\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 823,\n            columnNumber: 29\n          }\n        }), React.createElement(Picker.Item, {\n          label: \"GAA\",\n          value: \"GAA\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 824,\n            columnNumber: 29\n          }\n        }), React.createElement(Picker.Item, {\n          label: \"Soccer\",\n          value: \"Soccer\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 825,\n            columnNumber: 29\n          }\n        })), React.createElement(View, {\n          style: stylesPlayerReg.footerView,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 830,\n            columnNumber: 17\n          }\n        }, React.createElement(TouchableOpacity, {\n          style: stylesPlayerReg.button,\n          onPress: function onPress() {\n            _this2.NewAccountSignUp, _this2.props.navigation.navigate('PlayerRegistrationScreen');\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 831,\n            columnNumber: 21\n          }\n        }, React.createElement(Text, {\n          style: stylesPlayerReg.buttonTitle,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 833,\n            columnNumber: 25\n          }\n        }, \"Sign up!\"))));\n      }\n\n      if (this.state.AccountCreationStatus == true) {\n        options = React.createElement(ScrollView, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 848,\n            columnNumber: 13\n          }\n        }, React.createElement(Text, {\n          style: stylesPlayerReg.footerText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 849,\n            columnNumber: 16\n          }\n        }, \" Account Created:\"), React.createElement(View, {\n          style: stylesPlayerReg.footerView,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 853,\n            columnNumber: 16\n          }\n        }, React.createElement(TouchableOpacity, {\n          style: stylesPlayerReg.button,\n          onPress: function onPress() {\n            _this2.props.navigation.navigate('Login');\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 854,\n            columnNumber: 21\n          }\n        }, React.createElement(Text, {\n          style: stylesPlayerReg.buttonTitle,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 856,\n            columnNumber: 25\n          }\n        }, \"Lets Go\"))));\n      }\n\n      return React.createElement(ScrollView, {\n        style: stylesPlayerReg.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 868,\n          columnNumber: 6\n        }\n      }, options);\n    }\n  }]);\n\n  return PlayerRegistrationScreen;\n}(Component);\n\nvar stylesPlayerReg = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#252626'\n  },\n  logo: {\n    flex: 1,\n    height: 120,\n    width: 90,\n    alignSelf: \"center\",\n    margin: 30\n  },\n  input: {\n    height: 48,\n    borderRadius: 5,\n    overflow: 'hidden',\n    backgroundColor: 'white',\n    marginTop: 10,\n    marginBottom: 10,\n    marginLeft: 30,\n    marginRight: 30,\n    paddingLeft: 16\n  },\n  button: {\n    backgroundColor: '#C30000',\n    marginLeft: 30,\n    marginRight: 30,\n    marginTop: 20,\n    height: 48,\n    borderRadius: 5,\n    borderWidth: 2,\n    borderColor: '#000000',\n    alignItems: \"center\",\n    justifyContent: 'center'\n  },\n  buttonTitle: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: \"bold\"\n  },\n  footerView: {\n    flex: 1,\n    alignItems: \"center\",\n    marginTop: 20\n  },\n  footerText: {\n    fontSize: 18,\n    height: 30,\n    marginTop: 15,\n    marginBottom: 5,\n    marginLeft: 20,\n    marginRight: 30,\n    paddingLeft: 10,\n    color: 'white',\n    fontWeight: \"bold\"\n  },\n  footerLink: {\n    color: \"#788eec\",\n    fontWeight: \"bold\",\n    fontSize: 16\n  }\n});\nexport default PlayerRegistrationScreen;","map":{"version":3,"sources":["D:/StatsAppNative/MyApp/screens/PlayerRegistrationScreen/PlayerRegistrationScreen.js"],"names":["React","useEffect","useState","Component","firebase","PlayerRegistrationScreen","props","updateInputVal","val","prop","state","setState","handleAuthorChange","function1","console","log","NewAccountSignUp","fullName","email","password","inviteCode","sportType","length","alert","confirmPassword","auth","createUserWithEmailAndPassword","then","response","uid","user","userType","data","id","totalGoals","totalPoints","totalPasses","totalShots","totalShotsOnTarget","totalTackles","totalWonTheBall","totalLostTheBall","totalYellowCards","totalRedCards","totalAssists","usersRef","database","ref","set","navigation","navigate","SignUpOptionExistingAcccount","displayOptions","displayExistingSignup","displayNewAccountSignup","SignUpOptionNewAccount","teamAdminInvite","isLoading","HA_ID","AccountCreationStatus","bind","ExistingSignUp","reg","test","findTeam","orderByChild","equalTo","once","snapshot","exists","forEach","childSnapshot","value","CreatedByUserID","TeamRecordSportType","SportType","find","child","snapshot1","childSnapshot1","value1","VerifiedVariable","Verified","teamID","update","UserID","options","stylesPlayerReg","container","footerText","button","buttonTitle","input","text","footerView","StyleSheet","create","flex","backgroundColor","logo","height","width","alignSelf","margin","borderRadius","overflow","marginTop","marginBottom","marginLeft","marginRight","paddingLeft","borderWidth","borderColor","alignItems","justifyContent","color","fontSize","fontWeight","footerLink"],"mappings":"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","sourcesContent":["import React, { useEffect, useState , Component  } from 'react'\r\nimport {FlatList, Keyboard,  StyleSheet, Text, ScrollView ,View , TouchableOpacity,TextInput ,Picker, Button , Alert} from 'react-native'\r\n\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\n\r\n\r\n\r\n\r\n\r\nclass PlayerRegistrationScreen extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.state = {\r\n            fullName: '',\r\n            email: '', \r\n            password: '',\r\n            confirmPassword:'',\r\n            inviteCode:'',\r\n            sportType:'',\r\n            teamAdminInvite:'',\r\n            isLoading: false,\r\n            displayOptions: true,\r\n            displayExistingSignup: false,\r\n            displayNewAccountSignup:false,\r\n            HA_ID:'',\r\n            AccountCreationStatus:false\r\n\r\n        \r\n        }\r\n\r\n\r\n        this.handleAuthorChange = this.handleAuthorChange.bind(this);\r\n\r\n        this.ExistingSignUp = this.ExistingSignUp.bind(this);\r\n                                                 \r\n    \r\n    }\r\n\r\n\r\n\r\n\r\n    updateInputVal = (val, prop) => {\r\n        const state = this.state;\r\n        state[prop] = val;\r\n        this.setState(state);\r\n    }\r\n\r\n\r\n    handleAuthorChange = () => {\r\n        // var AccountCreationStatus = this.state.AccountCreationStatus;\r\n    \r\n        // this.setState({\r\n        //   AccountCreationStatus: true\r\n        // });\r\n\r\n\r\n      this.function1();\r\n\r\n    \r\n    };\r\n\r\n    function1 = () => {\r\n        console.log('das');\r\n    \r\n    }\r\n\r\n\r\n\r\n    \r\n\r\n  \r\n    // Complete = () => {\r\n    //     this.setState({AccountCreationStatus:true});\r\n    // }\r\n    LinkAccount() {\r\n        \r\n          var fullName = this.state.fullName;\r\n          var email = this.state.email;\r\n          var password = this.state.password;\r\n          var inviteCode = this.state.inviteCode;\r\n          var sportType = this.state.sportType;\r\n          var teamAdminInvite = this.state.teamAdminInvite;\r\n\r\n\r\n\r\n          //FullName Check\r\n          if (fullName.length > 0) {\r\n                            \r\n                                \r\n          }  \r\n          else\r\n          {\r\n            return alert(\"Please enter your full name.\")\r\n          }\r\n\r\n\r\n          // Password confirmation Check\r\n          if (this.state.password !== this.state.confirmPassword) \r\n          {\r\n            return alert(\"Passwords don't match.\");\r\n          }\r\n\r\n          // Sport Type check\r\n          if(sportType == '')\r\n          {\r\n            return alert(\"Please select a sport\");\r\n          }\r\n        \r\n          if(email == '')\r\n          {\r\n                return alert(\"Please enter your email\")\r\n                          \r\n          }\r\n          \r\n\r\n                        let reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n                        if (reg.test(email) === false) \r\n                        {\r\n                          \r\n                            return alert(\"Email is Not Correct\");\r\n                         \r\n                        }\r\n                               \r\n\r\n                        if(teamAdminInvite == '')\r\n                        {\r\n                           return alert(\"Please enter your team invite code\");\r\n                      \r\n                        }\r\n          \r\n                        if(inviteCode == '')\r\n                        {\r\n                           return alert(\"Please enter your player invite code\");\r\n                         \r\n                        }\r\n          \r\n\r\n\r\n                        const findTeam = firebase.database().ref('/teams').orderByChild(\"teamAdminInvite\").equalTo(teamAdminInvite)\r\n                            .once('value').then(function(snapshot) {\r\n                                //IF TEAM INVITE CODE EXISTS\r\n                                     if(snapshot.exists()) {\r\n                                        snapshot.forEach(function (childSnapshot) {\r\n\r\n                                            var value = childSnapshot.val();\r\n                                            \r\n                                            \r\n                                             //obtain the TEAM id\r\n                                             var HA_ID = value.CreatedByUserID;\r\n                                             var TeamRecordSportType = value.SportType; \r\n\r\n\r\n                                             \r\n//                     // Find matching team player record \r\n                        const find = firebase.database().ref('teams').child(HA_ID).child('players').orderByChild('inviteCode').equalTo(inviteCode)\r\n                            .once('value').then(function(snapshot1)  {\r\n                                if(snapshot.exists()) {\r\n                                    snapshot1.forEach(function (childSnapshot1) {   \r\n\r\n                                        var value1 = childSnapshot1.val();\r\n                                        \r\n                                        var VerifiedVariable = value1.Verified;\r\n                                        \r\n                                        //Check that SportType matches temp Player Record\r\n                                        \r\n                                        if(TeamRecordSportType == sportType)\r\n                                        {\r\n                                             //Account Verification check\r\n                                            if(value1.Verified == false)\r\n                                            {\r\n                                                // Create User Account\r\n                                            firebase\r\n                                            .auth()\r\n                                            .createUserWithEmailAndPassword(email, password)\r\n                                            .then((response) => {\r\n                                                const uid = response.user.uid\r\n                                                const userType = \"Player\"\r\n\r\n\r\n                                                    if(sportType == 'GAA')\r\n                                                    {\r\n                                                        const data = {\r\n                                                            id: uid,\r\n                                                            teamID: HA_ID,\r\n                                                            email: email,\r\n                                                            fullName: fullName,\r\n                                                            userType:  userType,\r\n                                                            totalPoints:0,\r\n                                                            totalPasses: 0,\r\n                                                            totalShots:0,\r\n                                                            totalShotsOnTarget:0,\r\n                                                            totalTackles:0,\r\n                                                            totalWonTheBall:0,\r\n                                                            totalLostTheBall:0,\r\n                                                            totalYellowCards:0,\r\n                                                            totalRedCards:0,\r\n                                                            totalAssists:0                                    \r\n                                                        };\r\n\r\n\r\n                                                                const usersRef = firebase.database().ref('users/' + uid)\r\n                                                                usersRef\r\n                                                                    .set(data)\r\n                                                                    .then(() => {\r\n                                                                \r\n\r\n                                                                        childSnapshot1.ref.update({UserID: data.id , Verified: true, inviteCode:''});\r\n                                                                        // return alert(\"Account Created\", this.props.navigation.navigate('Login'));\r\n                                                                        // function1();\r\n\r\n                                                                    \r\n                                                            });\r\n                                                            }\r\n                                                    });\r\n                                            }\r\n                                               \r\n                                    }\r\n                                });\r\n\r\n        \r\n                    }\r\n\r\n                });\r\n\r\n              });\r\n        }\r\n\r\n     });\r\n\r\n    }\r\n\r\n//                 // console.log('User Found');\r\n//         //When someone creates account using the same Teaminvitecode and playercode which has already been created before/ used? \r\n//             //What should be prompt\r\n//             //What is the current process looking like , are they able to join a team or are they added to the team??\r\n\r\n\r\n//         // const { fullName, email, password , inviteCode , sportType , teamAdminInvite  } = this.state;\r\n\r\n\r\n//             // var AccountCreationStatus = this.state.AccountCreationStatus;\r\n    \r\n//           var fullName = this.state.fullName;\r\n//           var email = this.state.email;\r\n//           var password = this.state.password;\r\n//           var inviteCode = this.state.inviteCode;\r\n//           var sportType = this.state.sportType;\r\n//           var teamAdminInvite = this.state.teamAdminInvite;\r\n      \r\n\r\n//             //  if (fullName.length > 0) {\r\n                \r\n                     \r\n//             //  }\r\n//             //  else\r\n//             //  {\r\n//             //     return alert(\"Please enter your full name.\")\r\n//             //  }\r\n\r\n       \r\n//             //  //  Password confirmation Check\r\n//             //  if (this.state.password !== this.state.confirmPassword) {\r\n//             //     return alert(\"Passwords don't match.\")\r\n                \r\n//             //  }\r\n\r\n\r\n//             //  if(sportType == '')\r\n//             //  {\r\n//             //     return alert(\"Please select a sport\")\r\n               \r\n//             //  }\r\n\r\n//             //  if(email == '')\r\n//             //  {\r\n//             //     return alert(\"Please enter your email\")\r\n                \r\n//             //  }\r\n\r\n\r\n           \r\n       \r\n//             //  let reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n//             //  if (reg.test(email) === false) \r\n//             //  {\r\n//             //    return alert(\"Email is Not Correct\");\r\n               \r\n\r\n\r\n//             //  }\r\n                     \r\n               \r\n                \r\n             \r\n\r\n//             //  if(teamAdminInvite == '')\r\n//             //  {\r\n//             //     return alert(\"Please enter your team invite code\");\r\n            \r\n//             //  }\r\n\r\n//             //  if(inviteCode == '')\r\n//             //  {\r\n//             //     return alert(\"Please enter your player invite code\");\r\n               \r\n//             //  }\r\n\r\n\r\n//         // GET team An UID by have a matching Team Invite code entered by the user\r\n \r\n\r\n//         //This Function is if the a Team Admin has created a temporary player account for this user and now the user would like to activate a proper User/Player Account\r\n\r\n\r\n\r\n//             //First Find the Team \r\n//             //find the player matching team record with invitecode \r\n//                 //IF success - Update UserID with new ID \r\n//                 //ELSE - Fail , already in use or activated\r\n\r\n\r\n//         //Find the Team \r\n//             const findTeam = firebase.database().ref('/teams').orderByChild(\"teamAdminInvite\").equalTo(teamAdminInvite)\r\n//             .once('value').then(function(snapshot) {\r\n//                 //IF TEAM INVITE CODE EXISTS\r\n//                 if(snapshot.exists()) {\r\n                    \r\n//                         snapshot.forEach(function (childSnapshot) {\r\n\r\n//                         var value = childSnapshot.val();\r\n\r\n\r\n//                         //obtain the TEAM id\r\n//                         var HA_ID = value.CreatedByUserID;\r\n   \r\n//                         var TeamRecordSportType = value.SportType; \r\n   \r\n   \r\n   \r\n                   \r\n\r\n//                     // Find matching team player record \r\n//                     const find = firebase.database().ref('teams').child(HA_ID).child('players').orderByChild('inviteCode').equalTo(inviteCode)\r\n//                          .once('value').then(function(snapshot1)  {\r\n\r\n//                         if(snapshot.exists()) {\r\n                            \r\n//                             snapshot1.forEach(function (childSnapshot1) {\r\n\r\n//                                 var value1 = childSnapshot1.val();\r\n\r\n//                                 var VerifiedVariable = value1.Verified;\r\n\r\n                                \r\n//                                 //Check that SportType matches temp Player Record\r\n\r\n//                                 if(TeamRecordSportType == sportType)\r\n//                                 {\r\n\r\n//                                     //Account Verification check\r\n//                                     if(value1.Verified == false)\r\n//                                     {\r\n//                                             // Create User Account\r\n//                                             firebase\r\n//                                             .auth()\r\n//                                             .createUserWithEmailAndPassword(email, password)\r\n//                                             .then((response) => {\r\n//                                                 const uid = response.user.uid\r\n//                                                 const userType = \"Player\"\r\n\r\n\r\n//                                                 if(sportType == 'GAA')\r\n//                                                 {\r\n\r\n// //Try set state here\r\n// //Rewrite it\r\n\r\n//                                                     // this.setState()\r\n\r\n//                                                     const data = {\r\n//                                                             id: uid,\r\n//                                                             teamID: HA_ID,\r\n//                                                             email: email,\r\n//                                                             fullName: fullName,\r\n//                                                             userType:  userType,\r\n//                                                             totalPoints:0,\r\n//                                                             totalPasses: 0,\r\n//                                                             totalShots:0,\r\n//                                                             totalShotsOnTarget:0,\r\n//                                                             totalTackles:0,\r\n//                                                             totalWonTheBall:0,\r\n//                                                             totalLostTheBall:0,\r\n//                                                             totalYellowCards:0,\r\n//                                                             totalRedCards:0,\r\n//                                                             totalAssists:0\r\n//                                                     };\r\n\r\n\r\n//                                                     const usersRef = firebase.database().ref('users/' + uid)\r\n//                                                     usersRef\r\n//                                                         .set(data)\r\n//                                                          .then(() => {\r\n                                                     \r\n\r\n//                                                             childSnapshot1.ref.update({UserID: data.id , Verified: true, inviteCode:''});\r\n//                                                             // return alert(\"Account Created\", this.props.navigation.navigate('Login'));\r\n//                                                             function1();\r\n\r\n\r\n                                          \r\n//                                                             // this.handleAuthorChange();\r\n                                                          \r\n                                        \r\n                                                          \r\n                                    \r\n                                                             \r\n                                                    \r\n                                                \r\n\r\n                                                    \r\n//                                                         });\r\n\r\n                                                    \r\n                                                        \r\n                                                \r\n\r\n//                                                 }\r\n//                                                 else if(sportType == 'Soccer')\r\n//                                                 {\r\n//                                                     const data = {\r\n//                                                         id: uid,\r\n//                                                         teamID: HA_ID,\r\n//                                                         email: email,\r\n//                                                         fullName: fullName,\r\n//                                                         userType:   userType,\r\n//                                                         totalPasses: 0,\r\n//                                                         totalShots:0,\r\n//                                                         totalShotsOnTarget:0,\r\n//                                                         totalTackles:0,\r\n//                                                         totalWonTheBall:0,\r\n//                                                         totalLostTheBall:0,\r\n//                                                         totalYellowCards:0,\r\n//                                                         totalRedCards:0,\r\n//                                                         totalAssists:0\r\n//                                                     };\r\n                                                   \r\n                                                   \r\n//                                                     const usersRef = firebase.database().ref('users/' + uid)\r\n//                                                     usersRef\r\n//                                                         .set(data)\r\n//                                                         // .then(() => {\r\n//                                                             then(res => {\r\n                                                            \r\n//                                                             // useState({AccountCreationStatus:true});\r\n                                                            \r\n//                                                             childSnapshot1.ref.update({UserID: data.id , Verified: true, inviteCode:''});\r\n                                                         \r\n                                                       \r\n//                                                             return alert(\"Account Created\", this.props.navigation.navigate('Login'));\r\n                                      \r\n\r\n                                                              \r\n        \r\n\r\n//                                                         });\r\n\r\n\r\n                                         \r\n//                                                 }\r\n    \r\n\r\n//                                             });\r\n\r\n//                                         }\r\n                                       \r\n                                    \r\n\r\n//                                     }\r\n//                                     else\r\n//                                     {\r\n                                      \r\n//                                         return alert('Sport type does not match existing account - Please Try Again');\r\n                                      \r\n//                                     }\r\n                                \r\n\r\n//                             });\r\n\r\n//                         }\r\n//                         else{\r\n                            \r\n                           \r\n//                             return alert('Unable to find Player record - Please enter a valid Player invite code');\r\n                            \r\n//                         }\r\n                  \r\n//                         });\r\n\r\n\r\n//                     });\r\n                \r\n//                 }\r\n//                 else{\r\n//                         //INVALID TEAM INVITE CODE\r\n//                         alert('Please provide a valid team invite code');\r\n//                         return;\r\n//                 }\r\n//             }) // END SNAPSHOT - FindTeam\r\n\r\n//     }\r\n    \r\n  \r\n   \r\n    NewAccountSignUp = () => {\r\n        \r\n        const { fullName, email, password , inviteCode, sportType} = this.state\r\n\r\n\r\n\r\n        if (fullName.length > 0) \r\n        {\r\n            \r\n                 \r\n        }\r\n        else\r\n        {\r\n            alert(\"Please enter your full name.\")\r\n        }\r\n     \r\n        //  Password confirmation Check\r\n        if (this.state.password !== this.state.confirmPassword) {\r\n            alert(\"Passwords don't match.\")\r\n            return\r\n        }\r\n\r\n        \r\n        if(sportType == '')\r\n        {\r\n            alert(\"Please select a sport\")\r\n        }\r\n\r\n\r\n\r\n\r\n                // Create user\r\n                            firebase\r\n                            .auth()\r\n                            .createUserWithEmailAndPassword(email, password)\r\n                                .then((response) => {\r\n                                     const uid = response.user.uid\r\n                                        \r\n                                        const userType = \"Player\"\r\n                                        const data = {\r\n                                            id: uid,\r\n                                            email: email,\r\n                                            fullName: fullName,\r\n                                            userType:  userType,\r\n                                            sportType: sportType,\r\n                                            totalGoals:0,\r\n                                            totalPoints:0,\r\n                                            totalPasses: 0,\r\n                                            totalShots:0,\r\n                                            totalShotsOnTarget:0,\r\n                                            totalTackles:0,\r\n                                            totalWonTheBall:0,\r\n                                            totalLostTheBall:0,\r\n                                            totalYellowCards:0,\r\n                                            totalRedCards:0,\r\n                                            totalAssists:0\r\n\r\n                                        };\r\n                                \r\n\r\n                                        const usersRef = firebase.database().ref('users/' + uid)\r\n                                            usersRef\r\n                                                .set(data)\r\n                                                    .then(() => {\r\n                                                        \r\n                                                         return alert(\"Account Created\", this.props.navigation.navigate('Login'));\r\n                                    \r\n                                                    });\r\n                                    \r\n                                        });\r\n\r\n    }\r\n\r\n\r\n    SignUpOptionExistingAcccount = () => {\r\n\r\n        this.setState({displayOptions: false});\r\n        this.setState({displayExistingSignup: true});\r\n        this.setState({displayNewAccountSignup: false});\r\n    }\r\n\r\n\r\n\r\n    SignUpOptionNewAccount = () => {\r\n\r\n        this.setState({displayOptions: false});\r\n        this.setState({displayExistingSignup: false});\r\n        this.setState({displayNewAccountSignup: true});\r\n    }\r\n\r\n\r\n    render(){\r\n\r\n        //Option - Has your Team set up your Player Account - If click Existing Player\r\n\r\n        //Option - New Player Account\r\n\r\n        var options;\r\n        var AccountCreationStatus = this.state.AccountCreationStatus;\r\n\r\n        if(this.state.displayOptions == true)\r\n        {\r\n            options = (\r\n                <ScrollView style={stylesPlayerReg.container}>\r\n                  \r\n                  <Text style={stylesPlayerReg.footerText}>Has your team already created a temporary player account for you? If so click the below!</Text>\r\n\r\n                  \r\n                            <TouchableOpacity style={stylesPlayerReg.button} onPress={this.SignUpOptionExistingAcccount}>\r\n                                <Text style={stylesPlayerReg.buttonTitle}>Existing Player account</Text>\r\n                            </TouchableOpacity>\r\n                   \r\n\r\n        \r\n                            <Text style={stylesPlayerReg.footerText}>Click below if you want to create a new player account!</Text>\r\n\r\n               \r\n                            <TouchableOpacity style={stylesPlayerReg.button} onPress={this.SignUpOptionNewAccount}>\r\n                                <Text style={stylesPlayerReg.buttonTitle}>New Player Account</Text>\r\n                            </TouchableOpacity>\r\n                   \r\n\r\n\r\n                </ScrollView>\r\n\r\n            )\r\n        }\r\n\r\n        if(this.state.displayExistingSignup == true)\r\n        {\r\n            options = (\r\n                <ScrollView style={stylesPlayerReg.container}>\r\n                <Text style={stylesPlayerReg.footerText}> Please enter your full name:</Text>\r\n                <TextInput\r\n                    style={stylesPlayerReg.input}\r\n                    placeholderTextColor=\"#aaaaaa\"\r\n                    placeholder='Please enter your full name'\r\n                    // onChangeText={(text) => setFullName(text)}\r\n                    onChangeText={(text) => this.setState({fullName:text})}\r\n                    value={this.state.fullName}\r\n                    underlineColorAndroid=\"transparent\"\r\n                    autoCapitalize=\"none\"\r\n                />\r\n\r\n                <Text style={stylesPlayerReg.footerText}> Please enter your email:</Text>\r\n                <TextInput\r\n                    style={stylesPlayerReg.input}\r\n                    placeholderTextColor=\"#aaaaaa\"\r\n                    placeholder='Please enter your email'\r\n                    // onChangeText={(text) => setEmail(text)}\r\n                    onChangeText={(text) => this.setState({email:text})}\r\n                    value={this.state.email}\r\n                    underlineColorAndroid=\"transparent\"\r\n                    autoCapitalize=\"none\"\r\n                />\r\n\r\n                <Text style={stylesPlayerReg.footerText}> Please enter your password:</Text>\r\n                <TextInput\r\n                    style={stylesPlayerReg.input}\r\n                    placeholderTextColor=\"#aaaaaa\"\r\n                    secureTextEntry\r\n                    placeholder='Password'\r\n                    // onChangeText={(text) => setPassword(text)}\r\n                    onChangeText={(text) => this.setState({password:text})}\r\n                    value={this.state.password}\r\n                    underlineColorAndroid=\"transparent\"\r\n                    autoCapitalize=\"none\"\r\n                />\r\n                 <Text style={stylesPlayerReg.footerText}> Please confirm your password:</Text>\r\n                <TextInput\r\n                    style={stylesPlayerReg.input}\r\n                    placeholderTextColor=\"#aaaaaa\"\r\n                    secureTextEntry\r\n                    placeholder='Confirm Password'\r\n                    // onChangeText={(text) => setConfirmPassword(text)}\r\n                    onChangeText={(text) => this.setState({confirmPassword:text})}\r\n                    value={this.state.confirmPassword}\r\n                    underlineColorAndroid=\"transparent\"\r\n                    autoCapitalize=\"none\"\r\n                />\r\n\r\n\r\n                <Text style={stylesPlayerReg.footerText}> Please confirm your sport:</Text>\r\n              \r\n                <Picker\r\n                        selectedValue={this.state.sportType}\r\n                        style={stylesPlayerReg.input}\r\n                        onValueChange={(text) => this.setState({sportType:text})}\r\n                        >\r\n\r\n                            <Picker.Item label=\"Select a sport\" value=\"\" />\r\n                            <Picker.Item label=\"GAA\" value=\"GAA\" />\r\n                            <Picker.Item label=\"Soccer\" value=\"Soccer\"/>\r\n\r\n\r\n                </Picker>\r\n\r\n                <Text style={stylesPlayerReg.footerText}>Please enter your \"PLAYER\" invite code. This can be obtained from your Team Analyst:</Text>\r\n                <TextInput\r\n                    style={stylesPlayerReg.input}\r\n                    placeholderTextColor=\"#aaaaaa\"\r\n                    placeholder='Please enter your Player invite code'\r\n                    onChangeText={(text) => this.setState({inviteCode:text})}\r\n                    value={this.state.inviteCode}\r\n                    underlineColorAndroid=\"transparent\"\r\n                    autoCapitalize=\"none\"\r\n                />\r\n\r\n\r\n                <Text style={stylesPlayerReg.footerText}>Please enter your \"TEAM\" invite code. This can be obtained from your Team Analyst:</Text>\r\n                <TextInput\r\n                    style={stylesPlayerReg.input}\r\n                    placeholderTextColor=\"#aaaaaa\"\r\n                    placeholder='Please enter your Team invite code'\r\n                    onChangeText={(text) => this.setState({teamAdminInvite:text})}\r\n                    value={this.state.teamAdminInvite}\r\n                    underlineColorAndroid=\"transparent\"\r\n                    autoCapitalize=\"none\"\r\n                />\r\n\r\n                <View style={stylesPlayerReg.footerView}>\r\n                    <TouchableOpacity style={stylesPlayerReg.button}  \r\n                    onClick={this.ExistingSignUp()\r\n                     \r\n                     \r\n                    //  if(AccountCreationStatus == true)\r\n                    //  {\r\n                    //     this.props.navigation.navigate('Login'); \r\n                    //  } \r\n                     \r\n                     }>\r\n                    \r\n                    <Text style={stylesPlayerReg.buttonTitle}>Sign up!</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n\r\n                {/* onPress={ () => { this.ExistingSignUp(), this.props.navigation.navigate('Login'); }}> */}\r\n        </ScrollView>\r\n\r\n            );\r\n        }\r\n\r\n        if(this.state.displayNewAccountSignup == true)\r\n        {\r\n            options = (\r\n                <ScrollView style={stylesPlayerReg.container}>\r\n                \r\n                <Text style={stylesPlayerReg.footerText}> New Account</Text>\r\n                <Text style={stylesPlayerReg.footerText}> Please enter your full name:</Text>\r\n                <TextInput\r\n                    style={stylesPlayerReg.input}\r\n                    placeholderTextColor=\"#aaaaaa\"\r\n                    placeholder='Please enter your full name'\r\n                    // onChangeText={(text) => setFullName(text)}\r\n                    onChangeText={(text) => this.setState({fullName:text})}\r\n                    value={this.state.fullName}\r\n                    underlineColorAndroid=\"transparent\"\r\n                    autoCapitalize=\"none\"\r\n                />\r\n\r\n                <Text style={stylesPlayerReg.footerText}> Please enter your email:</Text>\r\n                <TextInput\r\n                    style={stylesPlayerReg.input}\r\n                    placeholderTextColor=\"#aaaaaa\"\r\n                    placeholder='Please enter your email'\r\n                    // onChangeText={(text) => setEmail(text)}\r\n                    onChangeText={(text) => this.setState({email:text})}\r\n                    value={this.state.email}\r\n                    underlineColorAndroid=\"transparent\"\r\n                    autoCapitalize=\"none\"\r\n                />\r\n\r\n                <Text style={stylesPlayerReg.footerText}> Please enter your password:</Text>\r\n                <TextInput\r\n                    style={stylesPlayerReg.input}\r\n                    placeholderTextColor=\"#aaaaaa\"\r\n                    secureTextEntry\r\n                    placeholder='Password'\r\n                    // onChangeText={(text) => setPassword(text)}\r\n                    onChangeText={(text) => this.setState({password:text})}\r\n                    value={this.state.password}\r\n                    underlineColorAndroid=\"transparent\"\r\n                    autoCapitalize=\"none\"\r\n                />\r\n                 <Text style={stylesPlayerReg.footerText}> Please confirm your password:</Text>\r\n                <TextInput\r\n                    style={stylesPlayerReg.input}\r\n                    placeholderTextColor=\"#aaaaaa\"\r\n                    secureTextEntry\r\n                    placeholder='Confirm Password'\r\n                    // onChangeText={(text) => setConfirmPassword(text)}\r\n                    onChangeText={(text) => this.setState({confirmPassword:text})}\r\n                    value={this.state.confirmPassword}\r\n                    underlineColorAndroid=\"transparent\"\r\n                    autoCapitalize=\"none\"\r\n                />\r\n\r\n                <Text style={stylesPlayerReg.footerText}> Please confirm your sport:</Text>\r\n                \r\n                <Picker\r\n                        selectedValue={this.state.sportType}\r\n                        style={stylesPlayerReg.input}\r\n                        onValueChange={(text) => this.setState({sportType:text})}\r\n                        >\r\n\r\n                            <Picker.Item label=\"Select a sport\" value=\"\" />\r\n                            <Picker.Item label=\"GAA\" value=\"GAA\" />\r\n                            <Picker.Item label=\"Soccer\" value=\"Soccer\"/>\r\n\r\n\r\n                </Picker>\r\n              \r\n                <View style={stylesPlayerReg.footerView}>\r\n                    <TouchableOpacity style={stylesPlayerReg.button} \r\n                    onPress={ () => { this.NewAccountSignUp, this.props.navigation.navigate('PlayerRegistrationScreen')} }>\r\n                        <Text style={stylesPlayerReg.buttonTitle}>Sign up!</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n\r\n\r\n        </ScrollView>\r\n\r\n            );\r\n        }\r\n\r\n\r\n        if(this.state.AccountCreationStatus == true)\r\n        {\r\n\r\n            options = (\r\n            <ScrollView>\r\n               <Text style={stylesPlayerReg.footerText}> Account Created:</Text>\r\n\r\n\r\n\r\n               <View style={stylesPlayerReg.footerView}>\r\n                    <TouchableOpacity style={stylesPlayerReg.button} \r\n                    onPress={ () => { this.props.navigation.navigate('Login')}}>\r\n                        <Text style={stylesPlayerReg.buttonTitle}>Lets Go</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </ScrollView>\r\n\r\n            );\r\n        }\r\n\r\n\r\n\r\n  \r\n    return (\r\n     <ScrollView style={stylesPlayerReg.container}>\r\n            {options}\r\n      </ScrollView>\r\n    )\r\n}\r\n\r\n}\r\n\r\n\r\nconst stylesPlayerReg = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#252626',\r\n    },\r\n   \r\n    logo: {\r\n        flex: 1,\r\n        height: 120,\r\n        width: 90,\r\n        alignSelf: \"center\",\r\n        margin: 30\r\n    },\r\n    input: {\r\n        height: 48,\r\n\r\n        borderRadius: 5,\r\n        overflow: 'hidden',\r\n        backgroundColor: 'white',\r\n        marginTop: 10,\r\n        marginBottom: 10,\r\n        marginLeft: 30,\r\n        marginRight: 30,\r\n        paddingLeft: 16\r\n    },\r\n    button: {\r\n        backgroundColor: '#C30000',\r\n        marginLeft: 30,\r\n        marginRight: 30,\r\n        marginTop: 20,\r\n        height: 48,\r\n        borderRadius: 5,\r\n        borderWidth: 2,\r\n        borderColor:'#000000',\r\n        alignItems: \"center\",\r\n        justifyContent: 'center'\r\n    },\r\n    buttonTitle: {\r\n        color: 'white',\r\n        fontSize: 16,\r\n        fontWeight: \"bold\"\r\n    },\r\n    footerView: {\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        marginTop: 20\r\n    },\r\n    footerText: {\r\n        fontSize:18,\r\n        height: 30,\r\n        marginTop: 15,\r\n        marginBottom: 5,\r\n        marginLeft: 20,\r\n        marginRight: 30,\r\n        paddingLeft: 10,\r\n        color: 'white',\r\n        fontWeight: \"bold\",\r\n    },\r\n    footerLink: {\r\n        color: \"#788eec\",\r\n        fontWeight: \"bold\",\r\n        fontSize: 16\r\n    }\r\n});\r\n\r\n\r\nexport default PlayerRegistrationScreen;"]},"metadata":{},"sourceType":"module"}