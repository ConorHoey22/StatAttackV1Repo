{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\StatsAppNative\\\\MyApp\\\\screens\\\\LoginScreen\\\\LoginScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useEffect, useState, Component } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { useNavigation } from '@react-navigation/native';\nimport { createAppContainer } from 'react-navigation';\nimport { createStackNavigator } from 'react-navigation-stack';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\nimport SmartPicker from 'react-native-smart-picker';\nvar screenWidth = Dimensions.get('window').width;\nvar screenHeight = Dimensions.get('window').height;\n\nvar LoginScreen = function (_Component) {\n  _inherits(LoginScreen, _Component);\n\n  var _super = _createSuper(LoginScreen);\n\n  function LoginScreen(props) {\n    var _this;\n\n    _classCallCheck(this, LoginScreen);\n\n    _this = _super.call(this, props);\n\n    _this.onLogin = function _callee() {\n      var email, password;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              email = _this.state.email;\n              password = _this.state.password;\n\n              if (_this.state.email == '' || _this.state.password == '') {\n                alert('Enter details to signin!');\n              } else {\n                _this.setState({\n                  isLoading: true\n                });\n\n                firebase.auth().signInWithEmailAndPassword(email, password).then(function () {\n                  return _this.props.navigation.navigate('Home');\n                }).catch(function (error) {\n                  return alert(error.toString(error));\n                });\n              }\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      email: '',\n      password: '',\n      selectedPlayer: '',\n      dataList: [],\n      SelectedStartingTeam: []\n    };\n    return _this;\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.state.SelectedStartingTeam.push({\n        fullname: 'Cpme',\n        UserID: 11\n      });\n      console.log(this.state.SelectedStartingTeam);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ScrollView, {\n        style: \"Your custom styles here\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1,\n          marginTop: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }\n      }, React.createElement(ScrollView, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 15\n        }\n      }, React.createElement(SmartPicker, {\n        selectedValue: this.state.selectedPlayer,\n        label: \"Set you favorite country\",\n        onValueChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 17\n        }\n      }, React.createElement(Picker.Item, {\n        label: \"Austria\",\n        value: \"A\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 19\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"Czechia\",\n        value: \"CZ\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 19\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"Germany\",\n        value: \"DE\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 19\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"Poland\",\n        value: \"PL\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 19\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"Slovakia\",\n        value: \"SLO\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 19\n        }\n      })))));\n    }\n  }]);\n\n  return LoginScreen;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#252626'\n  },\n  card: {\n    borderWidth: 1,\n    height: '100%',\n    width: '100%',\n    borderColor: \"#C30000\",\n    borderRadius: 10,\n    backgroundColor: \"#ffffff\",\n    marginTop: 10,\n    marginLeft: 4\n  },\n  logo: {\n    flex: 1,\n    height: 120,\n    width: 90,\n    alignSelf: \"center\",\n    margin: 30\n  },\n  input: {\n    height: 60,\n    borderRadius: 5,\n    overflow: 'hidden',\n    backgroundColor: 'white',\n    marginTop: 10,\n    marginBottom: 10,\n    marginLeft: 30,\n    marginRight: 30,\n    paddingLeft: 16\n  },\n  button: {\n    backgroundColor: '#C30000',\n    marginLeft: 30,\n    marginRight: 50,\n    marginTop: 20,\n    height: 48,\n    width: 150,\n    borderRadius: 5,\n    borderWidth: 2,\n    borderColor: '#000000',\n    alignItems: \"center\",\n    justifyContent: 'center'\n  },\n  Text: {\n    color: \"white\",\n    fontSize: 15,\n    marginTop: 10,\n    marginBottom: 10,\n    marginLeft: 16,\n    marginRight: 30,\n    paddingLeft: 16,\n    fontWeight: \"bold\"\n  },\n  footerView: {\n    flex: 1,\n    alignItems: \"center\",\n    marginTop: 20\n  },\n  footerText: {\n    fontSize: 18,\n    height: 30,\n    marginTop: 15,\n    marginBottom: 5,\n    marginLeft: 20,\n    marginRight: 30,\n    paddingLeft: 10,\n    color: 'white',\n    fontWeight: \"bold\"\n  },\n  footerLink: {\n    color: \"#788eec\",\n    fontWeight: \"bold\",\n    fontSize: 16\n  },\n  test: {\n    backgroundColor: '#000000',\n    borderWidth: 4,\n    borderColor: '#949494',\n    borderRadius: 6\n  }\n});\nexport default LoginScreen;","map":{"version":3,"sources":["D:/StatsAppNative/MyApp/screens/LoginScreen/LoginScreen.js"],"names":["React","useEffect","useState","Component","firebase","useNavigation","createAppContainer","createStackNavigator","widthPercentageToDP","wp","heightPercentageToDP","hp","SmartPicker","screenWidth","Dimensions","get","width","screenHeight","height","LoginScreen","props","onLogin","email","state","password","alert","setState","isLoading","auth","signInWithEmailAndPassword","then","navigation","navigate","catch","error","toString","selectedPlayer","dataList","SelectedStartingTeam","push","fullname","UserID","console","log","flex","marginTop","styles","container","handleChange","StyleSheet","create","backgroundColor","card","borderWidth","borderColor","borderRadius","marginLeft","logo","alignSelf","margin","input","overflow","marginBottom","marginRight","paddingLeft","button","alignItems","justifyContent","Text","color","fontSize","fontWeight","footerView","footerText","footerLink","test"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, Component } from 'react'\r\nimport { ScrollView,Image, Text, TextInput,StyleSheet, TouchableOpacity, View ,Button } from 'react-native'\r\n\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\n\r\nimport {Dimensions} from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { createAppContainer } from 'react-navigation';\r\nimport { createStackNavigator } from 'react-navigation-stack';\r\n\r\nimport {widthPercentageToDP as wp, heightPercentageToDP as hp} from 'react-native-responsive-screen';\r\n\r\nimport SmartPicker from 'react-native-smart-picker'\r\n \r\nconst screenWidth = Dimensions.get('window').width;\r\n\r\nconst screenHeight = Dimensions.get('window').height;\r\n\r\n\r\nclass LoginScreen extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            email: '',\r\n            password: '',\r\n            selectedPlayer:'',\r\n            dataList:[],\r\n            \r\n\r\n            SelectedStartingTeam: []\r\n          \r\n         };\r\n      }\r\n\r\n    componentDidMount(){\r\n      this.state.SelectedStartingTeam.push({\r\n       fullname: 'Cpme',\r\n       UserID: 11\r\n        \r\n    });\r\n\r\n\r\n    console.log(this.state.SelectedStartingTeam);\r\n\r\n    }\r\n\r\n    onLogin = async() => {\r\n\r\n        const email = this.state.email;\r\n        const password = this.state.password;\r\n\r\n\r\n        if(this.state.email == '' || this.state.password == '') {\r\n          alert('Enter details to signin!')\r\n        } else {\r\n          this.setState({\r\n            isLoading: true,\r\n          });\r\n\r\n\r\n         \r\n    \r\n            firebase.auth()\r\n                .signInWithEmailAndPassword(email, password)\r\n                .then(() => this.props.navigation.navigate('Home'))\r\n                .catch(error => alert(error.toString(error)));\r\n\r\n                  \r\n\r\n                  \r\n            \r\n        }\r\n    \r\n\r\n  }\r\n\r\n\r\n  \r\n\r\n\r\n\r\n\r\n            \r\n\r\n\r\n    render (){\r\n\r\n    \r\n\r\n\r\n          \r\n\r\n        \r\n        return(\r\n            \r\n\r\n          \r\n            // <ScrollView style={styles.container}>\r\n            //  <Text style={styles.Text}> Please enter your email:</Text>\r\n            //   <TextInput\r\n            //       name='email'\r\n            //       style={styles.input}\r\n            //       placeholderTextColor=\"#aaaaaa\"\r\n            //       placeholder='Please enter your email'\r\n            //       onChangeText={(text) => this.setState({email:text})}\r\n            //       value={this.state.email}\r\n            //       underlineColorAndroid=\"transparent\"\r\n            //       autoCapitalize=\"none\"\r\n            //   />\r\n            //   <Text style={styles.Text}> Please enter your password:</Text>\r\n            //   <TextInput\r\n            //       name='password'\r\n            //       style={styles.input}\r\n            //       placeholderTextColor=\"#aaaaaa\"\r\n            //       secureTextEntry\r\n            //       placeholder='Password'\r\n            \r\n            //       onChangeText={(text) => this.setState({password:text})}\r\n            //       value={this.state.password}\r\n            //       underlineColorAndroid=\"transparent\"\r\n            //       autoCapitalize=\"none\"\r\n            //   /> \r\n                            \r\n            //  <TouchableOpacity style={styles.button} onPress={this.onLogin}>\r\n            //       <Text style={styles.Text}>Login</Text>\r\n            //   </TouchableOpacity>  \r\n          \r\n\r\n\r\n\r\n            // </ScrollView>\r\n\r\n            <ScrollView style={\"Your custom styles here\"}>\r\n            <View style={{flex: 1, marginTop: 20}}>\r\n              <ScrollView style={styles.container}>\r\n                <SmartPicker\r\n                  selectedValue={this.state.selectedPlayer}\r\n                  label='Set you favorite country'\r\n                 onValueChange={this.handleChange}\r\n                >\r\n                  <Picker.Item label='Austria' value='A' />\r\n                  <Picker.Item label='Czechia' value='CZ' />\r\n                  <Picker.Item label='Germany' value='DE' />\r\n                  <Picker.Item label='Poland' value='PL' />\r\n                  <Picker.Item label='Slovakia' value='SLO' />\r\n                </SmartPicker>\r\n              </ScrollView>\r\n            </View>\r\n          </ScrollView>\r\n\r\n        )\r\n\r\n    \r\n\r\n  }\r\n\r\n}\r\n\r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: '#252626',\r\n  \r\n    },\r\n\r\n    card:{\r\n      borderWidth: 1,\r\n      height:'100%',\r\n      width: '100%',\r\n      borderColor: \"#C30000\",\r\n      borderRadius: 10,\r\n      backgroundColor: \"#ffffff\",\r\n      marginTop: 10,\r\n      marginLeft: 4\r\n    },\r\n    logo: {\r\n        flex: 1,\r\n        height: 120,\r\n        width: 90,\r\n        alignSelf: \"center\",\r\n        margin: 30\r\n    },\r\n    input: {\r\n        height: 60,\r\n        borderRadius: 5,\r\n        overflow: 'hidden',\r\n        backgroundColor: 'white',\r\n        marginTop: 10,\r\n        marginBottom: 10,\r\n        marginLeft: 30,\r\n        marginRight: 30,\r\n        paddingLeft: 16\r\n    },\r\n    button: {\r\n        backgroundColor: '#C30000',\r\n        marginLeft: 30,\r\n        marginRight: 50,\r\n        marginTop: 20,\r\n        height: 48,\r\n        width:150,\r\n        borderRadius: 5,\r\n        borderWidth: 2,\r\n        borderColor:'#000000',\r\n        alignItems: \"center\",\r\n        justifyContent: 'center'\r\n    },\r\n    Text:{\r\n      color: \"white\",\r\n      fontSize:15,\r\n      marginTop: 10,\r\n      marginBottom: 10,\r\n      marginLeft: 16,\r\n      marginRight: 30,\r\n      paddingLeft: 16,\r\n      fontWeight: \"bold\",\r\n     \r\n  \r\n  },\r\n    footerView: {\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        marginTop: 20\r\n    },\r\n    footerText: {\r\n        fontSize:18,\r\n        height: 30,\r\n        marginTop: 15,\r\n        marginBottom: 5,\r\n        marginLeft: 20,\r\n        marginRight: 30,\r\n        paddingLeft: 10,\r\n        color: 'white',\r\n        fontWeight: \"bold\",\r\n    },\r\n    footerLink: {\r\n        color: \"#788eec\",\r\n        fontWeight: \"bold\",\r\n        fontSize: 16\r\n    },\r\n\r\n\r\n  \r\n  \r\n   \r\n    test: {\r\n      backgroundColor: '#000000',\r\n      borderWidth: 4,\r\n      borderColor:'#949494',\r\n      borderRadius: 6,\r\n    }\r\n  });\r\n\r\nexport default LoginScreen;"]},"metadata":{},"sourceType":"module"}