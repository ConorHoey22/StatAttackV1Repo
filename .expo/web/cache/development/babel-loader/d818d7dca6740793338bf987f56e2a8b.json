{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\StatsAppNative\\\\MyApp\\\\screens\\\\PlayerRegistrationScreen\\\\PlayerRegistrationScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useEffect, useState, Component } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport { ThemeColors } from 'react-navigation';\nimport { useNavigation } from '@react-navigation/native';\nimport { createAppContainer } from 'react-navigation';\nimport { createStackNavigator } from 'react-navigation-stack';\nimport { TouchableNativeFeedbackBase } from \"react-native-web/dist/index\";\n\nvar PlayerRegistrationScreen = function (_Component) {\n  _inherits(PlayerRegistrationScreen, _Component);\n\n  var _super = _createSuper(PlayerRegistrationScreen);\n\n  function PlayerRegistrationScreen(props) {\n    var _this;\n\n    _classCallCheck(this, PlayerRegistrationScreen);\n\n    _this = _super.call(this, props);\n\n    _this.updateInputVal = function (val, prop) {\n      var state = _this.state;\n      state[prop] = val;\n\n      _this.setState(state);\n    };\n\n    _this.ExistingSignUp = function () {\n      var _this$state = _this.state,\n          fullName = _this$state.fullName,\n          email = _this$state.email,\n          password = _this$state.password,\n          inviteCode = _this$state.inviteCode,\n          sportType = _this$state.sportType;\n\n      if (fullName.length > 0) {} else {\n        alert(\"Please enter your full name.\");\n      }\n\n      if (_this.state.password !== _this.state.confirmPassword) {\n        alert(\"Passwords don't match.\");\n        return;\n      }\n\n      if (sportType == '') {\n        alert(\"Please select a sport\");\n      }\n\n      var teaminvitecode = _this.state.teaminvitecode;\n      var userteaminvitecode = firebase.database().ref('/users').orderByChild(\"teaminvitecode\").equalTo(teaminvitecode).once('value').then(function (snapshot) {\n        snapshot.forEach(function (childSnapshot) {\n          var value = childSnapshot.val();\n          var HA_ID = value.id;\n          var find = firebase.database().ref('teams').child(HA_ID).child('players').orderByChild('inviteCode').equalTo(inviteCode).once('value').then(function (snapshot1) {\n            snapshot1.forEach(function (childSnapshot1) {\n              var _this2 = this;\n\n              var value1 = childSnapshot1.val();\n              var dd = value1.Verified;\n\n              if (value1.Verified == false) {\n                firebase.auth().createUserWithEmailAndPassword(email, password).then(function (response) {\n                  var uid = response.user.uid;\n                  var userType = \"Player\";\n                  var data = {\n                    id: uid,\n                    email: email,\n                    fullName: fullName,\n                    userType: userType,\n                    sportType: sportType,\n                    inviteCode: inviteCode,\n                    totalGoals: 0,\n                    totalPoints: 0,\n                    totalPasses: 0,\n                    totalShots: 0,\n                    totalShotsOnTarget: 0,\n                    totalTackles: 0,\n                    totalWonTheBall: 0,\n                    totalLostTheBall: 0,\n                    totalYellowCards: 0,\n                    totalRedCards: 0,\n                    totalAssists: 0\n                  };\n                  var usersRef = firebase.database().ref('users/' + uid);\n                  usersRef.set(data).then(function () {});\n                  childSnapshot1.ref.update({\n                    UserID: data.id,\n                    Verified: true,\n                    inviteCode: ''\n                  });\n                  alert('Account Created Successfully. Try to logging in', _this2.props.navigation.navigate('Login'));\n                });\n              } else {\n                alert('This player account has already been activated. Please contact you team admin.');\n              }\n            });\n          });\n        });\n      });\n    };\n\n    _this.NewAccountSignUp = function () {\n      var _this$state2 = _this.state,\n          fullName = _this$state2.fullName,\n          email = _this$state2.email,\n          password = _this$state2.password,\n          inviteCode = _this$state2.inviteCode,\n          sportType = _this$state2.sportType;\n\n      if (fullName.length > 0) {} else {\n        alert(\"Please enter your full name.\");\n      }\n\n      if (_this.state.password !== _this.state.confirmPassword) {\n        alert(\"Passwords don't match.\");\n        return;\n      }\n\n      if (sportType == '') {\n        alert(\"Please select a sport\");\n      }\n\n      firebase.auth().createUserWithEmailAndPassword(email, password).then(function (response) {\n        var uid = response.uid;\n        var userType = \"Player\";\n        var data = {\n          id: uid,\n          email: email,\n          fullName: fullName,\n          userType: userType,\n          sportType: sportType,\n          totalGoals: 0,\n          totalPoints: 0,\n          totalPasses: 0,\n          totalShots: 0,\n          totalShotsOnTarget: 0,\n          totalTackles: 0,\n          totalWonTheBall: 0,\n          totalLostTheBall: 0,\n          totalYellowCards: 0,\n          totalRedCards: 0,\n          totalAssists: 0\n        };\n        var usersRef = firebase.database().ref('users/' + uid);\n        usersRef.set(data).then(function () {\n          return alert(\"Account Created\", _this.props.navigation.navigate('Login'));\n        });\n      });\n    };\n\n    _this.SignUpOptionExistingAcccount = function () {\n      _this.setState({\n        displayOptions: false\n      });\n\n      _this.setState({\n        displayExistingSignup: true\n      });\n\n      _this.setState({\n        displayNewAccountSignup: false\n      });\n    };\n\n    _this.SignUpOptionNewAccount = function () {\n      _this.setState({\n        displayOptions: false\n      });\n\n      _this.setState({\n        displayExistingSignup: false\n      });\n\n      _this.setState({\n        displayNewAccountSignup: true\n      });\n    };\n\n    _this.state = {\n      fullName: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      inviteCode: '',\n      sportType: '',\n      teaminvitecode: '',\n      isLoading: false,\n      displayOptions: true,\n      displayExistingSignup: false,\n      displayNewAccountSignup: false\n    };\n    return _this;\n  }\n\n  _createClass(PlayerRegistrationScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var options;\n\n      if (this.state.displayOptions == true) {\n        options = React.createElement(ScrollView, {\n          style: stylesPlayerReg.container,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 17\n          }\n        }, React.createElement(Text, {\n          style: stylesPlayerReg.footerText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 19\n          }\n        }, \"Has your team already created a temporary player account for you? If so click the below!\"), React.createElement(TouchableOpacity, {\n          style: stylesPlayerReg.button,\n          onPress: this.SignUpOptionExistingAcccount,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 29\n          }\n        }, React.createElement(Text, {\n          style: stylesPlayerReg.buttonTitle,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 33\n          }\n        }, \"Existing Player account\")), React.createElement(Text, {\n          style: stylesPlayerReg.footerText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 29\n          }\n        }, \"Click below if you want to create a new player account!\"), React.createElement(TouchableOpacity, {\n          style: stylesPlayerReg.button,\n          onPress: this.SignUpOptionNewAccount,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 29\n          }\n        }, React.createElement(Text, {\n          style: stylesPlayerReg.buttonTitle,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 33\n          }\n        }, \"New Player Account\")));\n      }\n\n      if (this.state.displayExistingSignup == true) {\n        options = React.createElement(ScrollView, {\n          style: stylesPlayerReg.container,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 17\n          }\n        }, React.createElement(Text, {\n          style: stylesPlayerReg.footerText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 17\n          }\n        }, \" Please enter your full name:\"), React.createElement(TextInput, {\n          style: stylesPlayerReg.input,\n          placeholderTextColor: \"#aaaaaa\",\n          placeholder: \"Please enter your full name\",\n          onChangeText: function onChangeText(text) {\n            return _this3.setState({\n              fullName: text\n            });\n          },\n          value: this.state.fullName,\n          underlineColorAndroid: \"transparent\",\n          autoCapitalize: \"none\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 17\n          }\n        }), React.createElement(Text, {\n          style: stylesPlayerReg.footerText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 17\n          }\n        }, \" Please enter your email:\"), React.createElement(TextInput, {\n          style: stylesPlayerReg.input,\n          placeholderTextColor: \"#aaaaaa\",\n          placeholder: \"Please enter your email\",\n          onChangeText: function onChangeText(text) {\n            return _this3.setState({\n              email: text\n            });\n          },\n          value: this.state.email,\n          underlineColorAndroid: \"transparent\",\n          autoCapitalize: \"none\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 17\n          }\n        }), React.createElement(Text, {\n          style: stylesPlayerReg.footerText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 17\n          }\n        }, \" Please enter your password:\"), React.createElement(TextInput, {\n          style: stylesPlayerReg.input,\n          placeholderTextColor: \"#aaaaaa\",\n          secureTextEntry: true,\n          placeholder: \"Password\",\n          onChangeText: function onChangeText(text) {\n            return _this3.setState({\n              password: text\n            });\n          },\n          value: this.state.password,\n          underlineColorAndroid: \"transparent\",\n          autoCapitalize: \"none\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 17\n          }\n        }), React.createElement(Text, {\n          style: stylesPlayerReg.footerText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 18\n          }\n        }, \" Please confirm your password:\"), React.createElement(TextInput, {\n          style: stylesPlayerReg.input,\n          placeholderTextColor: \"#aaaaaa\",\n          secureTextEntry: true,\n          placeholder: \"Confirm Password\",\n          onChangeText: function onChangeText(text) {\n            return _this3.setState({\n              confirmPassword: text\n            });\n          },\n          value: this.state.confirmPassword,\n          underlineColorAndroid: \"transparent\",\n          autoCapitalize: \"none\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 17\n          }\n        }), React.createElement(Text, {\n          style: stylesPlayerReg.footerText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 17\n          }\n        }, \" Please confirm your sport:\"), React.createElement(Picker, {\n          selectedValue: this.state.sportType,\n          style: stylesPlayerReg.input,\n          onValueChange: function onValueChange(text) {\n            return _this3.setState({\n              sportType: text\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 17\n          }\n        }, React.createElement(Picker.Item, {\n          label: \"Select a sport\",\n          value: \"\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 29\n          }\n        }), React.createElement(Picker.Item, {\n          label: \"GAA\",\n          value: \"GAA\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 29\n          }\n        }), React.createElement(Picker.Item, {\n          label: \"Soccer\",\n          value: \"Soccer\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 29\n          }\n        })), React.createElement(Text, {\n          style: stylesPlayerReg.footerText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 17\n          }\n        }, \"Please enter your \\\"PLAYER\\\" invite code. This can be obtained from your Team Analyst:\"), React.createElement(TextInput, {\n          style: stylesPlayerReg.input,\n          placeholderTextColor: \"#aaaaaa\",\n          placeholder: \"Please enter your Player invite code\",\n          onChangeText: function onChangeText(text) {\n            return _this3.setState({\n              inviteCode: text\n            });\n          },\n          value: this.state.inviteCode,\n          underlineColorAndroid: \"transparent\",\n          autoCapitalize: \"none\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 17\n          }\n        }), React.createElement(Text, {\n          style: stylesPlayerReg.footerText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 17\n          }\n        }, \"Please enter your \\\"TEAM\\\" invite code. This can be obtained from your Team Analyst:\"), React.createElement(TextInput, {\n          style: stylesPlayerReg.input,\n          placeholderTextColor: \"#aaaaaa\",\n          placeholder: \"Please enter your Teaminvite code\",\n          onChangeText: function onChangeText(text) {\n            return _this3.setState({\n              teaminvitecode: text\n            });\n          },\n          value: this.state.teaminvitecode,\n          underlineColorAndroid: \"transparent\",\n          autoCapitalize: \"none\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 17\n          }\n        }), React.createElement(View, {\n          style: stylesPlayerReg.footerView,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 17\n          }\n        }, React.createElement(TouchableOpacity, {\n          style: stylesPlayerReg.button,\n          onPress: this.ExistingSignUp,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 21\n          }\n        }, React.createElement(Text, {\n          style: stylesPlayerReg.buttonTitle,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 21\n          }\n        }, \"Sign up!\"))));\n      }\n\n      if (this.state.displayNewAccountSignup == true) {\n        options = React.createElement(ScrollView, {\n          style: stylesPlayerReg.container,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 17\n          }\n        }, React.createElement(Text, {\n          style: stylesPlayerReg.footerText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 17\n          }\n        }, \" New Account\"), React.createElement(Text, {\n          style: stylesPlayerReg.footerText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 17\n          }\n        }, \" Please enter your full name:\"), React.createElement(TextInput, {\n          style: stylesPlayerReg.input,\n          placeholderTextColor: \"#aaaaaa\",\n          placeholder: \"Please enter your full name\",\n          onChangeText: function onChangeText(text) {\n            return _this3.setState({\n              fullName: text\n            });\n          },\n          value: this.state.fullName,\n          underlineColorAndroid: \"transparent\",\n          autoCapitalize: \"none\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 17\n          }\n        }), React.createElement(Text, {\n          style: stylesPlayerReg.footerText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 17\n          }\n        }, \" Please enter your email:\"), React.createElement(TextInput, {\n          style: stylesPlayerReg.input,\n          placeholderTextColor: \"#aaaaaa\",\n          placeholder: \"Please enter your email\",\n          onChangeText: function onChangeText(text) {\n            return _this3.setState({\n              email: text\n            });\n          },\n          value: this.state.email,\n          underlineColorAndroid: \"transparent\",\n          autoCapitalize: \"none\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 17\n          }\n        }), React.createElement(Text, {\n          style: stylesPlayerReg.footerText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 17\n          }\n        }, \" Please enter your password:\"), React.createElement(TextInput, {\n          style: stylesPlayerReg.input,\n          placeholderTextColor: \"#aaaaaa\",\n          secureTextEntry: true,\n          placeholder: \"Password\",\n          onChangeText: function onChangeText(text) {\n            return _this3.setState({\n              password: text\n            });\n          },\n          value: this.state.password,\n          underlineColorAndroid: \"transparent\",\n          autoCapitalize: \"none\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 17\n          }\n        }), React.createElement(Text, {\n          style: stylesPlayerReg.footerText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 18\n          }\n        }, \" Please confirm your password:\"), React.createElement(TextInput, {\n          style: stylesPlayerReg.input,\n          placeholderTextColor: \"#aaaaaa\",\n          secureTextEntry: true,\n          placeholder: \"Confirm Password\",\n          onChangeText: function onChangeText(text) {\n            return _this3.setState({\n              confirmPassword: text\n            });\n          },\n          value: this.state.confirmPassword,\n          underlineColorAndroid: \"transparent\",\n          autoCapitalize: \"none\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 17\n          }\n        }), React.createElement(Text, {\n          style: stylesPlayerReg.footerText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 17\n          }\n        }, \" Please confirm your sport:\"), React.createElement(Picker, {\n          selectedValue: this.state.sportType,\n          style: stylesPlayerReg.input,\n          onValueChange: function onValueChange(text) {\n            return _this3.setState({\n              sportType: text\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 17\n          }\n        }, React.createElement(Picker.Item, {\n          label: \"Select a sport\",\n          value: \"\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 29\n          }\n        }), React.createElement(Picker.Item, {\n          label: \"GAA\",\n          value: \"GAA\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 29\n          }\n        }), React.createElement(Picker.Item, {\n          label: \"Soccer\",\n          value: \"Soccer\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 29\n          }\n        })), React.createElement(View, {\n          style: stylesPlayerReg.footerView,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 17\n          }\n        }, React.createElement(TouchableOpacity, {\n          style: stylesPlayerReg.button,\n          onPress: this.NewAccountSignUp,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 21\n          }\n        }, React.createElement(Text, {\n          style: stylesPlayerReg.buttonTitle,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 25\n          }\n        }, \"Sign up!\"))));\n      }\n\n      return React.createElement(ScrollView, {\n        style: stylesPlayerReg.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 6\n        }\n      }, options);\n    }\n  }]);\n\n  return PlayerRegistrationScreen;\n}(Component);\n\nvar stylesPlayerReg = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#252626'\n  },\n  title: {},\n  logo: {\n    flex: 1,\n    height: 120,\n    width: 90,\n    alignSelf: \"center\",\n    margin: 30\n  },\n  input: {\n    height: 48,\n    borderRadius: 5,\n    overflow: 'hidden',\n    backgroundColor: 'white',\n    marginTop: 10,\n    marginBottom: 10,\n    marginLeft: 30,\n    marginRight: 30,\n    paddingLeft: 16\n  },\n  button: {\n    backgroundColor: '#FF6D01',\n    marginLeft: 30,\n    marginRight: 30,\n    marginTop: 20,\n    height: 48,\n    borderRadius: 5,\n    alignItems: \"center\",\n    justifyContent: 'center'\n  },\n  buttonTitle: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: \"bold\"\n  },\n  footerView: {\n    flex: 1,\n    alignItems: \"center\",\n    marginTop: 20\n  },\n  footerText: {\n    fontSize: 18,\n    height: 30,\n    marginTop: 15,\n    marginBottom: 5,\n    marginLeft: 20,\n    marginRight: 30,\n    paddingLeft: 10,\n    color: 'white',\n    fontWeight: \"bold\"\n  },\n  footerLink: {\n    color: \"#788eec\",\n    fontWeight: \"bold\",\n    fontSize: 16\n  }\n});\nexport default PlayerRegistrationScreen;","map":{"version":3,"sources":["D:/StatsAppNative/MyApp/screens/PlayerRegistrationScreen/PlayerRegistrationScreen.js"],"names":["React","useEffect","useState","Component","firebase","ThemeColors","useNavigation","createAppContainer","createStackNavigator","TouchableNativeFeedbackBase","PlayerRegistrationScreen","props","updateInputVal","val","prop","state","setState","ExistingSignUp","fullName","email","password","inviteCode","sportType","length","alert","confirmPassword","teaminvitecode","userteaminvitecode","database","ref","orderByChild","equalTo","once","then","snapshot","forEach","childSnapshot","value","HA_ID","id","find","child","snapshot1","childSnapshot1","value1","dd","Verified","auth","createUserWithEmailAndPassword","response","uid","user","userType","data","totalGoals","totalPoints","totalPasses","totalShots","totalShotsOnTarget","totalTackles","totalWonTheBall","totalLostTheBall","totalYellowCards","totalRedCards","totalAssists","usersRef","set","update","UserID","navigation","navigate","NewAccountSignUp","SignUpOptionExistingAcccount","displayOptions","displayExistingSignup","displayNewAccountSignup","SignUpOptionNewAccount","isLoading","options","stylesPlayerReg","container","footerText","button","buttonTitle","input","text","footerView","StyleSheet","create","flex","backgroundColor","title","logo","height","width","alignSelf","margin","borderRadius","overflow","marginTop","marginBottom","marginLeft","marginRight","paddingLeft","alignItems","justifyContent","color","fontSize","fontWeight","footerLink"],"mappings":"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","sourcesContent":["import React, { useEffect, useState , Component  } from 'react'\r\nimport {FlatList, Keyboard,  StyleSheet, Text, ScrollView ,View , TouchableOpacity,TextInput ,Picker, Button , Alert} from 'react-native'\r\n\r\n// import * as firebase from 'firebase/app';\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\nimport { ThemeColors } from 'react-navigation';\r\n\r\n\r\n\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { createAppContainer } from 'react-navigation';\r\nimport { createStackNavigator } from 'react-navigation-stack';\r\nimport { TouchableNativeFeedbackBase } from 'react-native';\r\n\r\n\r\n\r\nclass PlayerRegistrationScreen extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.state = {\r\n            fullName: '',\r\n            email: '', \r\n            password: '',\r\n            confirmPassword:'',\r\n            inviteCode:'',\r\n            sportType:'',\r\n            teaminvitecode:'',\r\n            isLoading: false,\r\n            displayOptions: true,\r\n            displayExistingSignup: false,\r\n            displayNewAccountSignup:false,\r\n        }\r\n\r\n\r\n  \r\n    \r\n    }\r\n\r\n\r\n\r\n\r\n    updateInputVal = (val, prop) => {\r\n        const state = this.state;\r\n        state[prop] = val;\r\n        this.setState(state);\r\n      }\r\n    \r\n    \r\n\r\n\r\n\r\n    ExistingSignUp = () => {\r\n\r\n\r\n        //When someone creates account using the same Teaminvitecode and playercode which has already been created before/ used? \r\n            //What should be prompt\r\n            //What is the current process looking like , are they able to join a team or are they added to the team??\r\n                \r\n\r\n      \r\n        const { fullName, email, password , inviteCode , sportType} = this.state\r\n\r\n\r\n  \r\n            if (fullName.length > 0) {\r\n                \r\n                     \r\n            }\r\n            else\r\n            {\r\n                alert(\"Please enter your full name.\")\r\n            }\r\n\r\n       \r\n            //  Password confirmation Check\r\n            if (this.state.password !== this.state.confirmPassword) {\r\n                alert(\"Passwords don't match.\")\r\n                return\r\n            }\r\n\r\n\r\n            if(sportType == '')\r\n            {\r\n                alert(\"Please select a sport\")\r\n            }\r\n\r\n        //GET team An UID by have a matching Team Invite code entered by the user\r\n        var teaminvitecode = this.state.teaminvitecode;\r\n\r\n        \r\n\r\n            \r\n        const userteaminvitecode = firebase.database().ref('/users').orderByChild(\"teaminvitecode\").equalTo(teaminvitecode)\r\n             .once('value').then(function(snapshot) {\r\n\r\n                snapshot.forEach(function (childSnapshot) {\r\n\r\n                var value = childSnapshot.val();\r\n                var HA_ID = value.id;\r\n\r\n                    //Find matching team player record \r\n                    const find = firebase.database().ref('teams').child(HA_ID).child('players').orderByChild('inviteCode').equalTo(inviteCode)\r\n                        .once('value').then(function(snapshot1)  {\r\n\r\n                            snapshot1.forEach(function (childSnapshot1) {\r\n                            \r\n                                var value1 = childSnapshot1.val();\r\n\r\n                                var dd = value1.Verified;\r\n\r\n                                if(value1.Verified == false)\r\n                                {\r\n                                    // Create user\r\n                                            firebase\r\n                                            .auth()\r\n                                            .createUserWithEmailAndPassword(email, password)\r\n                                            .then((response) => {\r\n                                                const uid = response.user.uid\r\n                                                const userType = \"Player\"\r\n                                                const data = {\r\n                                                    id: uid,\r\n                                                    email: email,\r\n                                                    fullName: fullName,\r\n                                                    userType:   userType,\r\n                                                    sportType: sportType,\r\n                                                    inviteCode: inviteCode,\r\n                                                    totalGoals:0,\r\n                                                    totalPoints:0,\r\n                                                    totalPasses: 0,\r\n                                                    totalShots:0,\r\n                                                    totalShotsOnTarget:0,\r\n                                                    totalTackles:0,\r\n                                                    totalWonTheBall:0,\r\n                                                    totalLostTheBall:0,\r\n                                                    totalYellowCards:0,\r\n                                                    totalRedCards:0,\r\n                                                    totalAssists:0\r\n                                                };\r\n                                    \r\n\r\n                                            const usersRef = firebase.database().ref('users/' + uid)\r\n                                                    usersRef\r\n                                                        .set(data)\r\n                                                        .then(() => {\r\n                                                            // this.setState({\r\n                                                            //      isLoading: true,\r\n                                                            //   })\r\n                                                        \r\n\r\n                                        \r\n                                                        });\r\n\r\n                                                        \r\n                                                        childSnapshot1.ref.update({UserID: data.id , Verified: true, inviteCode:''});\r\n                                            \r\n                                                     \r\n                                                     \r\n                                                        alert('Account Created Successfully. Try to logging in', this.props.navigation.navigate('Login'));\r\n                                                        //Send user to Login screen \r\n\r\n\r\n\r\n                                            });\r\n\r\n\r\n                                             \r\n                                }\r\n                                else{\r\n                                    alert('This player account has already been activated. Please contact you team admin.');\r\n                                }\r\n                                \r\n\r\n\r\n                            });\r\n                                \r\n                       \r\n    \r\n                        })\r\n\r\n                })\r\n            })\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    NewAccountSignUp = () => {\r\n        \r\n        const { fullName, email, password , inviteCode, sportType} = this.state\r\n\r\n\r\n\r\n        if (fullName.length > 0) \r\n        {\r\n            \r\n                 \r\n        }\r\n        else\r\n        {\r\n            alert(\"Please enter your full name.\")\r\n        }\r\n     \r\n        //  Password confirmation Check\r\n        if (this.state.password !== this.state.confirmPassword) {\r\n            alert(\"Passwords don't match.\")\r\n            return\r\n        }\r\n\r\n        \r\n        if(sportType == '')\r\n        {\r\n            alert(\"Please select a sport\")\r\n        }\r\n\r\n\r\n\r\n\r\n                // Create user\r\n                            firebase\r\n                            .auth()\r\n                            .createUserWithEmailAndPassword(email, password)\r\n                                .then((response) => {\r\n                                     const uid = response.uid\r\n                                        \r\n                                        const userType = \"Player\"\r\n                                        const data = {\r\n                                            id: uid,\r\n                                            email: email,\r\n                                            fullName: fullName,\r\n                                            userType:  userType,\r\n                                            sportType: sportType,\r\n                                            totalGoals:0,\r\n                                            totalPoints:0,\r\n                                            totalPasses: 0,\r\n                                            totalShots:0,\r\n                                            totalShotsOnTarget:0,\r\n                                            totalTackles:0,\r\n                                            totalWonTheBall:0,\r\n                                            totalLostTheBall:0,\r\n                                            totalYellowCards:0,\r\n                                            totalRedCards:0,\r\n                                            totalAssists:0\r\n\r\n                                        };\r\n                                \r\n\r\n                                        const usersRef = firebase.database().ref('users/' + uid)\r\n                                            usersRef\r\n                                                .set(data)\r\n                                                    .then(() => {\r\n                                                        \r\n                                                         return alert(\"Account Created\", this.props.navigation.navigate('Login'));\r\n                                    \r\n                                                    });\r\n                                    \r\n                                        });\r\n\r\n    }\r\n\r\n\r\n    SignUpOptionExistingAcccount = () => {\r\n\r\n        this.setState({displayOptions: false});\r\n        this.setState({displayExistingSignup: true});\r\n        this.setState({displayNewAccountSignup: false});\r\n    }\r\n\r\n\r\n    SignUpOptionNewAccount = () => {\r\n\r\n        this.setState({displayOptions: false});\r\n        this.setState({displayExistingSignup: false});\r\n        this.setState({displayNewAccountSignup: true});\r\n    }\r\n\r\n\r\n    render(){\r\n\r\n        //Option - Has your Team set up your Player Account - If click Existing Player\r\n\r\n        //Option - New Player Account\r\n\r\n        var options;\r\n\r\n        if(this.state.displayOptions == true)\r\n        {\r\n            options = (\r\n                <ScrollView style={stylesPlayerReg.container}>\r\n                  \r\n                  <Text style={stylesPlayerReg.footerText}>Has your team already created a temporary player account for you? If so click the below!</Text>\r\n\r\n                  \r\n                            <TouchableOpacity style={stylesPlayerReg.button} onPress={this.SignUpOptionExistingAcccount}>\r\n                                <Text style={stylesPlayerReg.buttonTitle}>Existing Player account</Text>\r\n                            </TouchableOpacity>\r\n                   \r\n\r\n        \r\n                            <Text style={stylesPlayerReg.footerText}>Click below if you want to create a new player account!</Text>\r\n\r\n               \r\n                            <TouchableOpacity style={stylesPlayerReg.button} onPress={this.SignUpOptionNewAccount}>\r\n                                <Text style={stylesPlayerReg.buttonTitle}>New Player Account</Text>\r\n                            </TouchableOpacity>\r\n                   \r\n\r\n\r\n                </ScrollView>\r\n\r\n            )\r\n        }\r\n\r\n        if(this.state.displayExistingSignup == true)\r\n        {\r\n            options = (\r\n                <ScrollView style={stylesPlayerReg.container}>\r\n                <Text style={stylesPlayerReg.footerText}> Please enter your full name:</Text>\r\n                <TextInput\r\n                    style={stylesPlayerReg.input}\r\n                    placeholderTextColor=\"#aaaaaa\"\r\n                    placeholder='Please enter your full name'\r\n                    // onChangeText={(text) => setFullName(text)}\r\n                    onChangeText={(text) => this.setState({fullName:text})}\r\n                    value={this.state.fullName}\r\n                    underlineColorAndroid=\"transparent\"\r\n                    autoCapitalize=\"none\"\r\n                />\r\n\r\n                <Text style={stylesPlayerReg.footerText}> Please enter your email:</Text>\r\n                <TextInput\r\n                    style={stylesPlayerReg.input}\r\n                    placeholderTextColor=\"#aaaaaa\"\r\n                    placeholder='Please enter your email'\r\n                    // onChangeText={(text) => setEmail(text)}\r\n                    onChangeText={(text) => this.setState({email:text})}\r\n                    value={this.state.email}\r\n                    underlineColorAndroid=\"transparent\"\r\n                    autoCapitalize=\"none\"\r\n                />\r\n\r\n                <Text style={stylesPlayerReg.footerText}> Please enter your password:</Text>\r\n                <TextInput\r\n                    style={stylesPlayerReg.input}\r\n                    placeholderTextColor=\"#aaaaaa\"\r\n                    secureTextEntry\r\n                    placeholder='Password'\r\n                    // onChangeText={(text) => setPassword(text)}\r\n                    onChangeText={(text) => this.setState({password:text})}\r\n                    value={this.state.password}\r\n                    underlineColorAndroid=\"transparent\"\r\n                    autoCapitalize=\"none\"\r\n                />\r\n                 <Text style={stylesPlayerReg.footerText}> Please confirm your password:</Text>\r\n                <TextInput\r\n                    style={stylesPlayerReg.input}\r\n                    placeholderTextColor=\"#aaaaaa\"\r\n                    secureTextEntry\r\n                    placeholder='Confirm Password'\r\n                    // onChangeText={(text) => setConfirmPassword(text)}\r\n                    onChangeText={(text) => this.setState({confirmPassword:text})}\r\n                    value={this.state.confirmPassword}\r\n                    underlineColorAndroid=\"transparent\"\r\n                    autoCapitalize=\"none\"\r\n                />\r\n\r\n\r\n                <Text style={stylesPlayerReg.footerText}> Please confirm your sport:</Text>\r\n              \r\n                <Picker\r\n                        selectedValue={this.state.sportType}\r\n                        style={stylesPlayerReg.input}\r\n                        onValueChange={(text) => this.setState({sportType:text})}\r\n                        >\r\n\r\n                            <Picker.Item label=\"Select a sport\" value=\"\" />\r\n                            <Picker.Item label=\"GAA\" value=\"GAA\" />\r\n                            <Picker.Item label=\"Soccer\" value=\"Soccer\"/>\r\n\r\n\r\n                </Picker>\r\n\r\n                <Text style={stylesPlayerReg.footerText}>Please enter your \"PLAYER\" invite code. This can be obtained from your Team Analyst:</Text>\r\n                <TextInput\r\n                    style={stylesPlayerReg.input}\r\n                    placeholderTextColor=\"#aaaaaa\"\r\n                    placeholder='Please enter your Player invite code'\r\n                    // onChangeText={(text) => setInviteCode(text)}\r\n                    onChangeText={(text) => this.setState({inviteCode:text})}\r\n                    value={this.state.inviteCode}\r\n                    underlineColorAndroid=\"transparent\"\r\n                    autoCapitalize=\"none\"\r\n                />\r\n\r\n\r\n                <Text style={stylesPlayerReg.footerText}>Please enter your \"TEAM\" invite code. This can be obtained from your Team Analyst:</Text>\r\n                <TextInput\r\n                    style={stylesPlayerReg.input}\r\n                    placeholderTextColor=\"#aaaaaa\"\r\n                    placeholder='Please enter your Teaminvite code'\r\n                    // onChangeText={(text) => setInviteCode(text)}\r\n                    onChangeText={(text) => this.setState({teaminvitecode:text})}\r\n                    value={this.state.teaminvitecode}\r\n                    underlineColorAndroid=\"transparent\"\r\n                    autoCapitalize=\"none\"\r\n                />\r\n\r\n                <View style={stylesPlayerReg.footerView}>\r\n                    <TouchableOpacity style={stylesPlayerReg.button} onPress={this.ExistingSignUp}>\r\n                    <Text style={stylesPlayerReg.buttonTitle}>Sign up!</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n\r\n\r\n        </ScrollView>\r\n\r\n            );\r\n        }\r\n\r\n        if(this.state.displayNewAccountSignup == true)\r\n        {\r\n            options = (\r\n                <ScrollView style={stylesPlayerReg.container}>\r\n                \r\n                <Text style={stylesPlayerReg.footerText}> New Account</Text>\r\n                <Text style={stylesPlayerReg.footerText}> Please enter your full name:</Text>\r\n                <TextInput\r\n                    style={stylesPlayerReg.input}\r\n                    placeholderTextColor=\"#aaaaaa\"\r\n                    placeholder='Please enter your full name'\r\n                    // onChangeText={(text) => setFullName(text)}\r\n                    onChangeText={(text) => this.setState({fullName:text})}\r\n                    value={this.state.fullName}\r\n                    underlineColorAndroid=\"transparent\"\r\n                    autoCapitalize=\"none\"\r\n                />\r\n\r\n                <Text style={stylesPlayerReg.footerText}> Please enter your email:</Text>\r\n                <TextInput\r\n                    style={stylesPlayerReg.input}\r\n                    placeholderTextColor=\"#aaaaaa\"\r\n                    placeholder='Please enter your email'\r\n                    // onChangeText={(text) => setEmail(text)}\r\n                    onChangeText={(text) => this.setState({email:text})}\r\n                    value={this.state.email}\r\n                    underlineColorAndroid=\"transparent\"\r\n                    autoCapitalize=\"none\"\r\n                />\r\n\r\n                <Text style={stylesPlayerReg.footerText}> Please enter your password:</Text>\r\n                <TextInput\r\n                    style={stylesPlayerReg.input}\r\n                    placeholderTextColor=\"#aaaaaa\"\r\n                    secureTextEntry\r\n                    placeholder='Password'\r\n                    // onChangeText={(text) => setPassword(text)}\r\n                    onChangeText={(text) => this.setState({password:text})}\r\n                    value={this.state.password}\r\n                    underlineColorAndroid=\"transparent\"\r\n                    autoCapitalize=\"none\"\r\n                />\r\n                 <Text style={stylesPlayerReg.footerText}> Please confirm your password:</Text>\r\n                <TextInput\r\n                    style={stylesPlayerReg.input}\r\n                    placeholderTextColor=\"#aaaaaa\"\r\n                    secureTextEntry\r\n                    placeholder='Confirm Password'\r\n                    // onChangeText={(text) => setConfirmPassword(text)}\r\n                    onChangeText={(text) => this.setState({confirmPassword:text})}\r\n                    value={this.state.confirmPassword}\r\n                    underlineColorAndroid=\"transparent\"\r\n                    autoCapitalize=\"none\"\r\n                />\r\n\r\n                <Text style={stylesPlayerReg.footerText}> Please confirm your sport:</Text>\r\n                \r\n                <Picker\r\n                        selectedValue={this.state.sportType}\r\n                        style={stylesPlayerReg.input}\r\n                        onValueChange={(text) => this.setState({sportType:text})}\r\n                        >\r\n\r\n                            <Picker.Item label=\"Select a sport\" value=\"\" />\r\n                            <Picker.Item label=\"GAA\" value=\"GAA\" />\r\n                            <Picker.Item label=\"Soccer\" value=\"Soccer\"/>\r\n\r\n\r\n                </Picker>\r\n              \r\n                <View style={stylesPlayerReg.footerView}>\r\n                    <TouchableOpacity style={stylesPlayerReg.button} onPress={this.NewAccountSignUp}>\r\n                        <Text style={stylesPlayerReg.buttonTitle}>Sign up!</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n\r\n\r\n        </ScrollView>\r\n\r\n            );\r\n        }\r\n\r\n\r\n\r\n  \r\n    return (\r\n     <ScrollView style={stylesPlayerReg.container}>\r\n            {options}\r\n      </ScrollView>\r\n    )\r\n}\r\n\r\n}\r\n\r\n\r\nconst stylesPlayerReg = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#252626'\r\n    },\r\n    title: {\r\n\r\n    },\r\n    logo: {\r\n        flex: 1,\r\n        height: 120,\r\n        width: 90,\r\n        alignSelf: \"center\",\r\n        margin: 30\r\n    },\r\n    input: {\r\n        height: 48,\r\n        borderRadius: 5,\r\n        overflow: 'hidden',\r\n        backgroundColor: 'white',\r\n        marginTop: 10,\r\n        marginBottom: 10,\r\n        marginLeft: 30,\r\n        marginRight: 30,\r\n        paddingLeft: 16\r\n    },\r\n    button: {\r\n        backgroundColor: '#FF6D01',\r\n        marginLeft: 30,\r\n        marginRight: 30,\r\n        marginTop: 20,\r\n        height: 48,\r\n        borderRadius: 5,\r\n        alignItems: \"center\",\r\n        justifyContent: 'center'\r\n    },\r\n    buttonTitle: {\r\n        color: 'white',\r\n        fontSize: 16,\r\n        fontWeight: \"bold\"\r\n    },\r\n    footerView: {\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        marginTop: 20\r\n    },\r\n    footerText: {\r\n        fontSize:18,\r\n        height: 30,\r\n        marginTop: 15,\r\n        marginBottom: 5,\r\n        marginLeft: 20,\r\n        marginRight: 30,\r\n        paddingLeft: 10,\r\n        color: 'white',\r\n        fontWeight: \"bold\",\r\n    },\r\n    footerLink: {\r\n        color: \"#788eec\",\r\n        fontWeight: \"bold\",\r\n        fontSize: 16\r\n    }\r\n});\r\n\r\n\r\nexport default PlayerRegistrationScreen;"]},"metadata":{},"sourceType":"module"}