{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\StatsAppNative\\\\MyApp\\\\screens\\\\TeamAnalystRegistrationScreen\\\\TeamAnalystRegistrationScreen.js\";\nimport React, { useEffect, useState } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport styles from \"./styles\";\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nexport default function TeamAnalystRegistrationScreen(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      fullName = _useState2[0],\n      setFullName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      confirmPassword = _useState8[0],\n      setConfirmPassword = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      teamAdminInvite = _useState10[0],\n      setInviteCode = _useState10[1];\n\n  var CreatedByUserID = '';\n\n  var onSignUpPress = function onSignUpPress() {\n    if (fullName == \"\") {\n      alert(\"Please enter your full name.\");\n      return;\n    }\n\n    if (email == \"\") {\n      alert(\"Please enter your email.\");\n      return;\n    }\n\n    if (teamAdminInvite == \"\") {\n      alert(\"Please enter your teamAdminInvite code.\");\n      return;\n    }\n\n    if (password !== confirmPassword) {\n      alert(\"Passwords don't match.\");\n      return;\n    }\n\n    if (password !== confirmPassword) {\n      alert(\"Passwords don't match.\");\n      return;\n    }\n\n    var checkIFTeamExists = firebase.database().ref(\"teams\").orderByChild('teamAdminInvite').equalTo(teamAdminInvite).once('value', function (snapshot) {\n      if (snapshot.exists()) {\n        var teamObj = snapshot.val();\n        var teamID = teamObj.CreatedByUserID;\n\n        _this.setState({\n          CreatedByUserID: teamID\n        });\n\n        console.log(CreatedByUserID);\n        firebase.auth().createUserWithEmailAndPassword(_this.state.email, _this.state.password).then(function (response) {\n          var uid = response.user.uid;\n          var userType = \"TeamAnalyst\";\n          var data2 = {\n            id: uid,\n            email: _this.state.email,\n            fullName: _this.state.fullName,\n            userType: userType,\n            teamCreated: 0,\n            teamplayerlimit: _this.state.teamplayerlimit,\n            teamgamelimit: _this.state.teamgamelimit,\n            teamAdminInvite: _this.state.teamAdminInvite\n          };\n          var usersRef = firebase.database().ref('users/' + uid);\n          usersRef.set(data2).then(function () {\n            _this.setState({\n              isLoading: true\n            });\n\n            var addTeamAdmin = firebase.database().ref('teams').child(CreatedByUserID).child('teamAdmins');\n            var adminData = {\n              id: uid,\n              fullName: _this.state.fullName\n            };\n            addTeamAdmin.update(adminData);\n\n            _this.props.navigation.navigate('Login');\n          }).catch(function (error) {\n            alert(error);\n          });\n        }).catch(function (error) {\n          alert(error);\n        });\n      } else {\n        alert('Cannot find Team - Maybe incorrect team admin code');\n      }\n    });\n    navigation.navigate('Login');\n  };\n\n  return React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.footerText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 17\n    }\n  }, \" Please enter your full name:\"), React.createElement(TextInput, {\n    style: styles.input,\n    placeholderTextColor: \"#aaaaaa\",\n    placeholder: \"Please enter your full name\",\n    onChangeText: function onChangeText(text) {\n      return setFullName(text);\n    },\n    value: fullName,\n    underlineColorAndroid: \"transparent\",\n    autoCapitalize: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    style: styles.footerText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 17\n    }\n  }, \" Please enter your email:\"), React.createElement(TextInput, {\n    style: styles.input,\n    placeholderTextColor: \"#aaaaaa\",\n    placeholder: \"Please enter your email\",\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    value: email,\n    underlineColorAndroid: \"transparent\",\n    autoCapitalize: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    style: styles.footerText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 17\n    }\n  }, \" Please enter your password:\"), React.createElement(TextInput, {\n    style: styles.input,\n    placeholderTextColor: \"#aaaaaa\",\n    secureTextEntry: true,\n    placeholder: \"Password\",\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    value: password,\n    underlineColorAndroid: \"transparent\",\n    autoCapitalize: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    style: styles.footerText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 18\n    }\n  }, \" Please confirm your password:\"), React.createElement(TextInput, {\n    style: styles.input,\n    placeholderTextColor: \"#aaaaaa\",\n    secureTextEntry: true,\n    placeholder: \"Confirm Password\",\n    onChangeText: function onChangeText(text) {\n      return setConfirmPassword(text);\n    },\n    value: confirmPassword,\n    underlineColorAndroid: \"transparent\",\n    autoCapitalize: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    style: styles.footerText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 17\n    }\n  }, \"Please enter you invite code.This can be obtained by your  Head Team Analyst - this will be in the team record:\"), React.createElement(TextInput, {\n    style: styles.input,\n    placeholderTextColor: \"#aaaaaa\",\n    placeholder: \"Please enter your invite code\",\n    onChangeText: function onChangeText(text) {\n      return setInviteCode(text);\n    },\n    value: teamAdminInvite,\n    underlineColorAndroid: \"transparent\",\n    autoCapitalize: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: styles.footerView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 17\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: function onPress() {\n      return onSignUpPress();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 21\n    }\n  }, \"Sign up!\"))));\n}","map":{"version":3,"sources":["D:/StatsAppNative/MyApp/screens/TeamAnalystRegistrationScreen/TeamAnalystRegistrationScreen.js"],"names":["React","useEffect","useState","styles","firebase","TeamAnalystRegistrationScreen","navigation","fullName","setFullName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","teamAdminInvite","setInviteCode","CreatedByUserID","onSignUpPress","alert","checkIFTeamExists","database","ref","orderByChild","equalTo","once","snapshot","exists","teamObj","val","teamID","setState","console","log","auth","createUserWithEmailAndPassword","state","then","response","uid","user","userType","data2","id","teamCreated","teamplayerlimit","teamgamelimit","usersRef","set","isLoading","addTeamAdmin","child","adminData","update","props","navigate","catch","error","footerText","input","text","footerView","button","buttonTitle"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Image, Text, TextInput, TouchableOpacity, ScrollView , View , StyleSheet} from 'react-native';\r\nimport styles from './styles';\r\n// import * as firebase from 'firebase/app';\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\n\r\n\r\n\r\n\r\nexport default function TeamAnalystRegistrationScreen({navigation}){\r\n\r\n    const [fullName, setFullName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [teamAdminInvite, setInviteCode] = useState('')\r\n\r\n\r\n    const CreatedByUserID = '';\r\n\r\n    \r\n    const onSignUpPress = () => {\r\n        //  Full name Validation\r\n        if(fullName == \"\")\r\n        {\r\n            alert(\"Please enter your full name.\")\r\n            return\r\n        }\r\n\r\n        //  Email Validation\r\n        if(email == \"\")\r\n        {\r\n            alert(\"Please enter your email.\")\r\n            return\r\n        }\r\n\r\n        //  teamAdminInvite Validation\r\n        if(teamAdminInvite == \"\")\r\n        {\r\n            alert(\"Please enter your teamAdminInvite code.\")\r\n            return\r\n        }\r\n\r\n        //  Password confirmation Check\r\n        if (password !== confirmPassword) {\r\n            alert(\"Passwords don't match.\")\r\n            return\r\n        }\r\n        //Set UserType to TA\r\n        if (password !== confirmPassword) {\r\n            alert(\"Passwords don't match.\")\r\n            return\r\n        }\r\n\r\n\r\n\r\n//Check if the team invite is completely unique in the users list\r\nconst checkIFTeamExists = firebase.database().ref(\"teams\").orderByChild('teamAdminInvite').equalTo(teamAdminInvite).once('value' , snapshot =>  {\r\n        if (snapshot.exists()){\r\n\r\n            //obtain Team ID \r\n            const teamObj = snapshot.val();\r\n\r\n            let teamID = teamObj.CreatedByUserID;\r\n            this.setState({CreatedByUserID: teamID});\r\n\r\n\r\n            console.log(CreatedByUserID);\r\n\r\n\r\n\r\n\r\n\r\n            firebase\r\n            .auth()\r\n            .createUserWithEmailAndPassword(this.state.email, this.state.password)\r\n            .then((response) => {\r\n                const uid = response.user.uid;\r\n                const userType = \"TeamAnalyst\";\r\n                const data2 = {\r\n                    id: uid,\r\n                    email: this.state.email,\r\n                    fullName: this.state.fullName,\r\n                    userType:   userType,\r\n                    teamCreated: 0,\r\n                    teamplayerlimit:this.state.teamplayerlimit,\r\n                    teamgamelimit:this.state.teamgamelimit,\r\n                    teamAdminInvite:this.state.teamAdminInvite\r\n                \r\n                    \r\n                };\r\n\r\n\r\n                const usersRef = firebase.database().ref('users/' + uid)\r\n                    usersRef\r\n                        .set(data2)\r\n                                .then(() => {\r\n                                        this.setState({\r\n                                            isLoading: true,\r\n                                        })\r\n                                    \r\n\r\n                                        //Add the team Analyst to the Team Record\r\n                                        // const teamAdminsRef = firebase.database().ref('teams').orderByChild('')\r\n\r\n                                const addTeamAdmin = firebase.database().ref('teams').child(CreatedByUserID).child('teamAdmins')\r\n\r\n                                    var adminData = {\r\n                                        id: uid,\r\n                                        fullName:this.state.fullName\r\n                                    };\r\n\r\n\r\n                                addTeamAdmin.update(adminData);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                        this.props.navigation.navigate('Login')\r\n                                    })\r\n                                    .catch((error) => {\r\n                                        alert(error)\r\n                                    });\r\n                            })\r\n                            .catch((error) => {\r\n                                alert(error)\r\n                        });\r\n            }\r\n            else\r\n            {\r\n                alert('Cannot find Team - Maybe incorrect team admin code');\r\n            }\r\n\r\n      });\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  navigation.navigate('Login')\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        }\r\n       \r\n\r\n\r\n    \r\n\r\n    return (\r\n        <ScrollView>\r\n                <Text style={styles.footerText}> Please enter your full name:</Text>\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholderTextColor=\"#aaaaaa\"\r\n                    placeholder='Please enter your full name'\r\n                    onChangeText={(text) => setFullName(text)}\r\n                    value={fullName}\r\n                    underlineColorAndroid=\"transparent\"\r\n                    autoCapitalize=\"none\"\r\n                />\r\n\r\n                <Text style={styles.footerText}> Please enter your email:</Text>\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholderTextColor=\"#aaaaaa\"\r\n                    placeholder='Please enter your email'\r\n                    onChangeText={(text) => setEmail(text)}\r\n                    value={email}\r\n                    underlineColorAndroid=\"transparent\"\r\n                    autoCapitalize=\"none\"\r\n                />\r\n\r\n                <Text style={styles.footerText}> Please enter your password:</Text>\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholderTextColor=\"#aaaaaa\"\r\n                    secureTextEntry\r\n                    placeholder='Password'\r\n                    onChangeText={(text) => setPassword(text)}\r\n                    value={password}\r\n                    underlineColorAndroid=\"transparent\"\r\n                    autoCapitalize=\"none\"\r\n                />\r\n                 <Text style={styles.footerText}> Please confirm your password:</Text>\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholderTextColor=\"#aaaaaa\"\r\n                    secureTextEntry\r\n                    placeholder='Confirm Password'\r\n                    onChangeText={(text) => setConfirmPassword(text)}\r\n                    value={confirmPassword}\r\n                    underlineColorAndroid=\"transparent\"\r\n                    autoCapitalize=\"none\"\r\n                />\r\n\r\n                <Text style={styles.footerText}>Please enter you invite code.This can be obtained by your  Head Team Analyst - this will be in the team record:</Text>\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholderTextColor=\"#aaaaaa\"\r\n                    placeholder='Please enter your invite code'\r\n                    onChangeText={(text) => setInviteCode(text)}\r\n                    value={teamAdminInvite}\r\n                    underlineColorAndroid=\"transparent\"\r\n                    autoCapitalize=\"none\"\r\n                />\r\n\r\n                <View style={styles.footerView}>\r\n                    <TouchableOpacity style={styles.button} onPress={() => onSignUpPress()}>\r\n                    <Text style={styles.buttonTitle}>Sign up!</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n\r\n        </ScrollView>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}