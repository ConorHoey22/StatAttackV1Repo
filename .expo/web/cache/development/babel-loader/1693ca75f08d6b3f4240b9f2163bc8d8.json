{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\StatsAppNative\\\\MyApp\\\\node_modules\\\\react-native-smart-picker\\\\src\\\\index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ToggleBox from 'react-native-togglebox';\nimport styles from \"./styles.js\";\n\nvar TogglePicker = function (_Component) {\n  _inherits(TogglePicker, _Component);\n\n  var _super = _createSuper(TogglePicker);\n\n  function TogglePicker() {\n    var _this;\n\n    _classCallCheck(this, TogglePicker);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.renderPicker = function () {\n      return React.createElement(Picker, {\n        selectedValue: _this.props.selectedValue,\n        onValueChange: _this.props.onValueChange,\n        style: Platform.OS === 'ios' ? [styles.iosPicker, _this.props.iosPickerStyle] : [styles.androidPicker, _this.props.androidPickerStyle],\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 5\n        }\n      }, _this.props.children);\n    };\n\n    _this.renderIos = function () {\n      return React.createElement(ToggleBox, {\n        label: _this.props.label,\n        value: _this.props.value,\n        style: StyleSheet.flatten([styles.toggleBox, _this.props.iosBoxStyle]),\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 5\n        }\n      }, React.createElement(View, {\n        style: _this.props.iosPickerWrapperStyle,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 7\n        }\n      }, _this.renderPicker()));\n    };\n\n    _this.renderAndroid = function () {\n      return React.createElement(View, {\n        style: [styles.androidBoxStyle, _this.props.androidBoxStyle],\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 5\n        }\n      }, _this.props.androidPickerTitle && React.createElement(Text, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }\n      }, _this.props.label), React.createElement(View, {\n        style: StyleSheet.flatten([styles.androidPickerWrapper, _this.props.androidPickerWrapper]),\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 7\n        }\n      }, _this.renderPicker()));\n    };\n\n    return _this;\n  }\n\n  _createClass(TogglePicker, [{\n    key: \"render\",\n    value: function render() {\n      return Platform.OS === 'ios' ? this.renderIos() : this.renderAndroid();\n    }\n  }]);\n\n  return TogglePicker;\n}(Component);\n\nTogglePicker.propTypes = {\n  androidBoxStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  androidPickerTitle: PropTypes.bool,\n  androidPickerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  androidPickerWrapperStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  arrowColor: PropTypes.string,\n  arrowDownType: PropTypes.string,\n  arrowSize: PropTypes.number,\n  arrowUpType: PropTypes.string,\n  enabled: PropTypes.bool,\n  expanded: PropTypes.bool,\n  iosBoxStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  iosPickerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  iosPickerWrapperStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  onValueChange: PropTypes.func.isRequired,\n  selectedValue: PropTypes.any.isRequired,\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nTogglePicker.defaultProps = {\n  androidBoxStyle: {},\n  androidPickerStyle: {},\n  androidPickerWrapperStyle: {},\n  androidPickerTitle: true,\n  androidBoxStyle: {},\n  arrowColor: 'rgb(178, 178, 178)',\n  arrowDownType: 'keyboard-arrow-down',\n  arrowSize: 30,\n  arrowUpType: 'keyboard-arrow-up',\n  expanded: false,\n  iosBoxStyle: {},\n  iosPickerStyle: {},\n  iosPickerWrapperStyle: {},\n  value: ''\n};\nexport default TogglePicker;","map":{"version":3,"sources":["D:/StatsAppNative/MyApp/node_modules/react-native-smart-picker/src/index.js"],"names":["React","Component","PropTypes","ToggleBox","styles","TogglePicker","renderPicker","props","selectedValue","onValueChange","Platform","OS","iosPicker","iosPickerStyle","androidPicker","androidPickerStyle","children","renderIos","label","value","StyleSheet","flatten","toggleBox","iosBoxStyle","iosPickerWrapperStyle","renderAndroid","androidBoxStyle","androidPickerTitle","androidPickerWrapper","propTypes","oneOfType","object","number","bool","androidPickerWrapperStyle","arrowColor","string","arrowDownType","arrowSize","arrowUpType","enabled","expanded","func","isRequired","any","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Text, View, Image, TouchableWithoutFeedback, Animated, Picker, Platform, StyleSheet } from 'react-native'\nimport ToggleBox from 'react-native-togglebox'\nimport styles from './styles.js'\n\nclass TogglePicker extends Component {\n  renderPicker = () => (\n    <Picker\n      selectedValue={this.props.selectedValue}\n      onValueChange={this.props.onValueChange}\n      style={Platform.OS === 'ios' ? [styles.iosPicker, this.props.iosPickerStyle] : [styles.androidPicker, this.props.androidPickerStyle]}\n    >\n      {this.props.children}\n    </Picker>\n  )\n\n  renderIos = () => (\n    <ToggleBox label={this.props.label} value={this.props.value} style={StyleSheet.flatten([styles.toggleBox, this.props.iosBoxStyle])}>\n      <View style={this.props.iosPickerWrapperStyle}>\n        {this.renderPicker()}\n      </View>\n    </ToggleBox>\n  )\n\n  renderAndroid = () => (\n    <View style={[styles.androidBoxStyle, this.props.androidBoxStyle]}>\n      {\n        this.props.androidPickerTitle &&\n        <Text>\n          {this.props.label}\n        </Text>\n      }\n      <View style={StyleSheet.flatten([styles.androidPickerWrapper, this.props.androidPickerWrapper])}>\n        {this.renderPicker()}\n      </View>\n    </View>\n  )\n\n  render() {\n    return (\n      Platform.OS === 'ios' ?\n        this.renderIos() : this.renderAndroid()\n    )\n  }\n}\n\nTogglePicker.propTypes = {\n  androidBoxStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  androidPickerTitle: PropTypes.bool,\n  androidPickerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  androidPickerWrapperStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  arrowColor: PropTypes.string,\n  arrowDownType: PropTypes.string,\n  arrowSize: PropTypes.number,\n  arrowUpType: PropTypes.string,\n  enabled: PropTypes.bool,\n  expanded: PropTypes.bool,\n  iosBoxStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  iosPickerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  iosPickerWrapperStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  onValueChange: PropTypes.func.isRequired,\n  selectedValue: PropTypes.any.isRequired,\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n}\n\nTogglePicker.defaultProps = {\n  androidBoxStyle: {},\n  androidPickerStyle: {},\n  androidPickerWrapperStyle: {},\n  androidPickerTitle: true,\n  androidBoxStyle: {},\n  arrowColor: 'rgb(178, 178, 178)',\n  arrowDownType: 'keyboard-arrow-down',\n  arrowSize: 30,\n  arrowUpType: 'keyboard-arrow-up',\n  expanded: false,\n  iosBoxStyle: {},\n  iosPickerStyle: {},\n  iosPickerWrapperStyle: {},\n  value: '',\n}\n\nexport default TogglePicker\n"]},"metadata":{},"sourceType":"module"}