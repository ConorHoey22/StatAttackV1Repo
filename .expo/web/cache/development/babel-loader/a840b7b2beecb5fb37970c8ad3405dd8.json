{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\StatsAppNative\\\\MyApp\\\\screens\\\\LoginScreen\\\\LoginScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useEffect, useState, Component } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { useNavigation } from '@react-navigation/native';\nimport { createAppContainer } from 'react-navigation';\nimport { createStackNavigator } from 'react-navigation-stack';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\nvar screenWidth = Dimensions.get('window').width;\nvar screenHeight = Dimensions.get('window').height;\n\nvar LoginScreen = function (_Component) {\n  _inherits(LoginScreen, _Component);\n\n  var _super = _createSuper(LoginScreen);\n\n  function LoginScreen(props) {\n    var _this;\n\n    _classCallCheck(this, LoginScreen);\n\n    _this = _super.call(this, props);\n\n    _this.onLogin = function _callee() {\n      var email, password;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              email = _this.state.email;\n              password = _this.state.password;\n\n              if (_this.state.email === '' || _this.state.password === '') {\n                alert('Enter details to signin!');\n              } else {\n                _this.setState({\n                  isLoading: true\n                });\n\n                firebase.auth().signInWithEmailAndPassword(email.trim(), password).then(function (res) {\n                  console.log(res.user.uid);\n                  console.log('User logged-in successfully!');\n\n                  _this.setState({\n                    isLoading: false,\n                    email: '',\n                    password: ''\n                  });\n\n                  _this.props.navigation.navigate('Home');\n                }).catch(function (error) {\n                  var errorCode = error.code;\n                  var errorMessage = error.message;\n\n                  if (errorCode === 'auth/wrong-password') {\n                    alert('Incorrect password.');\n                  } else {\n                    alert('Incorrect login details');\n                  }\n                });\n              }\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      email: '',\n      password: ''\n    };\n    return _this;\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(ScrollView, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.footerText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 15\n        }\n      }, \" Please enter your email:\"), React.createElement(TextInput, {\n        name: \"email\",\n        style: styles.input,\n        placeholderTextColor: \"#aaaaaa\",\n        placeholder: \"Please enter your email\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            email: text\n          });\n        },\n        value: this.state.email,\n        underlineColorAndroid: \"transparent\",\n        autoCapitalize: \"none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 15\n        }\n      }), React.createElement(Text, {\n        style: styles.footerText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 15\n        }\n      }, \" Please enter your password:\"), React.createElement(TextInput, {\n        name: \"password\",\n        style: styles.input,\n        placeholderTextColor: \"#aaaaaa\",\n        secureTextEntry: true,\n        placeholder: \"Password\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            password: text\n          });\n        },\n        value: this.state.password,\n        underlineColorAndroid: \"transparent\",\n        autoCapitalize: \"none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 15\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: styles.button,\n        onPress: this.onLogin,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 14\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonTitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 19\n        }\n      }, \"Login\")));\n    }\n  }]);\n\n  return LoginScreen;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#252626'\n  },\n  title: {},\n  logo: {\n    flex: 1,\n    height: 120,\n    width: 90,\n    alignSelf: \"center\",\n    margin: 30\n  },\n  input: {\n    height: 48,\n    borderRadius: 5,\n    overflow: 'hidden',\n    backgroundColor: 'white',\n    marginTop: 10,\n    marginBottom: 10,\n    marginLeft: 30,\n    marginRight: 30,\n    paddingLeft: 16\n  },\n  button: {\n    backgroundColor: '#FF6D01',\n    marginLeft: 30,\n    marginRight: 30,\n    marginTop: 20,\n    height: 48,\n    width: 90,\n    borderRadius: 5,\n    alignItems: \"center\",\n    justifyContent: 'center'\n  },\n  buttonTitle: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: \"bold\"\n  },\n  footerView: {\n    flex: 1,\n    alignItems: \"center\",\n    marginTop: 20\n  },\n  footerText: {\n    fontSize: 18,\n    height: 30,\n    marginTop: 15,\n    marginBottom: 5,\n    marginLeft: 20,\n    marginRight: 30,\n    paddingLeft: 10,\n    color: 'white',\n    fontWeight: \"bold\"\n  },\n  footerLink: {\n    color: \"#788eec\",\n    fontWeight: \"bold\",\n    fontSize: 16\n  },\n  field: {\n    flex: 1,\n    flexDirection: 'row',\n    backgroundColor: '#FFFFFF',\n    borderWidth: 4,\n    borderColor: '#949494',\n    borderRadius: 6,\n    height: hp('100%'),\n    width: wp('100%')\n  },\n  field1: {\n    flex: 1,\n    flexDirection: 'column',\n    borderWidth: 4,\n    borderColor: '#949494',\n    height: hp('50%'),\n    width: wp('50%')\n  },\n  test: {\n    backgroundColor: '#000000',\n    borderWidth: 4,\n    borderColor: '#949494',\n    borderRadius: 6\n  }\n});\nexport default LoginScreen;","map":{"version":3,"sources":["D:/StatsAppNative/MyApp/screens/LoginScreen/LoginScreen.js"],"names":["React","useEffect","useState","Component","firebase","useNavigation","createAppContainer","createStackNavigator","widthPercentageToDP","wp","heightPercentageToDP","hp","screenWidth","Dimensions","get","width","screenHeight","height","LoginScreen","props","onLogin","email","state","password","alert","setState","isLoading","auth","signInWithEmailAndPassword","trim","then","res","console","log","user","uid","navigation","navigate","catch","error","errorCode","code","errorMessage","message","styles","container","footerText","input","text","button","buttonTitle","StyleSheet","create","flex","backgroundColor","title","logo","alignSelf","margin","borderRadius","overflow","marginTop","marginBottom","marginLeft","marginRight","paddingLeft","alignItems","justifyContent","color","fontSize","fontWeight","footerView","footerLink","field","flexDirection","borderWidth","borderColor","field1","test"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, Component } from 'react'\r\nimport { ScrollView,Image, Text, TextInput,StyleSheet, TouchableOpacity, View ,Button } from 'react-native'\r\n\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\n\r\nimport {Dimensions} from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { createAppContainer } from 'react-navigation';\r\nimport { createStackNavigator } from 'react-navigation-stack';\r\n\r\nimport {widthPercentageToDP as wp, heightPercentageToDP as hp} from 'react-native-responsive-screen';\r\n\r\n\r\n\r\n\r\nconst screenWidth = Dimensions.get('window').width;\r\n\r\nconst screenHeight = Dimensions.get('window').height;\r\n\r\n\r\nclass LoginScreen extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            email: '',\r\n            password: '',\r\n          \r\n         };\r\n      }\r\n\r\n     \r\n  \r\n\r\n    onLogin = async() => {\r\n\r\n        const email = this.state.email;\r\n        const password = this.state.password;\r\n\r\n\r\n        if(this.state.email === '' || this.state.password === '') {\r\n          alert('Enter details to signin!')\r\n        } else {\r\n          this.setState({\r\n            isLoading: true,\r\n          })\r\n\r\n\r\n          firebase\r\n          .auth()\r\n          .signInWithEmailAndPassword(email.trim(), password)\r\n          .then((res) => {\r\n            console.log(res.user.uid)\r\n            console.log('User logged-in successfully!')\r\n            this.setState({\r\n              isLoading: false,\r\n              email: '', \r\n              password: ''\r\n            })\r\n            this.props.navigation.navigate('Home')\r\n          })\r\n          .catch((error) => {\r\n           var errorCode = error.code;\r\n           var errorMessage = error.message;\r\n          if (errorCode === 'auth/wrong-password') {\r\n    \r\n            alert('Incorrect password.');\r\n          } else {\r\n            alert('Incorrect login details')\r\n           \r\n          }\r\n        });\r\n\r\n    \r\n\r\n  }\r\n            \r\n\r\n        // if(this.state.email && this.state.password ) {\r\n           \r\n          // } else {\r\n            // this.setState({\r\n            //   isLoading: true,\r\n            // })\r\n\r\n\r\n          //   firebase\r\n          //   .auth()\r\n          //   .signInWithEmailAndPassword(email.trim(), password)\r\n          //   .then((res) => {\r\n          //     console.log(res.user.uid)\r\n          //     console.log('User logged-in successfully!')\r\n          //     // this.setState({\r\n          //     //   isLoading: false,\r\n          //     //   email: '', \r\n          //     //   password: ''\r\n          //     // })\r\n          //     this.props.navigation.navigate('Home')\r\n          //   })\r\n          //   .catch((error) => {\r\n          //    var errorCode = error.code;\r\n          //    var errorMessage = error.message;\r\n          //   if (errorCode === 'auth/wrong-password') {\r\n      \r\n          //     alert('Incorrect password.');\r\n          //   } else {\r\n          //     alert('Incorrect login details')\r\n             \r\n          //   }\r\n          // });\r\n\r\n        //     try {\r\n        //       firebase\r\n        //       .auth()\r\n        //       .signInWithEmailAndPassword(this.state.email, this.state.password);\r\n        //     }\r\n        //     catch(error){\r\n        //       switch(error.code) {\r\n        //         case 'auth/user-not-found':\r\n        //           alert('This user does not exist.');\r\n        //           break;\r\n              \r\n        //         case 'auth/invalid-email':\r\n        //           alert('Please enter a valid email address');\r\n\r\n\r\n\r\n\r\n        //       }\r\n              \r\n              \r\n        //     }\r\n            \r\n           \r\n      \r\n\r\n        // }\r\n        // else{\r\n        //   alert('Please enter your email and password');\r\n        // }\r\n\r\n      }\r\n\r\n\r\n    render (){\r\n     \r\n   \r\n        \r\n        return(\r\n            \r\n            <ScrollView style={styles.container}>\r\n              <Text style={styles.footerText}> Please enter your email:</Text>\r\n              <TextInput\r\n                  name='email'\r\n                  style={styles.input}\r\n                  placeholderTextColor=\"#aaaaaa\"\r\n                  placeholder='Please enter your email'\r\n                  onChangeText={(text) => this.setState({email:text})}\r\n                  value={this.state.email}\r\n                  underlineColorAndroid=\"transparent\"\r\n                  autoCapitalize=\"none\"\r\n              />\r\n              <Text style={styles.footerText}> Please enter your password:</Text>\r\n              <TextInput\r\n                  name='password'\r\n                  style={styles.input}\r\n                  placeholderTextColor=\"#aaaaaa\"\r\n                  secureTextEntry\r\n                  placeholder='Password'\r\n            \r\n                  onChangeText={(text) => this.setState({password:text})}\r\n                  value={this.state.password}\r\n                  underlineColorAndroid=\"transparent\"\r\n                  autoCapitalize=\"none\"\r\n              /> \r\n                            \r\n             <TouchableOpacity style={styles.button} onPress={this.onLogin}>\r\n                  <Text style={styles.buttonTitle}>Login</Text>\r\n              </TouchableOpacity>  \r\n            \r\n\r\n            </ScrollView>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: '#252626'\r\n    },\r\n    title: {\r\n\r\n    },\r\n    logo: {\r\n        flex: 1,\r\n        height: 120,\r\n        width: 90,\r\n        alignSelf: \"center\",\r\n        margin: 30\r\n    },\r\n    input: {\r\n        height: 48,\r\n        borderRadius: 5,\r\n        overflow: 'hidden',\r\n        backgroundColor: 'white',\r\n        marginTop: 10,\r\n        marginBottom: 10,\r\n        marginLeft: 30,\r\n        marginRight: 30,\r\n        paddingLeft: 16\r\n    },\r\n    button: {\r\n        backgroundColor: '#FF6D01',\r\n        marginLeft: 30,\r\n        marginRight: 30,\r\n        marginTop: 20,\r\n        height: 48,\r\n        width:90,\r\n        borderRadius: 5,\r\n        alignItems: \"center\",\r\n        justifyContent: 'center'\r\n    },\r\n    buttonTitle: {\r\n        color: 'white',\r\n        fontSize: 16,\r\n        fontWeight: \"bold\"\r\n    },\r\n    footerView: {\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        marginTop: 20\r\n    },\r\n    footerText: {\r\n        fontSize:18,\r\n        height: 30,\r\n        marginTop: 15,\r\n        marginBottom: 5,\r\n        marginLeft: 20,\r\n        marginRight: 30,\r\n        paddingLeft: 10,\r\n        color: 'white',\r\n        fontWeight: \"bold\",\r\n    },\r\n    footerLink: {\r\n        color: \"#788eec\",\r\n        fontWeight: \"bold\",\r\n        fontSize: 16\r\n    },\r\n    field:{\r\n        flex:1,\r\n        flexDirection:'row',\r\n\r\n        backgroundColor: '#FFFFFF',\r\n        borderWidth: 4,\r\n        borderColor:'#949494',\r\n        borderRadius: 6,\r\n        height: hp('100%'),\r\n        width:  wp('100%'),\r\n    },\r\n\r\n    field1:{\r\n      flex:1,\r\n      flexDirection:'column',\r\n      borderWidth: 4,\r\n      borderColor:'#949494',\r\n      height: hp('50%'),\r\n      width:  wp('50%'),\r\n\r\n\r\n    },\r\n\r\n  //  field2:{\r\n  //   flex:1,\r\n  //   flexDirection:'column',\r\n  //   background: '#C4C4C4',\r\n  //   borderRadius: 50,\r\n    \r\n  //  },\r\n\r\n  \r\n  \r\n   \r\n    test: {\r\n      backgroundColor: '#000000',\r\n      borderWidth: 4,\r\n      borderColor:'#949494',\r\n      borderRadius: 6,\r\n    }\r\n  });\r\n\r\nexport default LoginScreen;"]},"metadata":{},"sourceType":"module"}