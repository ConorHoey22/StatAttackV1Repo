{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\StatsAppNative\\\\MyApp\\\\screens\\\\HomeScreen\\\\HomeScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useEffect, useState, Component } from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nvar screenWidth = Dimensions.get('window').width;\nvar screenHeight = Dimensions.get('window').height;\n\nvar HomeScreen = function (_Component) {\n  _inherits(HomeScreen, _Component);\n\n  var _super = _createSuper(HomeScreen);\n\n  function HomeScreen(props) {\n    var _this;\n\n    _classCallCheck(this, HomeScreen);\n\n    _this = _super.call(this, props);\n\n    _this.ObtainUserData = function _callee() {\n      var myUserId;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              myUserId = firebase.auth().currentUser.uid;\n              firebase.database().ref('/teams').child(myUserId).on('value', function (snapshot) {\n                var userObj = snapshot.val();\n                var SportType = userObj.SportType;\n\n                _this.setState({\n                  SportType: SportType\n                });\n\n                var playercounter = userObj.playercounter;\n\n                _this.setState({\n                  playercounter: playercounter\n                });\n              });\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.snapshotToArray = function (snapshot) {\n      var retArr = [];\n      snapshot.forEach(function (childSnapshot) {\n        var item = childSnapshot.val();\n        item.key = childSnapshot.key;\n        retArr.push(item);\n      });\n      return retArr;\n    };\n\n    _this.getUserType = function _callee2() {\n      var _firebase$auth, currentUser, uid;\n\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _firebase$auth = firebase.auth(), currentUser = _firebase$auth.currentUser;\n              uid = currentUser.uid;\n              firebase.database().ref('/users/' + uid).on('value', function (snapshot) {\n                var userObj = snapshot.val();\n                var teamCreated = userObj.teamCreated;\n\n                _this.setState({\n                  teamCreated: teamCreated\n                });\n\n                var userType = userObj.userType;\n\n                _this.setState({\n                  userType: userType\n                });\n              });\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.onSetupStatsApp = function () {\n      _this.props.navigation.navigate('SetupStatsApp');\n    };\n\n    _this.CreateATeam = function () {\n      _this.props.navigation.navigate('CreateATeam');\n    };\n\n    _this.createHeadAnalystAccount = function () {\n      _this.props.navigation.navigate('HeadTeamAnalystRegistration');\n    };\n\n    _this.createTeamAnalystAccount = function () {\n      _this.props.navigation.navigate('TeamAnalystRegistration');\n    };\n\n    _this.AddPlayers = function () {\n      _this.props.navigation.navigate('AddPlayers');\n    };\n\n    _this.ManageTeam = function () {\n      _this.props.navigation.navigate('ManageTeam');\n    };\n\n    _this.TeamProfile = function () {\n      _this.props.navigation.navigate('TeamProfile');\n    };\n\n    _this.PlayerProfile = function () {\n      _this.props.navigation.navigate('PlayerProfile');\n    };\n\n    _this.JoinATeam = function () {\n      _this.props.navigation.navigate('JoinATeam');\n    };\n\n    _this.state = {\n      UserID: '',\n      userType: '',\n      teamID: '',\n      teamAdminInvite: '',\n      hasTACreated: 0,\n      teamCreated: 0,\n      listPlayers: [],\n      SportType: ''\n    };\n    return _this;\n  }\n\n  _createClass(HomeScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var _firebase$auth2 = firebase.auth(),\n          currentUser = _firebase$auth2.currentUser;\n\n      var uid = currentUser.uid;\n      firebase.database().ref('/users/' + uid).on('value', function (snapshot) {\n        var userObj = snapshot.val();\n        var teamCreated = userObj.teamCreated;\n\n        _this2.setState({\n          teamCreated: teamCreated\n        });\n\n        var userType = userObj.userType;\n\n        _this2.setState({\n          userType: userType\n        });\n\n        var teamAdminInvite = userObj.teamAdminInvite;\n\n        _this2.setState({\n          teamAdminInvite: teamAdminInvite\n        });\n\n        var teamID = userObj.teamID;\n\n        _this2.setState({\n          teamID: teamID\n        });\n\n        if (teamCreated == 1) {\n          _this2.ObtainUserData();\n        }\n\n        if (hasTACreated == 0) {\n          var myUserId = firebase.auth().currentUser.uid;\n          var addTeamAdmin = firebase.database().ref('teams').child(teamID).child('teamAdmins');\n          var adminData = {\n            id: myUserId,\n            fullName: _this2.state.fullName,\n            teamID: teamID\n          };\n          addTeamAdmin.push(adminData);\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var checkUserType = this.state.userType;\n      var checkTeamCreated = this.state.teamCreated;\n      var HomeNavigation;\n      var uiddd = this.state.UserID;\n      var testMenu = this.state.testMenu;\n\n      if (checkUserType == 'Player') {\n        HomeNavigation = React.createElement(View, {\n          style: stylesHome.container,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }\n        }, React.createElement(View, {\n          style: stylesHome.RowView,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 17\n          }\n        }, React.createElement(TouchableOpacity, {\n          style: stylesHome.button,\n          onPress: this.PlayerProfile,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 21\n          }\n        }, React.createElement(Text, {\n          style: stylesHome.buttonTitle,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 25\n          }\n        }, \"My Profile\"))), React.createElement(View, {\n          style: stylesHome.RowView,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 17\n          }\n        }, React.createElement(TouchableOpacity, {\n          style: stylesHome.button,\n          onPress: this.TeamProfile,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 21\n          }\n        }, React.createElement(Text, {\n          style: stylesHome.buttonTitle,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 25\n          }\n        }, \"My Team\"))));\n      } else if (checkUserType == 'HeadTeamAnalyst') {\n        if (checkTeamCreated == 1) {\n          HomeNavigation = React.createElement(View, {\n            style: stylesHome.container,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 17\n            }\n          }, React.createElement(View, {\n            style: stylesHome.RowView,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 21\n            }\n          }, React.createElement(TouchableOpacity, {\n            style: stylesHome.button,\n            onPress: this.ManageTeam,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 25\n            }\n          }, React.createElement(Text, {\n            style: stylesHome.buttonTitle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 29\n            }\n          }, \"Manage your Team\"))), React.createElement(View, {\n            style: stylesHome.RowView,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 21\n            }\n          }, React.createElement(Text, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 25\n            }\n          }, uiddd), React.createElement(TouchableOpacity, {\n            style: stylesHome.button,\n            onPress: this.AddPlayers,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 25\n            }\n          }, React.createElement(Text, {\n            style: stylesHome.buttonTitle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 29\n            }\n          }, \"Add Players to your team\"))), React.createElement(View, {\n            style: stylesHome.RowView,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 21\n            }\n          }, React.createElement(TouchableOpacity, {\n            style: stylesHome.button,\n            onPress: this.onSetupStatsApp,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 25\n            }\n          }, React.createElement(Text, {\n            style: stylesHome.buttonTitle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 29\n            }\n          }, \"Stats App\"))), React.createElement(View, {\n            style: stylesHome.RowView,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 21\n            }\n          }, React.createElement(TouchableOpacity, {\n            style: stylesHome.button,\n            onPress: this.TeamProfile,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 25\n            }\n          }, React.createElement(Text, {\n            style: stylesHome.buttonTitle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 29\n            }\n          }, \"My Team \"))));\n        } else {\n          HomeNavigation = React.createElement(View, {\n            style: stylesHome.container,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 17\n            }\n          }, React.createElement(View, {\n            style: stylesHome.RowView,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 21\n            }\n          }, React.createElement(TouchableOpacity, {\n            style: stylesHome.button,\n            onPress: this.CreateATeam,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 25\n            }\n          }, React.createElement(Text, {\n            style: stylesHome.buttonTitle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 29\n            }\n          }, \"Create a Team\"))));\n        }\n      } else if (checkUserType == 'TeamAnalyst') {\n        {}\n        HomeNavigation = React.createElement(View, {\n          style: stylesHome.container,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 13\n          }\n        }, React.createElement(View, {\n          style: stylesHome.RowView,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 17\n          }\n        }, React.createElement(TouchableOpacity, {\n          style: stylesHome.button,\n          onPress: this.onSetupStatsApp,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 21\n          }\n        }, React.createElement(Text, {\n          style: stylesHome.buttonTitle,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 25\n          }\n        }, \"Setup Stats App\"))), React.createElement(View, {\n          style: stylesHome.RowView,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 17\n          }\n        }, React.createElement(TouchableOpacity, {\n          style: stylesHome.button,\n          onPress: this.TeamProfile,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 21\n          }\n        }, React.createElement(Text, {\n          style: stylesHome.buttonTitle,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 25\n          }\n        }, \" My Team\"))));\n      } else if (checkUserType == 'CompanySuperUser') {\n        HomeNavigation = React.createElement(View, {\n          style: stylesHome.container,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 13\n          }\n        }, React.createElement(View, {\n          style: stylesHome.RowView,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 17\n          }\n        }, React.createElement(TouchableOpacity, {\n          style: stylesHome.button,\n          onPress: this.createHeadAnalystAccount,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 21\n          }\n        }, React.createElement(Text, {\n          style: stylesHome.buttonTitle,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 25\n          }\n        }, \"Create a Head Team Analyst\"))), React.createElement(View, {\n          style: stylesHome.RowView,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 17\n          }\n        }, React.createElement(TouchableOpacity, {\n          style: stylesHome.button,\n          onPress: this.createTeamAnalystAccount,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 21\n          }\n        }, React.createElement(Text, {\n          style: stylesHome.buttonTitle,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 25\n          }\n        }, \"Create a Team Analyst\"))));\n      }\n\n      return React.createElement(View, {\n        style: stylesHome.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 6\n        }\n      }, HomeNavigation);\n    }\n  }]);\n\n  return HomeScreen;\n}(Component);\n\nvar stylesHome = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    backgroundColor: '#252626',\n    width: '100%',\n    height: '100%',\n    justifyContent: \"center\"\n  },\n  input: {\n    height: 48,\n    borderRadius: 5,\n    overflow: 'hidden',\n    backgroundColor: 'white',\n    marginTop: 10,\n    marginBottom: 10,\n    marginLeft: 30,\n    marginRight: 30,\n    paddingLeft: 16\n  },\n  RowView: {\n    flex: 1,\n    alignItems: 'center',\n    flexDirection: 'row',\n    marginTop: 10,\n    paddingVertical: 4,\n    color: \"#20232a\",\n    textAlign: \"center\",\n    fontSize: 30\n  },\n  ColumnView: {\n    flex: 1,\n    alignItems: 'center',\n    flexDirection: 'column',\n    paddingLeft: 50,\n    marginTop: 110\n  },\n  button: {\n    backgroundColor: '#FF6D01',\n    marginLeft: 30,\n    marginRight: 30,\n    marginTop: 20,\n    height: 48,\n    borderRadius: 5,\n    alignItems: \"center\",\n    justifyContent: 'center',\n    width: '50%'\n  },\n  buttonTitle: {\n    color: 'white',\n    fontSize: 15\n  }\n});\nexport default HomeScreen;","map":{"version":3,"sources":["D:/StatsAppNative/MyApp/screens/HomeScreen/HomeScreen.js"],"names":["React","useEffect","useState","Component","firebase","screenWidth","Dimensions","get","width","screenHeight","height","HomeScreen","props","ObtainUserData","myUserId","auth","currentUser","uid","database","ref","child","on","snapshot","userObj","val","SportType","setState","playercounter","snapshotToArray","retArr","forEach","childSnapshot","item","key","push","getUserType","teamCreated","userType","onSetupStatsApp","navigation","navigate","CreateATeam","createHeadAnalystAccount","createTeamAnalystAccount","AddPlayers","ManageTeam","TeamProfile","PlayerProfile","JoinATeam","state","UserID","teamID","teamAdminInvite","hasTACreated","listPlayers","addTeamAdmin","adminData","id","fullName","checkUserType","checkTeamCreated","HomeNavigation","uiddd","testMenu","stylesHome","container","RowView","button","buttonTitle","StyleSheet","create","flex","alignItems","backgroundColor","justifyContent","input","borderRadius","overflow","marginTop","marginBottom","marginLeft","marginRight","paddingLeft","flexDirection","paddingVertical","color","textAlign","fontSize","ColumnView"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, Component } from 'react'\r\nimport { Dimensions, Text, View ,StyleSheet,ScrollView, TouchableOpacity} from 'react-native'\r\n\r\n// import * as firebase from 'firebase/app';\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\n\r\n\r\n  \r\n\r\nconst screenWidth = Dimensions.get('window').width;\r\n\r\nconst screenHeight = Dimensions.get('window').height;\r\n\r\nclass HomeScreen extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            UserID: '',\r\n            userType: '',\r\n            teamID:'',\r\n            teamAdminInvite:'',\r\n            hasTACreated:0,\r\n           teamCreated: 0, \r\n           listPlayers:[],\r\n           SportType: '',\r\n       \r\n            \r\n            };\r\n        }\r\n       \r\n        //Need to save these variables values in Local Storage for offline mode\r\n        //Store or Obtain team + player + usertype in local storage\r\n\r\n\r\n        componentDidMount(){\r\n\r\n            const { currentUser } = firebase.auth();\r\n            //Check the user type of the AUTH user\r\n             const uid = currentUser.uid;\r\n            firebase.database().ref('/users/' + uid).on('value', (snapshot) => {\r\n                const userObj = snapshot.val();\r\n    \r\n                let teamCreated = userObj.teamCreated;\r\n                this.setState({teamCreated:teamCreated});\r\n\r\n                let userType = userObj.userType;\r\n                this.setState({userType:userType});\r\n\r\n                let teamAdminInvite = userObj.teamAdminInvite;\r\n                this.setState({teamAdminInvite:teamAdminInvite});\r\n\r\n                let teamID = userObj.teamID;\r\n                this.setState({teamID:teamID});\r\n\r\n              \r\n\r\n\r\n\r\n                \r\n            //Team is created  = 1\r\n            if(teamCreated == 1){\r\n              \r\n                this.ObtainUserData();\r\n            }\r\n\r\n\r\n            if(hasTACreated == 0)\r\n            {\r\n\r\n\r\n                var myUserId = firebase.auth().currentUser.uid;\r\n                //Add the team Analyst to the Team Record\r\n                const addTeamAdmin = firebase.database().ref('teams').child(teamID).child('teamAdmins')\r\n         \r\n                    var adminData = {\r\n\r\n                        id: myUserId,\r\n                        fullName:this.state.fullName,\r\n                        teamID:  teamID\r\n\r\n                    };\r\n\r\n                addTeamAdmin.push(adminData);\r\n                \r\n            }\r\n        \r\n        });\r\n\r\n\r\n         \r\n\r\n       \r\n                   \r\n        }\r\n       \r\n      \r\n\r\n        ObtainUserData = async () => {\r\n\r\n            // -------------- GET/STORE Auth UID\r\n            var myUserId = firebase.auth().currentUser.uid;\r\n\r\n            // //  GET/STORE Team Members\r\n\r\n            //     var tempArr = [];\r\n\r\n            //     firebase.database().ref('/teams').child(myUserId).child('/players')\r\n            //         .on('value', snapshot => {\r\n                      \r\n            //             tempArr = this.snapshotToArray(snapshot);\r\n            //             this.setState({\r\n            //                 listPlayers: tempArr\r\n            //             });\r\n\r\n         \r\n            //         })\r\n        \r\n    \r\n            //  GET/STORE Team Player Counter +   GET/STORE Sport Type\r\n            firebase.database().ref('/teams').child(myUserId)\r\n            .on('value', snapshot => {\r\n                const userObj = snapshot.val();\r\n\r\n                let SportType = userObj.SportType;\r\n                this.setState({SportType:SportType})\r\n\r\n                let playercounter = userObj.playercounter;\r\n                this.setState({playercounter:playercounter})\r\n                \r\n            });\r\n        }\r\n            \r\n\r\n\r\n\r\n           \r\n        \r\n\r\n\r\n\r\n        snapshotToArray = snapshot => {\r\n            var retArr = [];\r\n            snapshot.forEach(childSnapshot => {\r\n                var item = childSnapshot.val();\r\n                item.key = childSnapshot.key;\r\n                retArr.push(item);\r\n            });\r\n            return retArr;\r\n        }\r\n        \r\n\r\n\r\n    getUserType = async () => {\r\n        \r\n            const { currentUser } = firebase.auth();\r\n            //Check the user type of the AUTH user\r\n             const uid = currentUser.uid;\r\n           \r\n\r\n            firebase.database().ref('/users/' + uid).on('value', (snapshot) => {\r\n                const userObj = snapshot.val();\r\n    \r\n                let teamCreated = userObj.teamCreated;\r\n                this.setState({teamCreated:teamCreated})\r\n\r\n                let userType = userObj.userType;\r\n                this.setState({userType:userType})\r\n              });\r\n\r\n    // Check if the Head Team Analyst has a team by checking teamCreated Value\r\n    \r\n\r\n    }\r\n\r\n\r\n    onSetupStatsApp = () => {\r\n        this.props.navigation.navigate('SetupStatsApp');\r\n    }\r\n\r\n    \r\n    CreateATeam = () => {\r\n        this.props.navigation.navigate('CreateATeam');\r\n    }\r\n\r\n    createHeadAnalystAccount = () => {\r\n        this.props.navigation.navigate('HeadTeamAnalystRegistration');\r\n    }\r\n\r\n    createTeamAnalystAccount = () => {\r\n        this.props.navigation.navigate('TeamAnalystRegistration');\r\n    }\r\n\r\n    AddPlayers = () => {\r\n        this.props.navigation.navigate('AddPlayers');\r\n    }\r\n\r\n    ManageTeam = () => {\r\n        this.props.navigation.navigate('ManageTeam');\r\n    }\r\n\r\n    TeamProfile = () => {\r\n        this.props.navigation.navigate('TeamProfile');\r\n    }\r\n\r\n    PlayerProfile = () => {\r\n        this.props.navigation.navigate('PlayerProfile');\r\n    }\r\n\r\n    JoinATeam = () => {\r\n        this.props.navigation.navigate('JoinATeam');\r\n    }\r\n\r\n\r\n \r\n\r\n\r\n        \r\n        \r\n    \r\n\r\n \r\nrender(){\r\n\r\n\r\n\r\n    //This is used to check userType and based on that the user will have a custom navigation\r\n    const checkUserType = this.state.userType;\r\n    const checkTeamCreated = this.state.teamCreated;\r\n    var HomeNavigation;\r\n    const uiddd = this.state.UserID;\r\n\r\n    var testMenu = this.state.testMenu;\r\n\r\n  \r\n  \r\n\r\n\r\n\r\n    if(checkUserType == 'Player')\r\n    {\r\n        HomeNavigation = (\r\n           \r\n            <View style={stylesHome.container}>\r\n                    \r\n                <View style={stylesHome.RowView}>\r\n                    <TouchableOpacity style={stylesHome.button} onPress={this.PlayerProfile}>\r\n                        <Text style={stylesHome.buttonTitle}>My Profile</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n\r\n                <View style={stylesHome.RowView}>\r\n                    <TouchableOpacity style={stylesHome.button} onPress={this.TeamProfile}>\r\n                        <Text style={stylesHome.buttonTitle}>My Team</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n\r\n            </View>\r\n        );\r\n    \r\n    }\r\n    else if(checkUserType == 'HeadTeamAnalyst')\r\n    {\r\n\r\n        //Check IF the HeadTeamAnalyst has already create a team\r\n            //IF True then Do not display \"CreateATeam\" , Replace with \"Add Players\"\r\n               //IF False then display CreateATeam\r\n        if(checkTeamCreated == 1)\r\n        {\r\n\r\n            HomeNavigation = (\r\n\r\n                <View style={stylesHome.container}>\r\n                    \r\n                    <View style={stylesHome.RowView}>\r\n                        <TouchableOpacity style={stylesHome.button} onPress={this.ManageTeam}>\r\n                            <Text style={stylesHome.buttonTitle}>Manage your Team</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n\r\n                    <View style={stylesHome.RowView}>\r\n                        <Text>{uiddd}</Text>\r\n\r\n                        <TouchableOpacity style={stylesHome.button} onPress={this.AddPlayers}>\r\n                            <Text style={stylesHome.buttonTitle}>Add Players to your team</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n\r\n\r\n                    <View style={stylesHome.RowView}>\r\n                        <TouchableOpacity style={stylesHome.button} onPress={this.onSetupStatsApp}>\r\n                            <Text style={stylesHome.buttonTitle}>Stats App</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n\r\n                    <View style={stylesHome.RowView}>\r\n                        <TouchableOpacity style={stylesHome.button} onPress={this.TeamProfile}>\r\n                            <Text style={stylesHome.buttonTitle}>My Team </Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n\r\n\r\n               \r\n\r\n                </View>\r\n\r\n            );\r\n        }\r\n        else\r\n        {\r\n            HomeNavigation = (\r\n                <View style={stylesHome.container}>\r\n                \r\n                    <View style={stylesHome.RowView}>\r\n                        <TouchableOpacity style={stylesHome.button} onPress={this.CreateATeam}>\r\n                            <Text style={stylesHome.buttonTitle}>Create a Team</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n         \r\n                </View>\r\n            );\r\n        }\r\n\r\n     \r\n    }\r\n    else if(checkUserType == 'TeamAnalyst')\r\n    {\r\n\r\n        {/* No Access to create a team or Add players  */}\r\n\r\n\r\n        // Statements will be inside these Files which will check for myUserID , if myUserID =! CreatedByUserID then we check the TeamAdmins records , if a match they will get access to these screens and functions\r\n\r\n        HomeNavigation = (\r\n            <View style={stylesHome.container}>\r\n            \r\n                <View style={stylesHome.RowView}>\r\n                    <TouchableOpacity style={stylesHome.button} onPress={this.onSetupStatsApp}>\r\n                        <Text style={stylesHome.buttonTitle}>Setup Stats App</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n\r\n                <View style={stylesHome.RowView}>\r\n                    <TouchableOpacity style={stylesHome.button} onPress={this.TeamProfile}>\r\n                        <Text style={stylesHome.buttonTitle}> My Team</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n\r\n              \r\n\r\n\r\n            </View>\r\n        );\r\n    }\r\n    else if(checkUserType == 'CompanySuperUser')\r\n    {\r\n        HomeNavigation = (\r\n            <View style={stylesHome.container}>\r\n\r\n\r\n               \r\n                <View style={stylesHome.RowView}>\r\n                    <TouchableOpacity style={stylesHome.button} onPress={this.createHeadAnalystAccount}>\r\n                        <Text style={stylesHome.buttonTitle}>Create a Head Team Analyst</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n\r\n\r\n                \r\n                <View style={stylesHome.RowView}>\r\n                    <TouchableOpacity style={stylesHome.button} onPress={this.createTeamAnalystAccount}>\r\n                        <Text style={stylesHome.buttonTitle}>Create a Team Analyst</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n                    {/* No Access to create a team or Add players  */}\r\n            </View>\r\n        );\r\n    }\r\n\r\n\r\n\r\n    return (\r\n\r\n\r\n     <View style={stylesHome.container}> \r\n             {/* Navigation UserType Validation */}\r\n             {HomeNavigation}\r\n\r\n           \r\n    </View>\r\n               \r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst stylesHome = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        backgroundColor: '#252626',\r\n        width:'100%',\r\n        height:'100%',\r\n        justifyContent: \"center\"\r\n\r\n    },\r\n \r\n   \r\n    input: {\r\n        height: 48,\r\n        borderRadius: 5,\r\n        overflow: 'hidden',\r\n        backgroundColor: 'white',\r\n        marginTop: 10,\r\n        marginBottom: 10,\r\n        marginLeft: 30,\r\n        marginRight: 30,\r\n        paddingLeft: 16\r\n    },\r\n\r\n    \r\n    RowView: {\r\n        flex: 1,\r\n        \r\n        alignItems: 'center',\r\n        flexDirection: 'row',\r\n        marginTop: 10,\r\n        paddingVertical: 4,\r\n\r\n        color: \"#20232a\",\r\n        textAlign: \"center\",\r\n        fontSize: 30,\r\n \r\n    },\r\n    ColumnView: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        flexDirection: 'column',  \r\n        paddingLeft: 50, \r\n        marginTop:110,\r\n    \r\n    },\r\n\r\n    button: {\r\n        backgroundColor: '#FF6D01',\r\n        marginLeft: 30,\r\n        marginRight: 30,\r\n        marginTop: 20,\r\n        height: 48,\r\n        borderRadius: 5,\r\n        alignItems: \"center\",\r\n        justifyContent: 'center',\r\n        width: '50%'\r\n    },\r\n    buttonTitle: {\r\n        color: 'white',\r\n        fontSize:15,\r\n       \r\n    },\r\n\r\n});\r\n\r\nexport default HomeScreen;"]},"metadata":{},"sourceType":"module"}