{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\StatsAppNative\\\\MyApp\\\\screens\\\\ViewPlayer\\\\ViewPlayer.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useEffect, useState, Component } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\nvar ViewPlayer = function (_Component) {\n  _inherits(ViewPlayer, _Component);\n\n  var _super = _createSuper(ViewPlayer);\n\n  function ViewPlayer(props) {\n    var _this;\n\n    _classCallCheck(this, ViewPlayer);\n\n    _this = _super.call(this, props);\n\n    _this.getPlayerDetails = function _callee() {\n      var _this$props$navigatio, state, setParams, navigate, params, myUserId, playerKey;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this$props$navigatio = _this.props.navigation, state = _this$props$navigatio.state, setParams = _this$props$navigatio.setParams, navigate = _this$props$navigatio.navigate;\n              params = state.params || {};\n              myUserId = firebase.auth().currentUser.uid;\n              playerKey = params.playerKey;\n              firebase.database().ref('/users').child(params.playerKey).once('value', function (snapshot) {\n                if (snapshot.exists()) {\n                  var playerObj = snapshot.val();\n                  console.log(playerObj);\n                  var fullName = playerObj.fullName;\n\n                  _this.setState({\n                    fullName: fullName\n                  });\n\n                  var totalAssists = playerObj.totalAssists;\n\n                  _this.setState({\n                    totalAssists: totalAssists\n                  });\n\n                  var totalGoals = playerObj.totalGoals;\n\n                  _this.setState({\n                    totalGoals: playerObj.totalGoals\n                  });\n\n                  var totalLostTheBall = playerObj.totalLostTheBall;\n\n                  _this.setState({\n                    totalLostTheBall: totalLostTheBall\n                  });\n\n                  var totalPasses = playerObj.totalPasses;\n\n                  _this.setState({\n                    totalPasses: totalPasses\n                  });\n\n                  var totalPoints = playerObj.totalPoints;\n\n                  _this.setState({\n                    totalPoints: totalPoints\n                  });\n\n                  var totalRedCards = playerObj.totalRedCards;\n\n                  _this.setState({\n                    totalRedCards: totalRedCards\n                  });\n\n                  var totalShots = playerObj.totalShots;\n\n                  _this.setState({\n                    totalShots: totalShots\n                  });\n\n                  var totalShotsOnTarget = playerObj.totalShotsOnTarget;\n\n                  _this.setState({\n                    totalShotsOnTarget: totalShotsOnTarget\n                  });\n\n                  var totalTackles = playerObj.totalTackles;\n\n                  _this.setState({\n                    totalTackles: totalTackles\n                  });\n\n                  var totalWonTheBall = playerObj.totalWonTheBall;\n\n                  _this.setState({\n                    totalWonTheBall: totalWonTheBall\n                  });\n\n                  var totalYellowCards = playerObj.totalYellowCards;\n\n                  _this.setState({\n                    totalYellowCards: totalYellowCards\n                  });\n\n                  var userType = playerObj.userType;\n\n                  _this.setState({\n                    userType: userType\n                  });\n\n                  var SportType = playerObj.sportType;\n\n                  _this.setState({\n                    SportType: SportType\n                  });\n                } else {\n                  console.log('Doesnt exist');\n                  firebase.database().ref('/teams').child(myUserId).child('/players').child(params.itemKey).once('value', function (snapshot) {\n                    var playerObj = snapshot.val();\n                    console.log(snapshot.val());\n                    var fullName = playerObj.fullName;\n\n                    _this.setState({\n                      fullName: fullName\n                    });\n\n                    console.log(fullName);\n                    console.log(_this.state.fullName);\n                    var totalAssists = playerObj.totalAssists;\n\n                    _this.setState({\n                      totalAssists: totalAssists\n                    });\n\n                    var totalGoals = playerObj.totalGoals;\n\n                    _this.setState({\n                      totalGoals: playerObj.totalGoals\n                    });\n\n                    var totalLostTheBall = playerObj.totalLostTheBall;\n\n                    _this.setState({\n                      totalLostTheBall: totalLostTheBall\n                    });\n\n                    var totalPasses = playerObj.totalPasses;\n\n                    _this.setState({\n                      totalPasses: totalPasses\n                    });\n\n                    var totalPoints = playerObj.totalPoints;\n\n                    _this.setState({\n                      totalPoints: totalPoints\n                    });\n\n                    var totalRedCards = playerObj.totalRedCards;\n\n                    _this.setState({\n                      totalRedCards: totalRedCards\n                    });\n\n                    var totalShots = playerObj.totalShots;\n\n                    _this.setState({\n                      totalShots: totalShots\n                    });\n\n                    var totalShotsOnTarget = playerObj.totalShotsOnTarget;\n\n                    _this.setState({\n                      totalShotsOnTarget: totalShotsOnTarget\n                    });\n\n                    var totalTackles = playerObj.totalTackles;\n\n                    _this.setState({\n                      totalTackles: totalTackles\n                    });\n\n                    var totalWonTheBall = playerObj.totalWonTheBall;\n\n                    _this.setState({\n                      totalWonTheBall: totalWonTheBall\n                    });\n\n                    var totalYellowCards = playerObj.totalYellowCards;\n\n                    _this.setState({\n                      totalYellowCards: totalYellowCards\n                    });\n                  });\n                }\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      UserID: '',\n      fullName: '',\n      TeamName: '',\n      SportType: '',\n      inviteCode: '',\n      hasATeam: false,\n      userType: [],\n      PlayerList: [],\n      totalGoals: 0,\n      totalPoints: 0,\n      totalPasses: 0,\n      totalShots: 0,\n      totalShotsOnTarget: 0,\n      totalTackles: 0,\n      totalWonTheBall: 0,\n      totalLostTheBall: 0,\n      totalYellowCards: 0,\n      totalRedCards: 0,\n      totalAssists: 0\n    };\n    return _this;\n  }\n\n  _createClass(ViewPlayer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.getPlayerDetails();\n      var myUserId = firebase.auth().currentUser.uid;\n      firebase.database().ref('/teams').child(myUserId).once('value', function (snapshot) {\n        var playerObj = snapshot.val();\n        console.log(playerObj);\n        var SportType = playerObj.SportType;\n\n        _this2.setState({\n          SportType: SportType\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var SportType = this.state.SportType;\n      var ProfileHeader;\n      var Stats;\n\n      if (SportType == 'GAA') {\n        ProfileHeader = React.createElement(View, {\n          style: styles.headerContainer,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 17\n          }\n        }, React.createElement(Text, {\n          style: styles.Text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 19\n          }\n        }, this.state.fullName));\n        Stats = React.createElement(View, {\n          style: styles.StatRow,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 17\n          }\n        }, React.createElement(View, {\n          style: styles.StatColumn,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 21\n          }\n        }, React.createElement(Text, {\n          style: styles.Text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 25\n          }\n        }, \"Goals: \", this.state.totalGoals), React.createElement(Text, {\n          style: styles.Text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 25\n          }\n        }, \"Points: \", this.state.totalPoints), React.createElement(Text, {\n          style: styles.Text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 25\n          }\n        }, \"Passes: \", this.state.totalPasses, \" \"), React.createElement(Text, {\n          style: styles.Text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 25\n          }\n        }, \"Shots: \", this.state.totalShots), React.createElement(Text, {\n          style: styles.Text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 25\n          }\n        }, \"Shots on target: \", this.state.totalShotsOnTarget), React.createElement(Text, {\n          style: styles.Text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 25\n          }\n        }, \"Tackles:\", this.state.totalTackles), React.createElement(Text, {\n          style: styles.Text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 25\n          }\n        }, \"Won the ball: \", this.state.totalWonTheBall, \" \"), React.createElement(Text, {\n          style: styles.Text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 25\n          }\n        }, \"Lost the ball: \", this.state.totalLostTheBall, \" \"), React.createElement(Text, {\n          style: styles.Text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 25\n          }\n        }, \"Yellow Card: \", this.state.totalYellowCards, \" \"), React.createElement(Text, {\n          style: styles.Text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 25\n          }\n        }, \"Red Card: \", this.state.totalRedCards, \" \"), React.createElement(Text, {\n          style: styles.Text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 25\n          }\n        }, \"Assists: \", this.state.totalAssists, \" \")));\n      } else if (SportType == 'Soccer') {\n        ProfileHeader = React.createElement(View, {\n          style: styles.container,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 17\n          }\n        }, React.createElement(Text, {\n          style: styles.Text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 19\n          }\n        }, \"Goals: \", this.state.totalGoals), React.createElement(Text, {\n          style: styles.Text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 19\n          }\n        }, \"Passes: \", this.state.totalPasses, \" \"), React.createElement(Text, {\n          style: styles.Text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 19\n          }\n        }, \"Shots: \", this.state.totalShots), React.createElement(Text, {\n          style: styles.Text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 19\n          }\n        }, \"Shots on target: \", this.state.totalShotsOnTarget), React.createElement(Text, {\n          style: styles.Text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 19\n          }\n        }, \"Tackles:\", this.state.totalTackles), React.createElement(Text, {\n          style: styles.Text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 19\n          }\n        }, \"Won the ball: \", this.state.totalWonTheBall, \" \"), React.createElement(Text, {\n          style: styles.Text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 19\n          }\n        }, \"Lost the ball: \", this.state.totalLostTheBall, \" \"), React.createElement(Text, {\n          style: styles.Text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 19\n          }\n        }, \"Yellow Card: \", this.state.totalYellowCards, \" \"), React.createElement(Text, {\n          style: styles.Text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 19\n          }\n        }, \"Red Card: \", this.state.totalRedCards, \" \"), React.createElement(Text, {\n          style: styles.Text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 19\n          }\n        }, \"Assists: \", this.state.totalAssists, \" \"));\n        Stats = React.createElement(View, {\n          style: styles.StatRow,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 17\n          }\n        }, React.createElement(View, {\n          style: styles.StatColumn,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 21\n          }\n        }, React.createElement(Text, {\n          style: styles.Text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 25\n          }\n        }, \"Goals: \", this.state.totalGoals), React.createElement(Text, {\n          style: styles.Text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 25\n          }\n        }, \"Passes: \", this.state.totalPasses, \" \"), React.createElement(Text, {\n          style: styles.Text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 25\n          }\n        }, \"Shots: \", this.state.totalShots), React.createElement(Text, {\n          style: styles.Text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 25\n          }\n        }, \"Shots on target: \", this.state.totalShotsOnTarget), React.createElement(Text, {\n          style: styles.Text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 25\n          }\n        }, \"Tackles:\", this.state.totalTackles), React.createElement(Text, {\n          style: styles.Text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 25\n          }\n        }, \"Won the ball: \", this.state.totalWonTheBall, \" \"), React.createElement(Text, {\n          style: styles.Text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 25\n          }\n        }, \"Lost the ball: \", this.state.totalLostTheBall, \" \"), React.createElement(Text, {\n          style: styles.Text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 25\n          }\n        }, \"Yellow Card: \", this.state.totalYellowCards, \" \"), React.createElement(Text, {\n          style: styles.Text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 25\n          }\n        }, \"Red Card: \", this.state.totalRedCards, \" \"), React.createElement(Text, {\n          style: styles.Text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 25\n          }\n        }, \"Assists: \", this.state.totalAssists, \" \")));\n      }\n\n      return React.createElement(ScrollView, {\n        contentContainerStyle: {\n          flexGrow: 1,\n          justifyContent: 'center',\n          backgroundColor: '#242424',\n          alignItems: \"center\",\n          fontSize: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 9\n        }\n      }, ProfileHeader, React.createElement(View, {\n        style: styles.dataContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 9\n        }\n      }, Stats));\n    }\n  }]);\n\n  return ViewPlayer;\n}(Component);\n\nvar styles = StyleSheet.create({\n  Text: {\n    color: '#ffffff',\n    fontSize: 20,\n    fontWeight: \"bold\"\n  },\n  container: {\n    backgroundColor: '#000000',\n    alignItems: \"center\",\n    fontSize: 20\n  },\n  dcontainer: {\n    backgroundColor: '#242424',\n    height: '100%',\n    alignItems: \"center\",\n    fontSize: 20\n  },\n  headerContainer: {\n    backgroundColor: '#FF6D01',\n    alignItems: \"center\",\n    borderWidth: 4,\n    borderColor: '#ffffff',\n    alignItems: 'center',\n    width: wp('50%'),\n    marginTop: 30,\n    padding: 4\n  },\n  dataContainer: {\n    width: wp('50%'),\n    backgroundColor: '#424242',\n    alignItems: \"center\",\n    borderWidth: 4,\n    borderColor: '#ffffff',\n    marginBottom: 10\n  },\n  StatRow: {\n    flex: 1,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginBottom: 10\n  },\n  StatColumn: {\n    flex: 1,\n    flexDirection: \"column\",\n    padding: 50,\n    marginBottom: 10\n  },\n  buttonPosition: {\n    alignItems: \"center\"\n  },\n  button: {\n    width: '80%',\n    paddingTop: 8,\n    paddingBottom: 8,\n    borderRadius: 7,\n    marginTop: 20,\n    fontSize: 20,\n    backgroundColor: '#FF6D01',\n    alignItems: \"center\"\n  },\n  buttonTitle: {\n    color: '#ffffff',\n    fontSize: 16,\n    fontWeight: \"bold\"\n  }\n});\nexport default ViewPlayer;","map":{"version":3,"sources":["D:/StatsAppNative/MyApp/screens/ViewPlayer/ViewPlayer.js"],"names":["React","useEffect","useState","Component","firebase","widthPercentageToDP","wp","heightPercentageToDP","hp","ViewPlayer","props","getPlayerDetails","navigation","state","setParams","navigate","params","myUserId","auth","currentUser","uid","playerKey","database","ref","child","once","snapshot","exists","playerObj","val","console","log","fullName","setState","totalAssists","totalGoals","totalLostTheBall","totalPasses","totalPoints","totalRedCards","totalShots","totalShotsOnTarget","totalTackles","totalWonTheBall","totalYellowCards","userType","SportType","sportType","itemKey","UserID","TeamName","inviteCode","hasATeam","PlayerList","ProfileHeader","Stats","styles","headerContainer","Text","StatRow","StatColumn","container","flexGrow","justifyContent","backgroundColor","alignItems","fontSize","dataContainer","StyleSheet","create","color","fontWeight","dcontainer","height","borderWidth","borderColor","width","marginTop","padding","marginBottom","flex","flexDirection","buttonPosition","button","paddingTop","paddingBottom","borderRadius","buttonTitle"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, Component } from 'react'\r\nimport { Image, Text, TextInput, FlatList, TouchableOpacity, View ,Button ,ScrollView, Alert , StyleSheet} from 'react-native'\r\n\r\n\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\nimport {widthPercentageToDP as wp, heightPercentageToDP as hp} from 'react-native-responsive-screen';\r\n\r\n\r\n\r\n//This is only to view players from \"YOUR TEAM\"\r\n\r\n class ViewPlayer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = { \r\n            UserID:'',\r\n            fullName:'',\r\n            TeamName: '',\r\n            SportType: '',\r\n            inviteCode:'',\r\n            hasATeam: false,\r\n            userType: [],\r\n            PlayerList:[],\r\n            totalGoals:0,\r\n            totalPoints:0,\r\n            totalPasses: 0,\r\n            totalShots:0,\r\n            totalShotsOnTarget:0,\r\n            totalTackles:0,\r\n            totalWonTheBall:0,\r\n            totalLostTheBall:0,\r\n            totalYellowCards:0,\r\n            totalRedCards:0,\r\n            totalAssists:0\r\n        };\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n\r\n     this.getPlayerDetails();\r\n\r\n        var myUserId = firebase.auth().currentUser.uid;\r\n\r\n        //get SportType of your Team\r\n        firebase.database().ref('/teams').child(myUserId).once('value' , snapshot =>  {\r\n            const playerObj = snapshot.val();\r\n\r\n            console.log(playerObj);\r\n\r\n            let SportType = playerObj.SportType;\r\n            this.setState({SportType:SportType});\r\n\r\n        });\r\n\r\n\r\n       \r\n\r\n    }\r\n\r\n\r\n    getPlayerDetails = async() => {\r\n\r\n         // Pass the sport type from the {manageTeam} use it to determine the screas\r\n\r\n            //Obtain SelectedStarting11 Array of players\r\n            const { state, setParams, navigate } = this.props.navigation;\r\n            const params = state.params || {};\r\n\r\n\r\n\r\n            var myUserId = firebase.auth().currentUser.uid;\r\n\r\n            var playerKey = params.playerKey;\r\n\r\n\r\n        // WE need to test the below also a condition so that playerKey has a temporary UserID - jsut display (/teams/players record)\r\n\r\n            //   Use record ref to get Player details\r\n\r\n                    firebase.database().ref('/users').child(params.playerKey)\r\n                    .once('value' , snapshot =>  {\r\n\r\n                        if(snapshot.exists())\r\n                        {\r\n\r\n                            const playerObj = snapshot.val();\r\n\r\n                            console.log(playerObj);\r\n\r\n                            let fullName = playerObj.fullName;\r\n                            this.setState({fullName:fullName});\r\n\r\n                            let totalAssists = playerObj.totalAssists;\r\n                            this.setState({totalAssists:totalAssists});\r\n\r\n                            let totalGoals = playerObj.totalGoals;\r\n                            this.setState({totalGoals: playerObj.totalGoals});\r\n                    \r\n                            let totalLostTheBall = playerObj.totalLostTheBall;\r\n                            this.setState({totalLostTheBall: totalLostTheBall});\r\n                        \r\n                            let totalPasses =  playerObj.totalPasses; \r\n                            this.setState({totalPasses: totalPasses});\r\n                    \r\n                            let totalPoints = playerObj.totalPoints;\r\n                            this.setState({totalPoints: totalPoints});\r\n\r\n                            let totalRedCards = playerObj.totalRedCards;\r\n                            this.setState({totalRedCards: totalRedCards});\r\n                        \r\n                            let totalShots =  playerObj.totalShots;\r\n                            this.setState({totalShots: totalShots})\r\n                        \r\n                            let totalShotsOnTarget = playerObj.totalShotsOnTarget;\r\n                            this.setState({totalShotsOnTarget: totalShotsOnTarget});\r\n                        \r\n                            let totalTackles = playerObj.totalTackles;\r\n                            this.setState({totalTackles: totalTackles});\r\n                            \r\n                            let totalWonTheBall = playerObj.totalWonTheBall;\r\n                            this.setState({totalWonTheBall:totalWonTheBall});\r\n\r\n                            let totalYellowCards = playerObj.totalYellowCards;\r\n                            this.setState({totalYellowCards:totalYellowCards});\r\n                            \r\n                            let userType = playerObj.userType;\r\n                            this.setState({userType:userType});\r\n\r\n                            let SportType = playerObj.sportType;\r\n                            this.setState({SportType:SportType});\r\n\r\n                        }\r\n                        else\r\n                        {\r\n                            console.log('Doesnt exist');\r\n\r\n                            //Players\r\n                            firebase.database().ref('/teams').child(myUserId).child('/players').child(params.itemKey)\r\n                            .once('value' , snapshot =>  {\r\n\r\n                                const playerObj = snapshot.val();\r\n\r\n                                console.log(snapshot.val());\r\n    \r\n        \r\n                                let fullName = playerObj.fullName;\r\n                                this.setState({fullName:fullName});\r\n\r\n\r\n                                console.log(fullName);\r\n\r\n                                console.log(this.state.fullName);\r\n        \r\n                                let totalAssists = playerObj.totalAssists;\r\n                                this.setState({totalAssists:totalAssists});\r\n        \r\n                                let totalGoals = playerObj.totalGoals;\r\n                                this.setState({totalGoals: playerObj.totalGoals});\r\n                           \r\n                                let totalLostTheBall = playerObj.totalLostTheBall;\r\n                                this.setState({totalLostTheBall: totalLostTheBall});\r\n                              \r\n                                let totalPasses =  playerObj.totalPasses; \r\n                                this.setState({totalPasses: totalPasses});\r\n                           \r\n                                let totalPoints = playerObj.totalPoints;\r\n                                this.setState({totalPoints: totalPoints});\r\n        \r\n                                let totalRedCards = playerObj.totalRedCards;\r\n                                this.setState({totalRedCards: totalRedCards});\r\n                               \r\n                                let totalShots =  playerObj.totalShots;\r\n                                this.setState({totalShots: totalShots})\r\n                             \r\n                                let totalShotsOnTarget = playerObj.totalShotsOnTarget;\r\n                                this.setState({totalShotsOnTarget: totalShotsOnTarget});\r\n                            \r\n                                let totalTackles = playerObj.totalTackles;\r\n                                this.setState({totalTackles: totalTackles});\r\n                                \r\n                                let totalWonTheBall = playerObj.totalWonTheBall;\r\n                                this.setState({totalWonTheBall:totalWonTheBall});\r\n        \r\n                                let totalYellowCards = playerObj.totalYellowCards;\r\n                                this.setState({totalYellowCards:totalYellowCards});\r\n                                \r\n                  \r\n                            });\r\n\r\n                        }\r\n                      \r\n                        \r\n            });\r\n    }\r\n\r\n\r\n   render (){\r\n    \r\n\r\n\r\n    // check sportType \r\n    var SportType = this.state.SportType;\r\n    var ProfileHeader;\r\n    var Stats;\r\n\r\n    if(SportType == 'GAA')\r\n    {\r\n            ProfileHeader = (\r\n                <View style={styles.headerContainer}>\r\n                  <Text style = {styles.Text}>{this.state.fullName}</Text>\r\n                </View>\r\n              \r\n           \r\n            \r\n            );\r\n\r\n            Stats = (\r\n                <View style={styles.StatRow}>\r\n                    <View style={styles.StatColumn}>\r\n                        <Text style = {styles.Text}>Goals: {this.state.totalGoals}</Text>\r\n                        <Text style = {styles.Text}>Points: {this.state.totalPoints}</Text>\r\n                        <Text style = {styles.Text}>Passes: {this.state.totalPasses} </Text>\r\n                        <Text style = {styles.Text}>Shots: {this.state.totalShots}</Text>\r\n                        <Text style = {styles.Text}>Shots on target: {this.state.totalShotsOnTarget}</Text>\r\n                        <Text style = {styles.Text}>Tackles:{this.state.totalTackles}</Text>\r\n                        <Text style = {styles.Text}>Won the ball: {this.state.totalWonTheBall} </Text>\r\n                        <Text style = {styles.Text}>Lost the ball: {this.state.totalLostTheBall} </Text>\r\n                        <Text style = {styles.Text}>Yellow Card: {this.state.totalYellowCards} </Text>\r\n                        <Text style = {styles.Text}>Red Card: {this.state.totalRedCards} </Text>\r\n                        <Text style = {styles.Text}>Assists: {this.state.totalAssists} </Text>\r\n                    </View>\r\n                 </View>\r\n            );\r\n    }\r\n    else if(SportType == 'Soccer'){\r\n        ProfileHeader = (\r\n                <View style = {styles.container}>\r\n                  <Text style = {styles.Text}>Goals: {this.state.totalGoals}</Text>\r\n                  <Text style = {styles.Text}>Passes: {this.state.totalPasses} </Text>\r\n                  <Text style = {styles.Text}>Shots: {this.state.totalShots}</Text>\r\n                  <Text style = {styles.Text}>Shots on target: {this.state.totalShotsOnTarget}</Text>\r\n                  <Text style = {styles.Text}>Tackles:{this.state.totalTackles}</Text>\r\n                  <Text style = {styles.Text}>Won the ball: {this.state.totalWonTheBall} </Text>\r\n                  <Text style = {styles.Text}>Lost the ball: {this.state.totalLostTheBall} </Text>\r\n                  <Text style = {styles.Text}>Yellow Card: {this.state.totalYellowCards} </Text>\r\n                  <Text style = {styles.Text}>Red Card: {this.state.totalRedCards} </Text>\r\n                  <Text style = {styles.Text}>Assists: {this.state.totalAssists} </Text>\r\n                </View>\r\n            );\r\n\r\n\r\n            Stats = (\r\n                <View style={styles.StatRow}>\r\n                    <View style={styles.StatColumn}>\r\n                        <Text style = {styles.Text}>Goals: {this.state.totalGoals}</Text>\r\n                        <Text style = {styles.Text}>Passes: {this.state.totalPasses} </Text>\r\n                        <Text style = {styles.Text}>Shots: {this.state.totalShots}</Text>\r\n                        <Text style = {styles.Text}>Shots on target: {this.state.totalShotsOnTarget}</Text>\r\n                        <Text style = {styles.Text}>Tackles:{this.state.totalTackles}</Text>\r\n                        <Text style = {styles.Text}>Won the ball: {this.state.totalWonTheBall} </Text>\r\n                        <Text style = {styles.Text}>Lost the ball: {this.state.totalLostTheBall} </Text>\r\n                        <Text style = {styles.Text}>Yellow Card: {this.state.totalYellowCards} </Text>\r\n                        <Text style = {styles.Text}>Red Card: {this.state.totalRedCards} </Text>\r\n                        <Text style = {styles.Text}>Assists: {this.state.totalAssists} </Text>\r\n                    </View>\r\n                 </View>\r\n            );\r\n    }\r\n\r\n    return(\r\n        <ScrollView contentContainerStyle={{ flexGrow: 1, justifyContent: 'center'  ,  backgroundColor: '#242424', alignItems: \"center\", fontSize: 20,}}>\r\n        \r\n            {/* <Text>test</Text>\r\n          <Text style = {styles.Text}>{this.state.fullName}</Text> */}\r\n        {ProfileHeader}\r\n        <View style={styles.dataContainer}>\r\n        {Stats}\r\n        </View>\r\n        </ScrollView>\r\n        )\r\n   \r\n\r\n    }\r\n\r\n }\r\n\r\n const styles = StyleSheet.create({\r\n    // container: {\r\n    //     backgroundColor: '#242424', \r\n    // },\r\n    Text: {\r\n        color:'#ffffff',\r\n        fontSize: 20,\r\n        fontWeight: \"bold\",\r\n        \r\n    },\r\n\r\n    container: {\r\n        backgroundColor: '#000000', \r\n      \r\n        alignItems: \"center\",\r\n        fontSize: 20,\r\n       \r\n    },\r\n    \r\n    dcontainer: {\r\n        backgroundColor: '#242424', \r\n        height:'100%',\r\n        alignItems: \"center\",\r\n        fontSize: 20,\r\n       \r\n    },\r\n    \r\n    headerContainer:{ \r\n\r\n        backgroundColor: '#FF6D01',\r\n        alignItems: \"center\",\r\n        borderWidth: 4,\r\n        borderColor:'#ffffff',\r\n         alignItems: 'center',\r\n        width: wp('50%') ,  // % of width device screen\r\n        marginTop:30,\r\n        padding:4,\r\n  \r\n    },\r\n\r\n\r\n\r\n    dataContainer: {\r\n        // height: hp('50%'), // 70% of height device screen\r\n        width: wp('50%') ,  // % of width device screen\r\n        backgroundColor: '#424242', \r\n        alignItems: \"center\",\r\n        borderWidth: 4,\r\n        borderColor:'#ffffff',\r\n \r\n        marginBottom:10\r\n    },\r\n\r\n    StatRow: {\r\n        flex:1,\r\n        flexDirection:\"row\",\r\n        alignItems: \"center\",\r\n        marginBottom:10\r\n    },\r\n\r\n    StatColumn: {\r\n        flex:1,\r\n        flexDirection:\"column\",\r\n        padding: 50,\r\n        marginBottom:10\r\n    },\r\n\r\n    buttonPosition:{\r\n        alignItems: \"center\",\r\n    },\r\n\r\n    button: {\r\n        width: '80%',\r\n        paddingTop:8,\r\n        paddingBottom:8,\r\n        borderRadius:7,\r\n        marginTop: 20,\r\n        fontSize: 20,\r\n        backgroundColor: '#FF6D01',\r\n        alignItems: \"center\",\r\n    },\r\n    buttonTitle: {\r\n        color:'#ffffff',\r\n        fontSize: 16,\r\n        fontWeight: \"bold\"\r\n    },\r\n\r\n });\r\n\r\n export default ViewPlayer;"]},"metadata":{},"sourceType":"module"}