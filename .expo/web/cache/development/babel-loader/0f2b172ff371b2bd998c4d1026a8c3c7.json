{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { SelectBoxStyle } from \"../Assets/Styles\";\nexport var SelectBoxComponent = function (_React$PureComponent) {\n  _inherits(SelectBoxComponent, _React$PureComponent);\n\n  var _super = _createSuper(SelectBoxComponent);\n\n  function SelectBoxComponent() {\n    _classCallCheck(this, SelectBoxComponent);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SelectBoxComponent, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          openModal = _this$props.openModal,\n          selectedObject = _this$props.selectedObject,\n          chooseText = _this$props.chooseText,\n          disabled = _this$props.disabled,\n          renderSelectView = _this$props.renderSelectView,\n          items = _this$props.items;\n      var selectViewIsDisabled = disabled || !items || items.length === 0;\n\n      if (renderSelectView) {\n        return renderSelectView(selectViewIsDisabled, selectedObject, openModal.bind(this));\n      }\n\n      return React.createElement(TouchableOpacity, {\n        activeOpacity: 0.7,\n        onPress: function onPress() {\n          return openModal();\n        },\n        style: [SelectBoxStyle.pressBtn, selectViewIsDisabled && SelectBoxStyle.disabledBtn]\n      }, React.createElement(View, {\n        style: SelectBoxStyle.container\n      }, React.createElement(Text, {\n        style: [selectViewIsDisabled ? SelectBoxStyle.disabledTxt : SelectBoxStyle.chooseText]\n      }, selectedObject && selectedObject.Name ? selectedObject.Name : chooseText), React.createElement(Image, {\n        source: require(\"../Assets/Images/down.png\"),\n        style: [SelectBoxStyle.downBtn, selectViewIsDisabled && SelectBoxStyle.disabledImage]\n      })));\n    }\n  }]);\n\n  return SelectBoxComponent;\n}(React.PureComponent);","map":{"version":3,"sources":["../../src/Components/SelectBox.tsx"],"names":[],"mappings":";;;;;;;;;;AACA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;;;;;AAKA,SAAS,cAAT;AAEA,WAAa,kBAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,WACQ,kBAAM;AAAA,wBACyE,KAAK,KAD9E;AAAA,UACJ,SADI,eACJ,SADI;AAAA,UACO,cADP,eACO,cADP;AAAA,UACuB,UADvB,eACuB,UADvB;AAAA,UACmC,QADnC,eACmC,QADnC;AAAA,UAC6C,gBAD7C,eAC6C,gBAD7C;AAAA,UAC+D,KAD/D,eAC+D,KAD/D;AAEZ,UAAM,oBAAoB,GAAI,QAAQ,IAAI,CAAC,KAAb,IAAsB,KAAK,CAAC,MAAN,KAAiB,CAArE;;AACA,UAAI,gBAAJ,EAAsB;AACrB,eAAQ,gBAAgB,CAAC,oBAAD,EAAuB,cAAvB,EAAuC,SAAS,CAAC,IAAV,CAAe,IAAf,CAAvC,CAAxB;AACA;;AACD,aACC,KAAA,CAAA,aAAA,CAAC,gBAAD,EAAiB;AAChB,QAAA,aAAa,EAAE,GADC;AAEhB,QAAA,OAAO,EAAE;AAAA,iBAAM,SAAS,EAAf;AAAA,SAFO;AAGhB,QAAA,KAAK,EAAE,CAAC,cAAc,CAAC,QAAhB,EAA0B,oBAAoB,IAAI,cAAc,CAAC,WAAjE;AAHS,OAAjB,EAKC,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK;AAAC,QAAA,KAAK,EAAE,cAAc,CAAC;AAAvB,OAAL,EACC,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK;AAAC,QAAA,KAAK,EAAE,CAAC,oBAAoB,GAAG,cAAc,CAAC,WAAlB,GAAgC,cAAc,CAAC,UAApE;AAAR,OAAL,EACE,cAAc,IAAI,cAAc,CAAC,IAAlC,GAA0C,cAAc,CAAC,IAAzD,GAAgE,UADjE,CADD,EAIC,KAAA,CAAA,aAAA,CAAC,KAAD,EAAM;AAAC,QAAA,MAAM,EAAE,OAAO,6BAAhB;AACL,QAAA,KAAK,EAAE,CAAC,cAAc,CAAC,OAAhB,EAAyB,oBAAoB,IAAI,cAAc,CAAC,aAAhE;AADF,OAAN,CAJD,CALD,CADD;AAgBA;AAvBF;;AAAA;AAAA,EAAwC,KAAK,CAAC,aAA9C","sourceRoot":"","sourcesContent":["import * as React from 'react';\nimport { View, Text, TouchableOpacity, Image } from 'react-native';\nimport { SelectBoxStyle } from '../Assets/Styles';\nexport class SelectBoxComponent extends React.PureComponent {\n    render() {\n        const { openModal, selectedObject, chooseText, disabled, renderSelectView, items } = this.props;\n        const selectViewIsDisabled = (disabled || !items || items.length === 0);\n        if (renderSelectView) {\n            return (renderSelectView(selectViewIsDisabled, selectedObject, openModal.bind(this)));\n        }\n        return (React.createElement(TouchableOpacity, { activeOpacity: 0.7, onPress: () => openModal(), style: [SelectBoxStyle.pressBtn, selectViewIsDisabled && SelectBoxStyle.disabledBtn] },\n            React.createElement(View, { style: SelectBoxStyle.container },\n                React.createElement(Text, { style: [selectViewIsDisabled ? SelectBoxStyle.disabledTxt : SelectBoxStyle.chooseText] }, (selectedObject && selectedObject.Name) ? selectedObject.Name : chooseText),\n                React.createElement(Image, { source: require('../Assets/Images/down.png'), style: [SelectBoxStyle.downBtn, selectViewIsDisabled && SelectBoxStyle.disabledImage] }))));\n    }\n}\n//# sourceMappingURL=SelectBox.js.map"]},"metadata":{},"sourceType":"module"}