{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\StatsAppNative\\\\MyApp\\\\screens\\\\ViewGame\\\\ViewGame.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useEffect, useState, Component } from 'react';\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { DarkTheme, useNavigation } from '@react-navigation/native';\nimport { createAppContainer } from 'react-navigation';\nimport { createStackNavigator } from 'react-navigation-stack';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport { createKeyboardAwareNavigator, ThemeColors } from 'react-navigation';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\nimport { TapGestureHandler } from 'react-native-gesture-handler';\nvar screenWidth = Dimensions.get('window').width;\nvar screenHeight = Dimensions.get('window').height;\nvar win = Dimensions.get('window');\nvar ratioGaaView = win.width / 590;\nvar ratioSoccerView = win.width / 700;\n\nvar ViewGame = function (_Component) {\n  _inherits(ViewGame, _Component);\n\n  var _super = _createSuper(ViewGame);\n\n  function ViewGame(props) {\n    var _this;\n\n    _classCallCheck(this, ViewGame);\n\n    _this = _super.call(this, props);\n\n    _this.filterGameData = function _callee() {\n      var totalTeamGoals, myUserId, _this$props$navigatio, state, setParams, navigate, params, tempArr, tempArrOpponents, playerArr, OpponentsplayerArr;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              totalTeamGoals = _this.state.totalTeamGoals;\n              myUserId = firebase.auth().currentUser.uid;\n              _this$props$navigatio = _this.props.navigation, state = _this$props$navigatio.state, setParams = _this$props$navigatio.setParams, navigate = _this$props$navigatio.navigate;\n              params = state.params || {};\n              tempArr = [];\n              tempArrOpponents = [];\n\n              try {\n                firebase.database().ref('/teams').child(myUserId).child('games').child(params.GameRecordKey).child('YourTeamStats').child(params.StatsRecordKey).on('value', function (snapshot) {\n                  if (snapshot.exists()) {\n                    var gameObj = snapshot.val();\n                    var _screenWidth = gameObj.screenWidth;\n\n                    _this.setState({\n                      StatsStoredUsingScreenWidth: _screenWidth\n                    });\n\n                    var _screenHeight = gameObj.screenHeight;\n\n                    _this.setState({\n                      StatsStoredUsingScreenHeight: _screenHeight\n                    });\n\n                    var _totalTeamGoals = gameObj.totalTeamGoals;\n\n                    _this.setState({\n                      totalTeamGoals: _totalTeamGoals\n                    });\n\n                    var totalTeamPoints = gameObj.totalTeamPoints;\n\n                    _this.setState({\n                      totalTeamPoints: totalTeamPoints\n                    });\n\n                    var totalTeamShots = gameObj.totalTeamShots;\n\n                    _this.setState({\n                      totalTeamShots: totalTeamShots\n                    });\n\n                    var totalTeamShotsOnTarget = gameObj.totalTeamShotsOnTarget;\n\n                    _this.setState({\n                      totalTeamShotsOnTarget: totalTeamShotsOnTarget\n                    });\n\n                    var OpponentsName = gameObj.OpponentsName;\n\n                    _this.setState({\n                      OpponentsName: OpponentsName\n                    });\n\n                    var totalOpponentsTeamGoals = gameObj.totalOpponentsTeamGoals;\n\n                    _this.setState({\n                      totalOpponentsTeamGoals: totalOpponentsTeamGoals\n                    });\n\n                    var totalOpponentsTeamShots = gameObj.totalOpponentsTeamShots;\n\n                    _this.setState({\n                      totalOpponentsTeamShots: totalOpponentsTeamShots\n                    });\n\n                    var totalOpponentsTeamShotsOnTarget = gameObj.totalOpponentsTeamShotsOnTarget;\n\n                    _this.setState({\n                      totalOpponentsTeamShotsOnTarget: totalOpponentsTeamShotsOnTarget\n                    });\n                  } else {}\n                });\n                firebase.database().ref('/teams').child(myUserId).child('/games').child(params.GameRecordKey).child('EventFieldPositions').on('value', function (snapshot) {\n                  tempArr = _this.snapshotToArray(snapshot);\n\n                  _this.setState({\n                    EventFieldLocations: tempArr\n                  });\n                });\n                firebase.database().ref('/teams').child(myUserId).child('/games').child(params.GameRecordKey).child('OpponentsEventFieldPositions').on('value', function (snapshot) {\n                  tempArrOpponents = _this.snapshotToArray(snapshot);\n\n                  _this.setState({\n                    OpponentsEventFieldLocations: tempArrOpponents\n                  });\n                });\n                myUserId = firebase.auth().currentUser.uid;\n                playerArr = [];\n                firebase.database().ref('/teams').child(myUserId).child('/games').child(params.GameRecordKey).child('YourTeam').child('players').on('value', function (snapshot) {\n                  playerArr = _this.snapshotToArray(snapshot);\n\n                  _this.setState({\n                    PlayerData: playerArr\n                  });\n                });\n                OpponentsplayerArr = [];\n                firebase.database().ref('/teams').child(myUserId).child('/games').child(params.GameRecordKey).child('Opponents').child('players').on('value', function (snapshot) {\n                  OpponentsplayerArr = _this.snapshotToArray(snapshot);\n\n                  _this.setState({\n                    OpponentsPlayerData: OpponentsplayerArr\n                  });\n                });\n              } catch (err) {}\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.GetSelectedYourTeamPlayerStats = function (value) {\n      return function () {\n        var _this$props$navigatio2 = _this.props.navigation,\n            state = _this$props$navigatio2.state,\n            setParams = _this$props$navigatio2.setParams,\n            navigate = _this$props$navigatio2.navigate;\n        var params = state.params || {};\n        var myUserId = firebase.auth().currentUser.uid;\n        var tempArrYourTeam = [];\n        firebase.database().ref('/teams').child(myUserId).child('/games').child(params.key).child('YourTeam').child('players').on('value', function (snapshot) {\n          tempArrYourTeam = _this.snapshotToArray(snapshot);\n\n          _this.setState({\n            YourTeamPlayerData: tempArrYourTeam\n          });\n        });\n      };\n    };\n\n    _this.GoToMainMenu = function _callee2() {\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _this.props.navigation.navigate('Home');\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.GoToViewGameMenu = function _callee3() {\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _this.setState({\n                displayReviewSelection: true\n              });\n\n              _this.setState({\n                YourTeamSpecificStatFieldEvents: false\n              });\n\n              _this.setState({\n                OpponentsSpecificStatFieldEvents: false\n              });\n\n              _this.setState({\n                displayReviewGameStats: false\n              });\n\n              _this.setState({\n                displaySelectedPlayerStats: false\n              });\n\n              _this.setState({\n                displayOpponentsSelectedPlayerStats: false\n              });\n\n              _this.setState({\n                SelectAnEvent_ReviewGameStats_YourTeam: false\n              });\n\n              _this.setState({\n                SelectAnEvent_ReviewGameStats_Opponents: false\n              });\n\n              _this.setState({\n                SelectAnEvent_ReviewGameStats_YourTeamPlayer: false\n              });\n\n              _this.setState({\n                SelectAnEvent_ReviewGameStats_Opponents_TeamPlayer: false\n              });\n\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.GetSelectedOpponentsPlayerStats = function (value) {\n      return function () {\n        var _this$props$navigatio3 = _this.props.navigation,\n            state = _this$props$navigatio3.state,\n            setParams = _this$props$navigatio3.setParams,\n            navigate = _this$props$navigatio3.navigate;\n        var params = state.params || {};\n        var myUserId = firebase.auth().currentUser.uid;\n        var tempArrOpponents = [];\n        firebase.database().ref('/teams').child(myUserId).child('/games').child(params.key).child('Opponents').child('players').on('value', function (snapshot) {\n          tempArrOpponents = _this.snapshotToArray(snapshot);\n\n          _this.setState({\n            OpponentsPlayerData: tempArrOpponents\n          });\n        });\n      };\n    };\n\n    _this.ReviewPlayerStats = function (itemKey) {\n      var selectedTeamPlayer = _this.state.selectedTeamPlayer;\n      var YourTeamEventSelection = _this.state.YourTeamEventSelection;\n      var myUserId = firebase.auth().currentUser.uid;\n      var _this$props$navigatio4 = _this.props.navigation,\n          state = _this$props$navigatio4.state,\n          setParams = _this$props$navigatio4.setParams,\n          navigate = _this$props$navigatio4.navigate;\n      var params = state.params || {};\n      var tempArr = _this.state.tempArr;\n\n      if (selectedTeamPlayer == '') {\n        return alert(\"Please select a player\");\n      } else {\n        _this.setState({\n          displayReviewGameStats: false\n        });\n\n        _this.setState({\n          displaySelectedPlayerStats: true\n        });\n\n        _this.setState({\n          SelectAnEvent_ReviewGameStats_YourTeamPlayer: false\n        });\n\n        firebase.database().ref('/teams').child(myUserId).child('/games').child(params.GameRecordKey).child('YourTeam').child('players').orderByChild(\"PlayerID\").equalTo(selectedTeamPlayer).on('value', function (snapshot) {\n          var playerObj = snapshot.val();\n          tempArr = _this.snapshotToArray(snapshot);\n\n          for (var i = 0; i < tempArr.length; i++) {\n            var Goals = tempArr[i].Goals;\n\n            _this.setState({\n              Goals: Goals\n            });\n\n            var Points = tempArr[i].Points;\n\n            _this.setState({\n              Points: Points\n            });\n\n            var Passes = tempArr[i].Passes;\n\n            _this.setState({\n              Passes: Passes\n            });\n\n            var PlayerKitNumber = tempArr[i].PlayerKitNumber;\n\n            _this.setState({\n              PlayerKitNumber: PlayerKitNumber\n            });\n\n            var PlayerName = tempArr[i].PlayerName;\n\n            _this.setState({\n              PlayerName: PlayerName\n            });\n\n            var PlayerPosition = tempArr[i].PlayerPosition;\n\n            _this.setState({\n              PlayerPosition: PlayerPosition\n            });\n\n            var Shots = tempArr[i].Shots;\n\n            _this.setState({\n              Shots: Shots\n            });\n\n            var ShotsOnTarget = tempArr[i].ShotsOnTarget;\n\n            _this.setState({\n              ShotsOnTarget: ShotsOnTarget\n            });\n          }\n        });\n      }\n    };\n\n    _this.ReviewOpponentsPlayerStats = function (itemKey) {\n      var myUserId = firebase.auth().currentUser.uid;\n      var _this$props$navigatio5 = _this.props.navigation,\n          state = _this$props$navigatio5.state,\n          setParams = _this$props$navigatio5.setParams,\n          navigate = _this$props$navigatio5.navigate;\n      var params = state.params || {};\n      var tempArr = _this.state.tempArr;\n      var selectedOpponentsPlayer = _this.state.selectedOpponentsPlayer;\n\n      if (selectedOpponentsPlayer == '') {\n        return alert(\"Please select a player\");\n      } else {\n        _this.setState({\n          displayReviewGameStats: false\n        });\n\n        _this.setState({\n          displayOpponentsSelectedPlayerStats: true\n        });\n\n        _this.setState({\n          SelectAnEvent_ReviewGameStats_Opponents_TeamPlayer: false\n        });\n\n        firebase.database().ref('/teams').child(myUserId).child('/games').child(params.GameRecordKey).child('Opponents').child('players').orderByChild(\"PlayerID\").equalTo(selectedOpponentsPlayer).on('value', function (snapshot) {\n          var playerObj = snapshot.val();\n          tempArr = _this.snapshotToArray(snapshot);\n\n          for (var i = 0; i < tempArr.length; i++) {\n            var Goals = tempArr[i].Goals;\n\n            _this.setState({\n              Goals: Goals\n            });\n\n            var Points = tempArr[i].Points;\n\n            _this.setState({\n              Points: Points\n            });\n\n            var Passes = tempArr[i].Passes;\n\n            _this.setState({\n              Passes: Passes\n            });\n\n            var PlayerKitNumber = tempArr[i].PlayerKitNumber;\n\n            _this.setState({\n              PlayerKitNumber: PlayerKitNumber\n            });\n\n            var PlayerName = tempArr[i].PlayerName;\n\n            _this.setState({\n              PlayerName: PlayerName\n            });\n\n            var PlayerPosition = tempArr[i].PlayerPosition;\n\n            _this.setState({\n              PlayerPosition: PlayerPosition\n            });\n\n            var Shots = tempArr[i].Shots;\n\n            _this.setState({\n              Shots: Shots\n            });\n\n            var ShotsOnTarget = tempArr[i].ShotsOnTarget;\n\n            _this.setState({\n              ShotsOnTarget: ShotsOnTarget\n            });\n          }\n        });\n      }\n    };\n\n    _this.GetSpecificPlayerEventLocations = function _callee4() {\n      var EventFieldLocations, YourTeamEventSelection, selectedTeamPlayer, myUserId, tempEventFieldLocations, _this$props$navigatio6, state, setParams, navigate, params, i, data;\n\n      return _regeneratorRuntime.async(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              EventFieldLocations = _this.state.EventFieldLocations;\n              YourTeamEventSelection = _this.state.YourTeamEventSelection;\n              selectedTeamPlayer = _this.state.selectedTeamPlayer;\n              myUserId = firebase.auth().currentUser.uid;\n              tempEventFieldLocations = _this.state.tempEventFieldLocations;\n\n              if (!(selectedTeamPlayer != '')) {\n                _context4.next = 18;\n                break;\n              }\n\n              if (!(YourTeamEventSelection == '')) {\n                _context4.next = 10;\n                break;\n              }\n\n              return _context4.abrupt(\"return\", alert(\"Please select an event\"));\n\n            case 10:\n              _this$props$navigatio6 = _this.props.navigation, state = _this$props$navigatio6.state, setParams = _this$props$navigatio6.setParams, navigate = _this$props$navigatio6.navigate;\n              params = state.params || {};\n              tempEventFieldLocations.splice(0, tempEventFieldLocations.length);\n\n              for (i = 0; i < EventFieldLocations.length; i++) {\n                if (EventFieldLocations[i].EventType == YourTeamEventSelection) {\n                  if (EventFieldLocations[i].UserID == selectedTeamPlayer) {\n                    data = {\n                      x: EventFieldLocations[i].x,\n                      y: EventFieldLocations[i].y,\n                      id: EventFieldLocations[i].UserID,\n                      EventType: EventFieldLocations[i].EventType\n                    };\n\n                    _this.state.tempEventFieldLocations.push(data);\n                  }\n                }\n              }\n\n              _this.setState({\n                YourTeamSpecificStatFieldEvents: true\n              });\n\n              _this.setState({\n                SelectAnEvent_ReviewGameStats_YourTeamPlayer: false\n              });\n\n            case 16:\n              _context4.next = 19;\n              break;\n\n            case 18:\n              return _context4.abrupt(\"return\", alert(\"Please select a player\"));\n\n            case 19:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.GetSpecificOpponentsPlayerEventLocations = function _callee5() {\n      var OpponentsEventFieldLocations, OpponentsEventSelection, selectedOpponentsPlayer, tempEventFieldLocations, _this$props$navigatio7, state, setParams, navigate, params, i, data;\n\n      return _regeneratorRuntime.async(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              OpponentsEventFieldLocations = _this.state.OpponentsEventFieldLocations;\n              OpponentsEventSelection = _this.state.OpponentsEventSelection;\n              selectedOpponentsPlayer = _this.state.selectedOpponentsPlayer;\n              tempEventFieldLocations = _this.state.tempEventFieldLocations;\n\n              if (!(selectedOpponentsPlayer != '')) {\n                _context5.next = 17;\n                break;\n              }\n\n              if (!(OpponentsEventSelection == '')) {\n                _context5.next = 9;\n                break;\n              }\n\n              return _context5.abrupt(\"return\", alert(\"Please select an event\"));\n\n            case 9:\n              _this$props$navigatio7 = _this.props.navigation, state = _this$props$navigatio7.state, setParams = _this$props$navigatio7.setParams, navigate = _this$props$navigatio7.navigate;\n              params = state.params || {};\n              tempEventFieldLocations.splice(0, tempEventFieldLocations.length);\n\n              for (i = 0; i < OpponentsEventFieldLocations.length; i++) {\n                if (OpponentsEventFieldLocations[i].EventType == OpponentsEventSelection) {\n                  if (OpponentsEventFieldLocations[i].UserID == selectedOpponentsPlayer) {\n                    data = {\n                      x: OpponentsEventFieldLocations[i].x,\n                      y: OpponentsEventFieldLocations[i].y,\n                      id: OpponentsEventFieldLocations[i].UserID\n                    };\n\n                    _this.state.tempEventFieldLocations.push(data);\n                  }\n                }\n              }\n\n              _this.setState({\n                OpponentsSpecificStatFieldEvents: true\n              });\n\n              _this.setState({\n                SelectAnEvent_ReviewGameStats_Opponents_TeamPlayer: false\n              });\n\n            case 15:\n              _context5.next = 18;\n              break;\n\n            case 17:\n              return _context5.abrupt(\"return\", alert(\"Please select a player\"));\n\n            case 18:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.ReviewGameStats = function _callee6() {\n      return _regeneratorRuntime.async(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _this.setState({\n                displayReviewSelection: false\n              });\n\n              _this.setState({\n                displayReviewGameStats: true\n              });\n\n            case 2:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.TeamSpecificStat = function _callee7() {\n      return _regeneratorRuntime.async(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _this.setState({\n                SelectAnEvent_ReviewGameStats_YourTeam: true\n              });\n\n              _this.setState({\n                displayReviewSelection: false\n              });\n\n              _this.setState({\n                displayReviewGameStats: false\n              });\n\n            case 3:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.OpponentsSpecificStat = function _callee8() {\n      return _regeneratorRuntime.async(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _this.setState({\n                SelectAnEvent_ReviewGameStats_Opponents: true\n              });\n\n              _this.setState({\n                displayReviewGameStats: false\n              });\n\n              _this.setState({\n                displayReviewSelection: false\n              });\n\n            case 3:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.ExecuteYourTeamEventAnaylsis = function _callee9() {\n      var YourTeamEventSelection, EventFieldLocations, myUserId, tempEventFieldLocations, _this$props$navigatio8, state, setParams, navigate, params, i, data;\n\n      return _regeneratorRuntime.async(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              YourTeamEventSelection = _this.state.YourTeamEventSelection;\n              EventFieldLocations = _this.state.EventFieldLocations;\n              myUserId = firebase.auth().currentUser.uid;\n              tempEventFieldLocations = _this.state.tempEventFieldLocations;\n              _this$props$navigatio8 = _this.props.navigation, state = _this$props$navigatio8.state, setParams = _this$props$navigatio8.setParams, navigate = _this$props$navigatio8.navigate;\n              params = state.params || {};\n              tempEventFieldLocations.splice(0, tempEventFieldLocations.length);\n\n              for (i = 0; i < EventFieldLocations.length; i++) {\n                if (EventFieldLocations[i].EventType == YourTeamEventSelection) {\n                  data = {\n                    x: EventFieldLocations[i].x,\n                    y: EventFieldLocations[i].y\n                  };\n\n                  _this.state.tempEventFieldLocations.push(data);\n                }\n              }\n\n              _this.setState({\n                SelectAnEvent_ReviewGameStats_YourTeam: false\n              });\n\n              _this.setState({\n                YourTeamSpecificStatFieldEvents: true\n              });\n\n            case 10:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.ExecuteOpponentsPlayerEventAnaylsis = function _callee10() {\n      var OpponentEventSelection, OpponentsEventFieldLocations, myUserId, tempEventFieldLocations, SportType, _this$props$navigatio9, state, setParams, navigate, params, i, data;\n\n      return _regeneratorRuntime.async(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              OpponentEventSelection = _this.state.OpponentEventSelection;\n              OpponentsEventFieldLocations = _this.state.OpponentsEventFieldLocations;\n              myUserId = firebase.auth().currentUser.uid;\n              tempEventFieldLocations = _this.state.tempEventFieldLocations;\n              SportType = _this.state.SportType;\n              _this$props$navigatio9 = _this.props.navigation, state = _this$props$navigatio9.state, setParams = _this$props$navigatio9.setParams, navigate = _this$props$navigatio9.navigate;\n              params = state.params || {};\n              tempEventFieldLocations.splice(0, tempEventFieldLocations.length);\n\n              for (i = 0; i < OpponentsEventFieldLocations.length; i++) {\n                if (OpponentsEventFieldLocations[i].EventType == OpponentEventSelection) {\n                  data = {\n                    x: OpponentsEventFieldLocations[i].x,\n                    y: OpponentsEventFieldLocations[i].y\n                  };\n\n                  _this.state.tempEventFieldLocations.push(data);\n                }\n              }\n\n              _this.setState({\n                SelectAnEvent_ReviewGameStats_Opponents: false\n              });\n\n              _this.setState({\n                OpponentsSpecificStatFieldEvents: true\n              });\n\n            case 11:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.snapshotToArray = function (snapshot) {\n      var retArr = [];\n      snapshot.forEach(function (childSnapshot) {\n        var item = childSnapshot.val();\n        item.key = childSnapshot.key;\n        retArr.push(item);\n      });\n      return retArr;\n    };\n\n    _this.YourTeamSelected = function _callee11() {\n      var _this$props$navigatio10, state, setParams, navigate, params, myUserId, tempArr;\n\n      return _regeneratorRuntime.async(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              _this.setState({\n                displayReviewOpponentsPlayer: false\n              });\n\n              _this.setState({\n                displayReviewSelection: false\n              });\n\n              _this.setState({\n                displayReviewYourTeamPlayer: true\n              });\n\n              _this.setState({\n                displayTeamOption: false\n              });\n\n              _this$props$navigatio10 = _this.props.navigation, state = _this$props$navigatio10.state, setParams = _this$props$navigatio10.setParams, navigate = _this$props$navigatio10.navigate;\n              params = state.params || {};\n              myUserId = firebase.auth().currentUser.uid;\n              tempArr = [];\n              firebase.database().ref('/teams').child(myUserId).child('/games').child(params.GameRecordKey).child('YourTeam').child('players').on('value', function (snapshot) {\n                console.log(snapshot.val());\n                tempArr = _this.snapshotToArray(snapshot);\n\n                _this.setState({\n                  PlayerData: tempArr\n                });\n              });\n\n            case 9:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.OpponentsSelected = function _callee12() {\n      var _this$props$navigatio11, state, setParams, navigate, params, myUserId, tempArr;\n\n      return _regeneratorRuntime.async(function _callee12$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              _this.setState({\n                displayReviewSelection: false\n              });\n\n              _this.setState({\n                displayReviewOpponentsPlayer: true\n              });\n\n              _this.setState({\n                displayTeamOption: false\n              });\n\n              _this$props$navigatio11 = _this.props.navigation, state = _this$props$navigatio11.state, setParams = _this$props$navigatio11.setParams, navigate = _this$props$navigatio11.navigate;\n              params = state.params || {};\n              myUserId = firebase.auth().currentUser.uid;\n              tempArr = [];\n              firebase.database().ref('/teams').child(myUserId).child('/games').child(params.GameRecordKey).child('Opponents').child('players').on('value', function (snapshot) {\n                tempArr = _this.snapshotToArray(snapshot);\n\n                _this.setState({\n                  OpponentsPlayerData: tempArr\n                });\n              });\n\n            case 8:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.SelectPlayerSelection = function _callee13() {\n      return _regeneratorRuntime.async(function _callee13$(_context13) {\n        while (1) {\n          switch (_context13.prev = _context13.next) {\n            case 0:\n              _this.setState({\n                displayReviewGameStats: false\n              });\n\n              _this.setState({\n                displayReviewSelection: false\n              });\n\n              _this.setState({\n                SelectAnEvent_ReviewGameStats_YourTeamPlayer: true\n              });\n\n            case 3:\n            case \"end\":\n              return _context13.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.SelectOpponentsPlayerSelection = function _callee14() {\n      return _regeneratorRuntime.async(function _callee14$(_context14) {\n        while (1) {\n          switch (_context14.prev = _context14.next) {\n            case 0:\n              _this.setState({\n                displayReviewGameStats: false\n              });\n\n              _this.setState({\n                displayReviewSelection: false\n              });\n\n              _this.setState({\n                SelectAnEvent_ReviewGameStats_Opponents_TeamPlayer: true\n              });\n\n            case 3:\n            case \"end\":\n              return _context14.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      TeamName: '',\n      OpponentsName: '',\n      SportType: '',\n      inviteCode: '',\n      hasATeam: false,\n      userType: [],\n      GameList: [],\n      GameViewList: [],\n      EventType: '',\n      UsersScreenHeight: 0,\n      UsersScreenWidth: 0,\n      statRecord: '',\n      gameStatsRecordsArray: [],\n      selectedTeamPlayer: '',\n      selectedOpponentsPlayer: '',\n      PlayerData: [],\n      OpponentsPlayerData: [],\n      YourTeamPlayerData: [],\n      tempArr: [],\n      tempArrOpponents: [],\n      tempArrYourTeam: [],\n      playerArr: [],\n      OpponentsplayerArr: [],\n      totalTeamGoals: 0,\n      totalTeamPoints: 0,\n      totalTeamPasses: 0,\n      totalTeamShots: 0,\n      totalTeamShotsOnTarget: 0,\n      totalTeamRedCards: 0,\n      totalTeamYellowCards: 0,\n      totalOpponentsTeamGoals: 0,\n      totalOpponentsTeamPoints: 0,\n      totalOpponentsTeamShots: 0,\n      totalOpponentsTeamShotsOnTarget: 0,\n      totalOpponentsTeamPasses: 0,\n      totalOpponentsTeamRedCards: 0,\n      totalOpponentsTeamYellowCards: 0,\n      GameRecordKey: '',\n      StatsRecordKey: '',\n      tempEventFieldLocations: [],\n      YourTeamFieldEventsView: false,\n      OpponentsFieldEventsView: false,\n      YourTeamEventSelection: '',\n      OpponentsEventSelection: '',\n      EventFieldLocations: [],\n      OpponentsEventFieldLocations: [],\n      displayTeamSpecificEventSelection: false,\n      displayOpponentsSpecificEventSelection: false,\n      YourTeamSpecificStatFieldEvents: false,\n      OpponentsSpecificStatFieldEventsSoccerView: false,\n      displayReviewSelection: true,\n      displayReviewGameStats: false,\n      displayReviewYourTeamPlayer: false,\n      displayReviewOpponentsPlayer: false,\n      displaySelectedPlayerStats: false,\n      displayOpponentsSelectedPlayerStats: false,\n      SelectAnEvent_ReviewGameStats_YourTeam: false,\n      SelectAnEvent_ReviewGameStats_Opponents: false,\n      SelectAnEvent_ReviewGameStats_YourTeamPlayer: false,\n      SelectAnEvent_ReviewGameStats_Opponents_TeamPlayer: false,\n      YourTeamSpecificStatFieldEvents: false,\n      OpponentsSpecificStatFieldEvents: false,\n      PlayerKitNumber: 0,\n      PlayerName: '',\n      PlayerPosition: '',\n      Goals: 0,\n      Points: 0,\n      Passes: 0,\n      Shots: 0,\n      ShotsOnTarget: 0,\n      RedCards: 0,\n      YellowCards: 0\n    };\n    return _this;\n  }\n\n  _createClass(ViewGame, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var _this$props$navigatio12 = this.props.navigation,\n          state = _this$props$navigatio12.state,\n          setParams = _this$props$navigatio12.setParams,\n          navigate = _this$props$navigatio12.navigate;\n      var params = state.params || {};\n      this.setState({\n        GameRecordKey: params.GameRecordKey\n      });\n      this.setState({\n        StatsRecordKey: params.StatsRecordKey\n      });\n      var myUserId = firebase.auth().currentUser.uid;\n      var GameRecordKey = this.state.GameRecordKey;\n      var gameStatsRecordsArray = this.state.gameStatsRecordsArray;\n      firebase.database().ref('/teams').child(myUserId).on('value', function (snapshot) {\n        var userObj = snapshot.val();\n        var SportType = userObj.SportType;\n\n        _this2.setState({\n          SportType: SportType\n        });\n\n        var TeamName = userObj.TeamName;\n\n        _this2.setState({\n          TeamName: TeamName\n        });\n      });\n      this.setState({\n        SelectAnEvent_ReviewGameStats_Opponents_TeamPlayer: false\n      });\n      this.filterGameData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var ReviewGameStats;\n      var ReviewPlayerStats;\n      var ReviewSelection;\n      var TeamOption;\n      var PlayerStats;\n      var FieldWithPlots;\n      var SportType = this.state.SportType;\n      var PlayerKitNumber = this.state.PlayerKitNumber;\n      var PlayerName = this.state.PlayerName;\n      var PlayerPosition = this.state.PlayerPosition;\n      var Goals = this.state.Goals;\n      var Points = this.state.Points;\n      var Passes = this.state.Passes;\n      var Shots = this.state.Shots;\n      var ShotsOnTarget = this.state.ShotsOnTarget;\n      var YourTeamEventSelection = this.state.YourTeamEventSelection;\n      var displayReviewSelection = this.state.displayReviewSelection;\n      var displaySelectedPlayerStats = this.state.displaySelectedPlayerStats;\n      var displayReviewGameStats = this.state.displayReviewGameStats;\n      var displayOpponentsSelectedPlayerStats = this.state.displayOpponentsSelectedPlayerStats;\n      var SelectAnEvent_ReviewGameStats_YourTeam = this.state.SelectAnEvent_ReviewGameStats_YourTeam;\n      var SelectAnEvent_ReviewGameStats_Opponents = this.state.SelectAnEvent_ReviewGameStats_Opponents;\n      var SelectAnEvent_ReviewGameStats_YourTeamPlayer = this.state.SelectAnEvent_ReviewGameStats_YourTeamPlayer;\n      var SelectAnEvent_ReviewGameStats_Opponents_TeamPlayer = this.state.SelectAnEvent_ReviewGameStats_Opponents_TeamPlayer;\n      var YourTeamSpecificStatFieldEvents = this.state.YourTeamSpecificStatFieldEvents;\n      var OpponentsSpecificStatFieldEvents = this.state.OpponentsSpecificStatFieldEvents;\n\n      if (displayReviewSelection == true) {\n        ReviewSelection = React.createElement(ScrollView, {\n          style: stylesViewGame.container,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1021,\n            columnNumber: 25\n          }\n        }, React.createElement(Text, {\n          style: stylesViewGame.text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1022,\n            columnNumber: 37\n          }\n        }, \"Select an Option:\"), React.createElement(TouchableOpacity, {\n          style: stylesViewGame.button,\n          onPress: this.ReviewGameStats,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1024,\n            columnNumber: 37\n          }\n        }, React.createElement(Text, {\n          style: stylesViewGame.StatTextWhite,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1025,\n            columnNumber: 41\n          }\n        }, \"Review All Games Stats\")), React.createElement(TouchableOpacity, {\n          style: stylesViewGame.button,\n          onPress: this.SelectPlayerSelection,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1028,\n            columnNumber: 37\n          }\n        }, React.createElement(Text, {\n          style: stylesViewGame.StatTextWhite,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1029,\n            columnNumber: 41\n          }\n        }, \"Specific players stats from \", this.state.TeamName)), React.createElement(TouchableOpacity, {\n          style: stylesViewGame.button,\n          onPress: this.SelectOpponentsPlayerSelection,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1032,\n            columnNumber: 37\n          }\n        }, React.createElement(Text, {\n          style: stylesViewGame.StatTextWhite,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1033,\n            columnNumber: 41\n          }\n        }, \"Specific players stats from \", this.state.OpponentsName)), React.createElement(TouchableOpacity, {\n          style: stylesViewGame.button,\n          onPress: this.GoToMainMenu,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1036,\n            columnNumber: 37\n          }\n        }, React.createElement(Text, {\n          style: stylesViewGame.StatTextWhite,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1037,\n            columnNumber: 41\n          }\n        }, \"Back to Main Menu\")));\n      }\n\n      if (displayReviewGameStats == true) {\n        if (SportType == 'GAA') {\n          ReviewGameStats = React.createElement(View, {\n            style: stylesViewGame.container,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1057,\n              columnNumber: 33\n            }\n          }, React.createElement(View, {\n            style: stylesViewGame.headerContainer,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1059,\n              columnNumber: 37\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.StatTextWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1060,\n              columnNumber: 41\n            }\n          }, this.state.TeamName)), React.createElement(View, {\n            style: stylesViewGame.StatRow,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1063,\n              columnNumber: 37\n            }\n          }, React.createElement(View, {\n            style: stylesViewGame.StatColumn,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1064,\n              columnNumber: 41\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.StatTextWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1065,\n              columnNumber: 45\n            }\n          }, \" Goals: \", this.state.totalTeamGoals), React.createElement(Text, {\n            style: stylesViewGame.StatTextWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1066,\n              columnNumber: 45\n            }\n          }, \" Points: \", this.state.totalTeamPoints), React.createElement(Text, {\n            style: stylesViewGame.StatTextWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1067,\n              columnNumber: 45\n            }\n          }, \" Shots: \", this.state.totalTeamShots), React.createElement(Text, {\n            style: stylesViewGame.StatTextWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1068,\n              columnNumber: 45\n            }\n          }, \" Shots on target: \", this.state.totalTeamShotsOnTarget))), React.createElement(TouchableOpacity, {\n            style: stylesViewGame.button,\n            onPress: this.TeamSpecificStat,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1073,\n              columnNumber: 37\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.buttonTitle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1074,\n              columnNumber: 41\n            }\n          }, \"Review a specific stat from \", this.state.TeamName, \" records\")), React.createElement(View, {\n            style: stylesViewGame.headerContainer,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1078,\n              columnNumber: 37\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.StatTextWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1079,\n              columnNumber: 41\n            }\n          }, this.state.OpponentsName)), React.createElement(View, {\n            style: stylesViewGame.StatRow,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1082,\n              columnNumber: 37\n            }\n          }, React.createElement(View, {\n            style: stylesViewGame.StatColumn,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1083,\n              columnNumber: 41\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.StatTextWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1084,\n              columnNumber: 45\n            }\n          }, \" Goals: \", this.state.totalOpponentsTeamGoals), React.createElement(Text, {\n            style: stylesViewGame.StatTextWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1085,\n              columnNumber: 45\n            }\n          }, \" Points: \", this.state.totalOpponentsTeamPoints), React.createElement(Text, {\n            style: stylesViewGame.StatTextWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1086,\n              columnNumber: 45\n            }\n          }, \" Shots: \", this.state.totalOpponentsTeamShots), React.createElement(Text, {\n            style: stylesViewGame.StatTextWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1087,\n              columnNumber: 45\n            }\n          }, \" Shots on target: \", this.state.totalOpponentsTeamShotsOnTarget))), React.createElement(TouchableOpacity, {\n            style: stylesViewGame.button,\n            onPress: this.OpponentsSpecificStat,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1091,\n              columnNumber: 37\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.buttonTitle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1092,\n              columnNumber: 41\n            }\n          }, \"Review a specific stat from \", this.state.OpponentsName, \" records\")), React.createElement(TouchableOpacity, {\n            style: stylesViewGame.button,\n            onPress: this.GoToMainMenu,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1095,\n              columnNumber: 37\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.buttonTitle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1096,\n              columnNumber: 41\n            }\n          }, \"Back to Main Menu\")));\n        } else if (SportType == 'Soccer') {\n          ReviewGameStats = React.createElement(View, {\n            style: stylesViewGame.container,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1109,\n              columnNumber: 33\n            }\n          }, React.createElement(View, {\n            style: stylesViewGame.headerContainer,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1111,\n              columnNumber: 37\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.StatTextWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1112,\n              columnNumber: 41\n            }\n          }, this.state.TeamName, \" records\")), React.createElement(View, {\n            style: stylesViewGame.StatRow,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1115,\n              columnNumber: 37\n            }\n          }, React.createElement(View, {\n            style: stylesViewGame.StatColumn,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1116,\n              columnNumber: 41\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.StatTextWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1117,\n              columnNumber: 45\n            }\n          }, \" Goals: \", this.state.totalTeamGoals), React.createElement(Text, {\n            style: stylesViewGame.StatTextWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1118,\n              columnNumber: 45\n            }\n          }, \" Shots: \", this.state.totalTeamShots), React.createElement(Text, {\n            style: stylesViewGame.StatTextWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1119,\n              columnNumber: 45\n            }\n          }, \" Shots on target: \", this.state.totalTeamShotsOnTarget))), React.createElement(TouchableOpacity, {\n            style: stylesViewGame.button,\n            onPress: this.TeamSpecificStat,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1123,\n              columnNumber: 37\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.buttonTitle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1124,\n              columnNumber: 41\n            }\n          }, \"Review a specific stat from \", this.state.TeamName, \" \")), React.createElement(View, {\n            style: stylesViewGame.headerContainer,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1127,\n              columnNumber: 37\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.StatTextWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1128,\n              columnNumber: 41\n            }\n          }, this.state.OpponentsName, \" records\")), React.createElement(View, {\n            style: stylesViewGame.StatRow,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1131,\n              columnNumber: 37\n            }\n          }, React.createElement(View, {\n            style: stylesViewGame.StatColumn,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1132,\n              columnNumber: 41\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.StatTextWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1133,\n              columnNumber: 45\n            }\n          }, \" Goals: \", this.state.totalOpponentsTeamGoals), React.createElement(Text, {\n            style: stylesViewGame.StatTextWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1134,\n              columnNumber: 45\n            }\n          }, \" Shots: \", this.state.totalOpponentsTeamShots), React.createElement(Text, {\n            style: stylesViewGame.StatTextWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1135,\n              columnNumber: 45\n            }\n          }, \" Shots on target: \", this.state.totalOpponentsTeamShotsOnTarget))), React.createElement(TouchableOpacity, {\n            style: stylesViewGame.button,\n            onPress: this.OpponentsSpecificStat,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1139,\n              columnNumber: 37\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.buttonTitle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1140,\n              columnNumber: 41\n            }\n          }, \"Review a specific stat from \", this.state.OpponentsName, \" records\")), React.createElement(TouchableOpacity, {\n            style: stylesViewGame.button,\n            onPress: this.GoToMainMenu,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1143,\n              columnNumber: 37\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.buttonTitle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1144,\n              columnNumber: 41\n            }\n          }, \"Back to Main Menu\")));\n        }\n      }\n\n      if (SelectAnEvent_ReviewGameStats_YourTeam) {\n        if (SportType == 'GAA') {\n          ReviewPlayerStats = React.createElement(ScrollView, {\n            style: {\n              backgroundColor: '#ffffff'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1164,\n              columnNumber: 25\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.buttonTitle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1166,\n              columnNumber: 41\n            }\n          }, \"Select a stat below\"), React.createElement(Picker, {\n            selectedValue: this.state.YourTeamEventSelection,\n            onValueChange: function onValueChange(text) {\n              return _this3.setState({\n                YourTeamEventSelection: text\n              });\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1168,\n              columnNumber: 41\n            }\n          }, React.createElement(Picker.Item, {\n            label: \"Select a event\",\n            value: \"\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1174,\n              columnNumber: 45\n            }\n          }), React.createElement(Picker.Item, {\n            label: \"Goal\",\n            value: \"Goal\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1175,\n              columnNumber: 45\n            }\n          }), React.createElement(Picker.Item, {\n            label: \"Point\",\n            value: \"Point\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1176,\n              columnNumber: 45\n            }\n          }), React.createElement(Picker.Item, {\n            label: \"Pass\",\n            value: \"Pass\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1177,\n              columnNumber: 45\n            }\n          })), React.createElement(TouchableOpacity, {\n            style: stylesViewGame.button,\n            onPress: this.ExecuteYourTeamEventAnaylsis,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1182,\n              columnNumber: 41\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.buttonTitle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1183,\n              columnNumber: 45\n            }\n          }, \"Review this teams games stats\")), React.createElement(TouchableOpacity, {\n            style: stylesViewGame.button,\n            onPress: this.GoToMainMenu,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1186,\n              columnNumber: 41\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.buttonTitle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1187,\n              columnNumber: 45\n            }\n          }, \"Back to Main Menu\")));\n        } else if (SportType == 'Soccer') {\n          ReviewPlayerStats = React.createElement(ScrollView, {\n            style: {\n              backgroundColor: '#ffffff'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1201,\n              columnNumber: 25\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.buttonTitle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1203,\n              columnNumber: 41\n            }\n          }, \"Select a stat below\"), React.createElement(Picker, {\n            selectedValue: this.state.YourTeamEventSelection,\n            onValueChange: function onValueChange(text) {\n              return _this3.setState({\n                YourTeamEventSelection: text\n              });\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1205,\n              columnNumber: 41\n            }\n          }, React.createElement(Picker.Item, {\n            label: \"Select a event\",\n            value: \"\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1211,\n              columnNumber: 45\n            }\n          }), React.createElement(Picker.Item, {\n            label: \"Goal\",\n            value: \"Goal\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1212,\n              columnNumber: 45\n            }\n          }), React.createElement(Picker.Item, {\n            label: \"Pass\",\n            value: \"Pass\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1213,\n              columnNumber: 45\n            }\n          })), React.createElement(TouchableOpacity, {\n            style: stylesViewGame.button,\n            onPress: this.ExecuteYourTeamEventAnaylsis,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1218,\n              columnNumber: 41\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.buttonTitle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1219,\n              columnNumber: 45\n            }\n          }, \"Review this teams games stats\")), React.createElement(TouchableOpacity, {\n            style: stylesViewGame.button,\n            onPress: this.GoToMainMenu,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1222,\n              columnNumber: 41\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.buttonTitle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1223,\n              columnNumber: 45\n            }\n          }, \"Back to Main Menu\")));\n        }\n      }\n\n      if (SelectAnEvent_ReviewGameStats_Opponents) {\n        if (SportType == 'GAA') {\n          ReviewPlayerStats = React.createElement(ScrollView, {\n            style: stylesViewGame.container,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1241,\n              columnNumber: 25\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.buttonTitle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1242,\n              columnNumber: 37\n            }\n          }, \"Select a stat below\"), React.createElement(Picker, {\n            selectedValue: this.state.OpponentsEventSelection,\n            onValueChange: function onValueChange(text) {\n              return _this3.setState({\n                OpponentsEventSelection: text\n              });\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1244,\n              columnNumber: 41\n            }\n          }, React.createElement(Picker.Item, {\n            label: \"Select a event\",\n            value: \"\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1250,\n              columnNumber: 45\n            }\n          }), React.createElement(Picker.Item, {\n            label: \"Goal\",\n            value: \"Goal\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1251,\n              columnNumber: 45\n            }\n          }), React.createElement(Picker.Item, {\n            label: \"Point\",\n            value: \"Point\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1252,\n              columnNumber: 45\n            }\n          }), React.createElement(Picker.Item, {\n            label: \"Pass\",\n            value: \"Pass\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1253,\n              columnNumber: 45\n            }\n          })), React.createElement(TouchableOpacity, {\n            style: stylesViewGame.button,\n            onPress: this.ExecuteOpponentsPlayerEventAnaylsis,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1258,\n              columnNumber: 45\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.buttonTitle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1259,\n              columnNumber: 49\n            }\n          }, \"Submit\")), React.createElement(TouchableOpacity, {\n            style: stylesViewGame.button,\n            onPress: this.GoToMainMenu,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1262,\n              columnNumber: 45\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.buttonTitle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1263,\n              columnNumber: 49\n            }\n          }, \"Back to Main Menu\")));\n        } else if (SportType == 'Soccer') {\n          ReviewPlayerStats = React.createElement(ScrollView, {\n            style: stylesViewGame.container,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1276,\n              columnNumber: 25\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.buttonTitle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1277,\n              columnNumber: 37\n            }\n          }, \"Select a stat\"), React.createElement(Picker, {\n            selectedValue: this.state.OpponentsEventSelection,\n            onValueChange: function onValueChange(text) {\n              return _this3.setState({\n                OpponentsEventSelection: text\n              });\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1279,\n              columnNumber: 41\n            }\n          }, React.createElement(Picker.Item, {\n            label: \"Select a event\",\n            value: \"\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1285,\n              columnNumber: 45\n            }\n          }), React.createElement(Picker.Item, {\n            label: \"Goal\",\n            value: \"Goal\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1286,\n              columnNumber: 45\n            }\n          }), React.createElement(Picker.Item, {\n            label: \"Pass\",\n            value: \"Pass\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1287,\n              columnNumber: 45\n            }\n          })), React.createElement(TouchableOpacity, {\n            style: stylesViewGame.button,\n            onPress: this.ExecuteOpponentsPlayerEventAnaylsis,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1292,\n              columnNumber: 45\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.buttonTitle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1293,\n              columnNumber: 49\n            }\n          }, \"Submit\")), React.createElement(TouchableOpacity, {\n            style: stylesViewGame.button,\n            onPress: this.GoToMainMenu,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1296,\n              columnNumber: 45\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.buttonTitle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1297,\n              columnNumber: 49\n            }\n          }, \"Back to Main Menu\")));\n        }\n      }\n\n      if (SelectAnEvent_ReviewGameStats_YourTeamPlayer == true) {\n        if (SportType == 'GAA') {\n          ReviewPlayerStats = React.createElement(ScrollView, {\n            style: {\n              backgroundColor: '#ffffff'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1317,\n              columnNumber: 25\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.buttonTitle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1319,\n              columnNumber: 33\n            }\n          }, \"Select a player \"), React.createElement(Picker, {\n            selectedValue: this.state.selectedTeamPlayer,\n            onValueChange: function onValueChange(text) {\n              return _this3.setState({\n                selectedTeamPlayer: text\n              });\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1321,\n              columnNumber: 33\n            }\n          }, React.createElement(Picker.Item, {\n            label: \"Select a Player\",\n            value: \"\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1327,\n              columnNumber: 33\n            }\n          }), this.state.PlayerData.map(function (item, index) {\n            return React.createElement(Picker.Item, {\n              label: item.PlayerName,\n              value: item.PlayerID,\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1331,\n                columnNumber: 49\n              }\n            });\n          })), React.createElement(Text, {\n            style: stylesViewGame.buttonTitle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1339,\n              columnNumber: 33\n            }\n          }, \"Select a stat (*Optional*)\"), React.createElement(Picker, {\n            selectedValue: this.state.YourTeamEventSelection,\n            onValueChange: function onValueChange(text) {\n              return _this3.setState({\n                YourTeamEventSelection: text\n              });\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1341,\n              columnNumber: 33\n            }\n          }, React.createElement(Picker.Item, {\n            label: \"Select a event\",\n            value: \"\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1347,\n              columnNumber: 41\n            }\n          }), React.createElement(Picker.Item, {\n            label: \"Goal\",\n            value: \"Goal\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1348,\n              columnNumber: 41\n            }\n          }), React.createElement(Picker.Item, {\n            label: \"Point\",\n            value: \"Point\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1349,\n              columnNumber: 41\n            }\n          }), React.createElement(Picker.Item, {\n            label: \"Pass\",\n            value: \"Pass\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1350,\n              columnNumber: 41\n            }\n          })), React.createElement(TouchableOpacity, {\n            style: stylesViewGame.button,\n            onPress: this.ReviewPlayerStats,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1356,\n              columnNumber: 33\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.buttonTitle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1357,\n              columnNumber: 37\n            }\n          }, \"Review this players games stats\")), React.createElement(TouchableOpacity, {\n            style: stylesViewGame.button,\n            onPress: this.GetSpecificPlayerEventLocations,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1361,\n              columnNumber: 33\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.buttonTitle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1362,\n              columnNumber: 37\n            }\n          }, \"Review this players event locations\")), React.createElement(TouchableOpacity, {\n            style: stylesViewGame.button,\n            onPress: this.GoToMainMenu,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1365,\n              columnNumber: 33\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.buttonTitle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1366,\n              columnNumber: 41\n            }\n          }, \"Back to Main Menu\")));\n        } else if (SportType == 'Soccer') {\n          ReviewPlayerStats = React.createElement(ScrollView, {\n            style: {\n              backgroundColor: '#ffffff'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1384,\n              columnNumber: 25\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.buttonTitle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1386,\n              columnNumber: 33\n            }\n          }, \"Select a player\"), React.createElement(Picker, {\n            selectedValue: this.state.selectedTeamPlayer,\n            onValueChange: function onValueChange(text) {\n              return _this3.setState({\n                selectedTeamPlayer: text\n              });\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1388,\n              columnNumber: 33\n            }\n          }, React.createElement(Picker.Item, {\n            label: \"Select a Player\",\n            value: \"\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1394,\n              columnNumber: 33\n            }\n          }), this.state.PlayerData.map(function (item, index) {\n            return React.createElement(Picker.Item, {\n              label: item.PlayerName,\n              value: item.PlayerID,\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1398,\n                columnNumber: 49\n              }\n            });\n          })), React.createElement(Text, {\n            style: stylesViewGame.buttonTitle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1406,\n              columnNumber: 33\n            }\n          }, \"Select a stat (*Optional*)\"), React.createElement(Picker, {\n            selectedValue: this.state.YourTeamEventSelection,\n            onValueChange: function onValueChange(text) {\n              return _this3.setState({\n                YourTeamEventSelection: text\n              });\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1408,\n              columnNumber: 33\n            }\n          }, React.createElement(Picker.Item, {\n            label: \"Select a event\",\n            value: \"\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1414,\n              columnNumber: 41\n            }\n          }), React.createElement(Picker.Item, {\n            label: \"Goal\",\n            value: \"Goal\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1415,\n              columnNumber: 41\n            }\n          }), React.createElement(Picker.Item, {\n            label: \"Pass\",\n            value: \"Pass\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1416,\n              columnNumber: 41\n            }\n          })), React.createElement(TouchableOpacity, {\n            style: stylesViewGame.button,\n            onPress: this.ReviewPlayerStats,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1421,\n              columnNumber: 33\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.buttonTitle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1422,\n              columnNumber: 37\n            }\n          }, \"Review this players games stats\")), React.createElement(TouchableOpacity, {\n            style: stylesViewGame.button,\n            onPress: this.GetSpecificPlayerEventLocations,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1426,\n              columnNumber: 33\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.buttonTitle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1427,\n              columnNumber: 37\n            }\n          }, \"Review this players event locations\")), React.createElement(TouchableOpacity, {\n            style: stylesViewGame.button,\n            onPress: this.GoToMainMenu,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1430,\n              columnNumber: 33\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.buttonTitle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1431,\n              columnNumber: 41\n            }\n          }, \"Back to Main Menu\")));\n        }\n      }\n\n      if (SelectAnEvent_ReviewGameStats_Opponents_TeamPlayer == true) {\n        if (SportType == 'GAA') {\n          ReviewPlayerStats = React.createElement(ScrollView, {\n            style: {\n              backgroundColor: '#ffffff'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1456,\n              columnNumber: 25\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.buttonTitle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1458,\n              columnNumber: 37\n            }\n          }, \"Select a player\"), React.createElement(Picker, {\n            selectedValue: this.state.selectedOpponentsPlayer,\n            onValueChange: function onValueChange(text) {\n              return _this3.setState({\n                selectedOpponentsPlayer: text\n              });\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1460,\n              columnNumber: 37\n            }\n          }, React.createElement(Picker.Item, {\n            label: \"Select a Player\",\n            value: \"\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1466,\n              columnNumber: 37\n            }\n          }), this.state.OpponentsPlayerData.map(function (item, index) {\n            return React.createElement(Picker.Item, {\n              label: item.PlayerName,\n              value: item.PlayerID,\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1470,\n                columnNumber: 53\n              }\n            });\n          })), React.createElement(Text, {\n            style: stylesViewGame.buttonTitle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1478,\n              columnNumber: 37\n            }\n          }, \"Select a stat (*Optional*)\"), React.createElement(Picker, {\n            selectedValue: this.state.OpponentsEventSelection,\n            onValueChange: function onValueChange(text) {\n              return _this3.setState({\n                OpponentsEventSelection: text\n              });\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1480,\n              columnNumber: 37\n            }\n          }, React.createElement(Picker.Item, {\n            label: \"Select a event\",\n            value: \"\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1486,\n              columnNumber: 45\n            }\n          }), React.createElement(Picker.Item, {\n            label: \"Goal\",\n            value: \"Goal\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1487,\n              columnNumber: 45\n            }\n          }), React.createElement(Picker.Item, {\n            label: \"Point\",\n            value: \"Point\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1488,\n              columnNumber: 45\n            }\n          }), React.createElement(Picker.Item, {\n            label: \"Pass\",\n            value: \"Pass\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1489,\n              columnNumber: 45\n            }\n          })), React.createElement(TouchableOpacity, {\n            style: stylesViewGame.button,\n            onPress: this.ReviewOpponentsPlayerStats,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1494,\n              columnNumber: 37\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.buttonTitle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1495,\n              columnNumber: 41\n            }\n          }, \"Review this players games stats\")), React.createElement(TouchableOpacity, {\n            style: stylesViewGame.button,\n            onPress: this.GetSpecificOpponentsPlayerEventLocations,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1499,\n              columnNumber: 37\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.buttonTitle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1500,\n              columnNumber: 41\n            }\n          }, \"Review this players event locations\")), React.createElement(TouchableOpacity, {\n            style: stylesViewGame.button,\n            onPress: this.GoToMainMenu,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1503,\n              columnNumber: 37\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.buttonTitle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1504,\n              columnNumber: 45\n            }\n          }, \"Back to Main Menu\")));\n        }\n\n        if (SportType == 'Soccer') {\n          ReviewPlayerStats = React.createElement(ScrollView, {\n            style: {\n              backgroundColor: '#ffffff'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1525,\n              columnNumber: 25\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.buttonTitle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1527,\n              columnNumber: 33\n            }\n          }, \"Select a player\"), React.createElement(Picker, {\n            selectedValue: this.state.selectedOpponentsPlayer,\n            onValueChange: function onValueChange(text) {\n              return _this3.setState({\n                selectedOpponentsPlayer: text\n              });\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1529,\n              columnNumber: 33\n            }\n          }, React.createElement(Picker.Item, {\n            label: \"Select a Player\",\n            value: \"\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1535,\n              columnNumber: 33\n            }\n          }), this.state.OpponentsPlayerData.map(function (item, index) {\n            return React.createElement(Picker.Item, {\n              label: item.PlayerName,\n              value: item.PlayerID,\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1539,\n                columnNumber: 49\n              }\n            });\n          })), React.createElement(Text, {\n            style: stylesViewGame.buttonTitle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1547,\n              columnNumber: 33\n            }\n          }, \"Select a stat (*Optional*)\"), React.createElement(Picker, {\n            selectedValue: this.state.OpponentsEventSelection,\n            onValueChange: function onValueChange(text) {\n              return _this3.setState({\n                OpponentsEventSelection: text\n              });\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1549,\n              columnNumber: 33\n            }\n          }, React.createElement(Picker.Item, {\n            label: \"Select a event\",\n            value: \"\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1555,\n              columnNumber: 41\n            }\n          }), React.createElement(Picker.Item, {\n            label: \"Goal\",\n            value: \"Goal\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1556,\n              columnNumber: 41\n            }\n          }), React.createElement(Picker.Item, {\n            label: \"Pass\",\n            value: \"Pass\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1557,\n              columnNumber: 41\n            }\n          })), React.createElement(TouchableOpacity, {\n            style: stylesViewGame.button,\n            onPress: this.ReviewOpponentsPlayerStats,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1562,\n              columnNumber: 33\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.buttonTitle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1563,\n              columnNumber: 37\n            }\n          }, \"Review this players games stats\")), React.createElement(TouchableOpacity, {\n            style: stylesViewGame.button,\n            onPress: this.GetSpecificOpponentsPlayerEventLocations,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1567,\n              columnNumber: 33\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.buttonTitle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1568,\n              columnNumber: 37\n            }\n          }, \"Review this players event locations\")), React.createElement(TouchableOpacity, {\n            style: stylesViewGame.button,\n            onPress: this.GoToMainMenu,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1571,\n              columnNumber: 33\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.Text,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1572,\n              columnNumber: 41\n            }\n          }, \"Back to Main Menu\")));\n        }\n      }\n\n      if (displaySelectedPlayerStats == true) {\n        if (SportType == 'GAA') {\n          ReviewGameStats = React.createElement(ScrollView, {\n            style: {\n              backgroundColor: '#ffffff'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1597,\n              columnNumber: 25\n            }\n          }, React.createElement(View, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1599,\n              columnNumber: 33\n            }\n          }, React.createElement(View, {\n            style: stylesViewGame.headerContainer,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1600,\n              columnNumber: 37\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.StatTextWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1601,\n              columnNumber: 41\n            }\n          }, PlayerName)), React.createElement(View, {\n            style: stylesViewGame.StatRow,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1604,\n              columnNumber: 37\n            }\n          }, React.createElement(View, {\n            style: stylesViewGame.StatColumn,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1605,\n              columnNumber: 41\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.StatTextWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1606,\n              columnNumber: 45\n            }\n          }, \" Goals: \", Goals), React.createElement(Text, {\n            style: stylesViewGame.StatTextWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1607,\n              columnNumber: 45\n            }\n          }, \" Points: \", Points), React.createElement(Text, {\n            style: stylesViewGame.StatTextWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1608,\n              columnNumber: 45\n            }\n          }, \" Shots: \", Shots), React.createElement(Text, {\n            style: stylesViewGame.StatTextWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1609,\n              columnNumber: 45\n            }\n          }, \" Shots on target: \", ShotsOnTarget), React.createElement(Text, {\n            style: stylesViewGame.StatTextWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1610,\n              columnNumber: 45\n            }\n          }, \" Passes: \", Passes)), React.createElement(View, {\n            style: stylesViewGame.StatColumn,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1613,\n              columnNumber: 41\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.StatTextWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1614,\n              columnNumber: 45\n            }\n          }, \" EventType: \", Goals), React.createElement(Text, {\n            style: stylesViewGame.StatTextWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1615,\n              columnNumber: 45\n            }\n          }, \" EventType: \", Goals), React.createElement(Text, {\n            style: stylesViewGame.StatTextWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1616,\n              columnNumber: 45\n            }\n          }, \" EventType: \", Goals), React.createElement(Text, {\n            style: stylesViewGame.StatTextWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1617,\n              columnNumber: 45\n            }\n          }, \" EventType: \", Goals), React.createElement(Text, {\n            style: stylesViewGame.StatTextWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1618,\n              columnNumber: 45\n            }\n          }, \" EventType: \", Goals)), React.createElement(View, {\n            style: stylesViewGame.StatColumn,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1621,\n              columnNumber: 41\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.StatTextWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1622,\n              columnNumber: 45\n            }\n          }, \" EventType: \", Goals), React.createElement(Text, {\n            style: stylesViewGame.StatTextWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1623,\n              columnNumber: 45\n            }\n          }, \" EventType: \", Goals), React.createElement(Text, {\n            style: stylesViewGame.StatTextWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1624,\n              columnNumber: 45\n            }\n          }, \" EventType: \", Goals), React.createElement(Text, {\n            style: stylesViewGame.StatTextWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1625,\n              columnNumber: 45\n            }\n          }, \" EventType: \", Goals), React.createElement(Text, {\n            style: stylesViewGame.StatTextWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1626,\n              columnNumber: 45\n            }\n          }, \" EventType: \", Goals))), React.createElement(TouchableOpacity, {\n            style: stylesViewGame.button,\n            onPress: this.GoToMainMenu,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1630,\n              columnNumber: 37\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.StatTextWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1631,\n              columnNumber: 41\n            }\n          }, \" Back to Main Menu\")), React.createElement(TouchableOpacity, {\n            style: stylesViewGame.button,\n            onPress: this.GoToViewGameMenu,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1635,\n              columnNumber: 37\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.StatTextWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1636,\n              columnNumber: 41\n            }\n          }, \"Back to View Game Menu\"))));\n        }\n\n        if (SportType == 'Soccer') {\n          ReviewGameStats = React.createElement(ScrollView, {\n            style: {\n              backgroundColor: '#ffffff'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1649,\n              columnNumber: 25\n            }\n          }, React.createElement(View, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1651,\n              columnNumber: 41\n            }\n          }, React.createElement(View, {\n            style: stylesViewGame.headerContainer,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1652,\n              columnNumber: 45\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.StatTextWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1653,\n              columnNumber: 49\n            }\n          }, PlayerName)), React.createElement(View, {\n            style: stylesViewGame.StatRow,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1656,\n              columnNumber: 45\n            }\n          }, React.createElement(View, {\n            style: stylesViewGame.StatColumn,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1657,\n              columnNumber: 49\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.StatTextWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1658,\n              columnNumber: 53\n            }\n          }, \" Goals: \", Goals), React.createElement(Text, {\n            style: stylesViewGame.StatTextWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1659,\n              columnNumber: 53\n            }\n          }, \" Shots: \", Shots), React.createElement(Text, {\n            style: stylesViewGame.StatTextWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1660,\n              columnNumber: 53\n            }\n          }, \" Shots on target: \", ShotsOnTarget), React.createElement(Text, {\n            style: stylesViewGame.StatTextWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1661,\n              columnNumber: 53\n            }\n          }, \" Passes: \", Passes)), React.createElement(View, {\n            style: stylesViewGame.StatColumn,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1664,\n              columnNumber: 49\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.StatTextWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1665,\n              columnNumber: 53\n            }\n          }, \" EventType: \", Goals), React.createElement(Text, {\n            style: stylesViewGame.StatTextWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1666,\n              columnNumber: 53\n            }\n          }, \" EventType: \", Goals), React.createElement(Text, {\n            style: stylesViewGame.StatTextWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1667,\n              columnNumber: 53\n            }\n          }, \" EventType: \", Goals), React.createElement(Text, {\n            style: stylesViewGame.StatTextWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1668,\n              columnNumber: 53\n            }\n          }, \" EventType: \", Goals), React.createElement(Text, {\n            style: stylesViewGame.StatTextWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1669,\n              columnNumber: 53\n            }\n          }, \" EventType: \", Goals))), React.createElement(TouchableOpacity, {\n            style: stylesViewGame.button,\n            onPress: this.GoToMainMenu,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1673,\n              columnNumber: 45\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.StatTextWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1674,\n              columnNumber: 49\n            }\n          }, \"Back to Main Menu\")), React.createElement(TouchableOpacity, {\n            style: stylesViewGame.button,\n            onPress: this.GoToViewGameMenu,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1677,\n              columnNumber: 45\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.StatTextWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1678,\n              columnNumber: 49\n            }\n          }, \"Back to View Game Menu\"))));\n        }\n      }\n\n      if (displayOpponentsSelectedPlayerStats == true) {\n        if (SportType == 'GAA') {\n          ReviewGameStats = React.createElement(ScrollView, {\n            style: {\n              backgroundColor: '#ffffff'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1696,\n              columnNumber: 25\n            }\n          }, React.createElement(View, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1698,\n              columnNumber: 33\n            }\n          }, React.createElement(View, {\n            style: stylesViewGame.headerContainer,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1699,\n              columnNumber: 37\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.StatTextWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1700,\n              columnNumber: 41\n            }\n          }, PlayerName)), React.createElement(View, {\n            style: stylesViewGame.StatRow,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1703,\n              columnNumber: 37\n            }\n          }, React.createElement(View, {\n            style: stylesViewGame.StatColumn,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1704,\n              columnNumber: 41\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.StatTextWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1705,\n              columnNumber: 45\n            }\n          }, \" Goals: \", Goals), React.createElement(Text, {\n            style: stylesViewGame.StatTextWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1706,\n              columnNumber: 45\n            }\n          }, \" Points: \", Points), React.createElement(Text, {\n            style: stylesViewGame.StatTextWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1707,\n              columnNumber: 45\n            }\n          }, \" Shots: \", Shots), React.createElement(Text, {\n            style: stylesViewGame.StatTextWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1708,\n              columnNumber: 45\n            }\n          }, \" Shots on target: \", ShotsOnTarget), React.createElement(Text, {\n            style: stylesViewGame.StatTextWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1709,\n              columnNumber: 45\n            }\n          }, \" Passes: \", Passes)), React.createElement(View, {\n            style: stylesViewGame.StatColumn,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1712,\n              columnNumber: 41\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.StatTextWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1713,\n              columnNumber: 45\n            }\n          }, \" EventType: \", Goals), React.createElement(Text, {\n            style: stylesViewGame.StatTextWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1714,\n              columnNumber: 45\n            }\n          }, \" EventType: \", Goals), React.createElement(Text, {\n            style: stylesViewGame.StatTextWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1715,\n              columnNumber: 45\n            }\n          }, \" EventType: \", Goals), React.createElement(Text, {\n            style: stylesViewGame.StatTextWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1716,\n              columnNumber: 45\n            }\n          }, \" EventType: \", Goals), React.createElement(Text, {\n            style: stylesViewGame.StatTextWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1717,\n              columnNumber: 45\n            }\n          }, \" EventType: \", Goals))), React.createElement(TouchableOpacity, {\n            style: stylesViewGame.button,\n            onPress: this.GoToMainMenu,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1721,\n              columnNumber: 37\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.StatTextWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1722,\n              columnNumber: 41\n            }\n          }, \"Back to Main Menu\")), React.createElement(TouchableOpacity, {\n            style: stylesViewGame.button,\n            onPress: this.GoToViewGameMenu,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1725,\n              columnNumber: 37\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.StatTextWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1726,\n              columnNumber: 41\n            }\n          }, \"Back to View Game Menu\"))));\n        }\n\n        if (SportType == 'Soccer') {\n          ReviewGameStats = React.createElement(ScrollView, {\n            style: {\n              backgroundColor: '#ffffff'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1740,\n              columnNumber: 25\n            }\n          }, React.createElement(View, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1742,\n              columnNumber: 41\n            }\n          }, React.createElement(View, {\n            style: stylesViewGame.headerContainer,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1743,\n              columnNumber: 45\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.StatTextWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1744,\n              columnNumber: 49\n            }\n          }, PlayerName)), React.createElement(View, {\n            style: stylesViewGame.StatRow,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1747,\n              columnNumber: 45\n            }\n          }, React.createElement(View, {\n            style: stylesViewGame.StatColumn,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1748,\n              columnNumber: 49\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.StatTextWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1749,\n              columnNumber: 53\n            }\n          }, \" Goals: \", Goals), React.createElement(Text, {\n            style: stylesViewGame.StatTextWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1750,\n              columnNumber: 53\n            }\n          }, \" Shots: \", Shots), React.createElement(Text, {\n            style: stylesViewGame.StatTextWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1751,\n              columnNumber: 53\n            }\n          }, \" Shots on target: \", ShotsOnTarget), React.createElement(Text, {\n            style: stylesViewGame.StatTextWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1752,\n              columnNumber: 53\n            }\n          }, \" Passes: \", Passes)), React.createElement(View, {\n            style: stylesViewGame.StatColumn,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1755,\n              columnNumber: 49\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.StatTextWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1756,\n              columnNumber: 53\n            }\n          }, \" EventType: \", Goals), React.createElement(Text, {\n            style: stylesViewGame.StatTextWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1757,\n              columnNumber: 53\n            }\n          }, \" EventType: \", Goals), React.createElement(Text, {\n            style: stylesViewGame.StatTextWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1758,\n              columnNumber: 53\n            }\n          }, \" EventType: \", Goals), React.createElement(Text, {\n            style: stylesViewGame.StatTextWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1759,\n              columnNumber: 53\n            }\n          }, \" EventType: \", Goals), React.createElement(Text, {\n            style: stylesViewGame.StatTextWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1760,\n              columnNumber: 53\n            }\n          }, \" EventType: \", Goals))), React.createElement(TouchableOpacity, {\n            style: stylesViewGame.button,\n            onPress: this.GoToMainMenu,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1765,\n              columnNumber: 45\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.StatTextWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1766,\n              columnNumber: 49\n            }\n          }, \"Back to Main Menu\")), React.createElement(TouchableOpacity, {\n            style: stylesViewGame.button,\n            onPress: this.GoToViewGameMenu,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1769,\n              columnNumber: 45\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.StatTextWhite,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1770,\n              columnNumber: 49\n            }\n          }, \"Back to View Game Menu\"))));\n        }\n      }\n\n      if (YourTeamSpecificStatFieldEvents == true) {\n        if (SportType == 'GAA') {\n          if (screenWidth != this.state.StatsStoredUsingScreenWidth && screenHeight != this.state.StatsStoredUsingScreenHeight) {\n            if (screenWidth < 600 || screenHeight < 376) {\n              alert('Warning - This device is too small to display the full image. Please scroll across the image to navigate or use a larger device screen size.');\n              FieldWithPlots = React.createElement(ScrollView, {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1807,\n                  columnNumber: 53\n                }\n              }, React.createElement(ScrollView, {\n                horizontal: true,\n                style: stylesViewGame.imagePlotContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1809,\n                  columnNumber: 53\n                }\n              }, React.createElement(View, {\n                style: stylesViewGame.EventContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1811,\n                  columnNumber: 57\n                }\n              }, React.createElement(Text, {\n                style: stylesViewGame.buttonTitle,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1812,\n                  columnNumber: 61\n                }\n              }, \" Event Type: \", YourTeamEventSelection)), React.createElement(View, {\n                style: stylesViewGame.ColumnContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1815,\n                  columnNumber: 57\n                }\n              }, React.createElement(TouchableOpacity, {\n                style: stylesViewGame.button,\n                onPress: this.GoToMainMenu,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1816,\n                  columnNumber: 61\n                }\n              }, React.createElement(Text, {\n                style: stylesViewGame.buttonTitle,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1817,\n                  columnNumber: 65\n                }\n              }, \"Back to Main Menu\"))), React.createElement(View, {\n                style: stylesViewGame.ColumnContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1821,\n                  columnNumber: 57\n                }\n              }, React.createElement(TouchableOpacity, {\n                style: stylesViewGame.button,\n                onPress: this.GoToViewGameMenu,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1822,\n                  columnNumber: 61\n                }\n              }, React.createElement(Text, {\n                style: stylesViewGame.buttonTitle,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1823,\n                  columnNumber: 65\n                }\n              }, \"Back to View Game Menu\")))), React.createElement(ScrollView, {\n                horizontal: true,\n                style: stylesViewGame.imagePlotContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1829,\n                  columnNumber: 53\n                }\n              }, React.createElement(ScrollView, {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1831,\n                  columnNumber: 53\n                }\n              }, React.createElement(Image, {\n                style: stylesViewGame.imagePxGAA,\n                source: require(\"./GAApitch1.png\"),\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1833,\n                  columnNumber: 65\n                }\n              }), this.state.EventFieldLocations.map(function (data) {\n                return React.createElement(View, {\n                  style: {\n                    position: 'absolute',\n                    left: data.x,\n                    top: data.y,\n                    backgroundColor: '#242424',\n                    width: 10,\n                    height: 10,\n                    borderWidth: 2,\n                    borderColor: '#C30000',\n                    borderRadius: 50\n                  },\n                  __self: _this3,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1837,\n                    columnNumber: 69\n                  }\n                });\n              }))));\n            } else {\n              FieldWithPlots = React.createElement(ScrollView, {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1871,\n                  columnNumber: 53\n                }\n              }, React.createElement(ScrollView, {\n                horizontal: true,\n                style: stylesViewGame.imagePlotContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1873,\n                  columnNumber: 53\n                }\n              }, React.createElement(View, {\n                style: stylesViewGame.EventContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1875,\n                  columnNumber: 57\n                }\n              }, React.createElement(Text, {\n                style: stylesViewGame.buttonTitle,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1876,\n                  columnNumber: 61\n                }\n              }, \" Event Type: \", YourTeamEventSelection)), React.createElement(View, {\n                style: stylesViewGame.ColumnContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1879,\n                  columnNumber: 57\n                }\n              }, React.createElement(TouchableOpacity, {\n                style: stylesViewGame.button,\n                onPress: this.GoToMainMenu,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1880,\n                  columnNumber: 61\n                }\n              }, React.createElement(Text, {\n                style: stylesViewGame.buttonTitle,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1881,\n                  columnNumber: 65\n                }\n              }, \"Back to Main Menu\"))), React.createElement(View, {\n                style: stylesViewGame.ColumnContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1885,\n                  columnNumber: 57\n                }\n              }, React.createElement(TouchableOpacity, {\n                style: stylesViewGame.button,\n                onPress: this.GoToViewGameMenu,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1886,\n                  columnNumber: 61\n                }\n              }, React.createElement(Text, {\n                style: stylesViewGame.buttonTitle,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1887,\n                  columnNumber: 65\n                }\n              }, \"Back to View Game Menu\")))), React.createElement(ScrollView, {\n                horizontal: true,\n                style: stylesViewGame.imagePlotContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1893,\n                  columnNumber: 53\n                }\n              }, React.createElement(ScrollView, {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1895,\n                  columnNumber: 53\n                }\n              }, React.createElement(Image, {\n                style: stylesViewGame.imagePxGAA,\n                source: require(\"./GAApitch1.png\"),\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1897,\n                  columnNumber: 65\n                }\n              }), this.state.EventFieldLocations.map(function (data) {\n                return React.createElement(View, {\n                  style: {\n                    position: 'absolute',\n                    left: data.x,\n                    top: data.y,\n                    backgroundColor: '#242424',\n                    width: 10,\n                    height: 10,\n                    borderWidth: 2,\n                    borderColor: '#C30000',\n                    borderRadius: 50\n                  },\n                  __self: _this3,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1901,\n                    columnNumber: 69\n                  }\n                });\n              }))));\n            }\n          } else {\n            if (screenWidth < 600 || screenHeight < 376) {\n              alert('Warning - This device is too small to display the full image. Please scroll across the image to navigate or use a larger device screen size.');\n              FieldWithPlots = React.createElement(ScrollView, {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1947,\n                  columnNumber: 49\n                }\n              }, React.createElement(ScrollView, {\n                horizontal: true,\n                style: stylesViewGame.imagePlotContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1949,\n                  columnNumber: 53\n                }\n              }, React.createElement(View, {\n                style: stylesViewGame.EventContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1951,\n                  columnNumber: 57\n                }\n              }, React.createElement(Text, {\n                style: stylesViewGame.buttonTitle,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1952,\n                  columnNumber: 61\n                }\n              }, \" Event Type: \", YourTeamEventSelection)), React.createElement(View, {\n                style: stylesViewGame.ColumnContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1955,\n                  columnNumber: 57\n                }\n              }, React.createElement(TouchableOpacity, {\n                style: stylesViewGame.button,\n                onPress: this.GoToMainMenu,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1956,\n                  columnNumber: 61\n                }\n              }, React.createElement(Text, {\n                style: stylesViewGame.buttonTitle,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1957,\n                  columnNumber: 65\n                }\n              }, \"Back to Main Menu\"))), React.createElement(View, {\n                style: stylesViewGame.ColumnContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1961,\n                  columnNumber: 57\n                }\n              }, React.createElement(TouchableOpacity, {\n                style: stylesViewGame.button,\n                onPress: this.GoToViewGameMenu,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1962,\n                  columnNumber: 61\n                }\n              }, React.createElement(Text, {\n                style: stylesViewGame.buttonTitle,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1963,\n                  columnNumber: 65\n                }\n              }, \"Back to View Game Menu\")))), React.createElement(ScrollView, {\n                horizontal: true,\n                style: stylesViewGame.imagePlotContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1969,\n                  columnNumber: 53\n                }\n              }, React.createElement(ScrollView, {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1971,\n                  columnNumber: 53\n                }\n              }, React.createElement(Image, {\n                style: stylesViewGame.imagePxGAA,\n                source: require(\"./GAApitch1.png\"),\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1973,\n                  columnNumber: 65\n                }\n              }), this.state.EventFieldLocations.map(function (data) {\n                return React.createElement(View, {\n                  style: {\n                    position: 'absolute',\n                    left: data.x,\n                    top: data.y,\n                    backgroundColor: '#242424',\n                    width: 10,\n                    height: 10,\n                    borderWidth: 2,\n                    borderColor: '#C30000',\n                    borderRadius: 50\n                  },\n                  __self: _this3,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1977,\n                    columnNumber: 69\n                  }\n                });\n              }))));\n            }\n\n            FieldWithPlots = React.createElement(ScrollView, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2006,\n                columnNumber: 44\n              }\n            }, React.createElement(ScrollView, {\n              horizontal: true,\n              style: stylesViewGame.imagePlotContainer,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2008,\n                columnNumber: 53\n              }\n            }, React.createElement(View, {\n              style: stylesViewGame.EventContainer,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2010,\n                columnNumber: 57\n              }\n            }, React.createElement(Text, {\n              style: stylesViewGame.buttonTitle,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2011,\n                columnNumber: 61\n              }\n            }, \" Event Type: \", YourTeamEventSelection)), React.createElement(View, {\n              style: stylesViewGame.ColumnContainer,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2014,\n                columnNumber: 57\n              }\n            }, React.createElement(TouchableOpacity, {\n              style: stylesViewGame.button,\n              onPress: this.GoToMainMenu,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2015,\n                columnNumber: 61\n              }\n            }, React.createElement(Text, {\n              style: stylesViewGame.buttonTitle,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2016,\n                columnNumber: 65\n              }\n            }, \"Back to Main Menu\"))), React.createElement(View, {\n              style: stylesViewGame.ColumnContainer,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2020,\n                columnNumber: 57\n              }\n            }, React.createElement(TouchableOpacity, {\n              style: stylesViewGame.button,\n              onPress: this.GoToViewGameMenu,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2021,\n                columnNumber: 61\n              }\n            }, React.createElement(Text, {\n              style: stylesViewGame.buttonTitle,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2022,\n                columnNumber: 65\n              }\n            }, \"Back to View Game Menu\")))), React.createElement(ScrollView, {\n              horizontal: true,\n              style: stylesViewGame.imagePlotContainer,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2028,\n                columnNumber: 53\n              }\n            }, React.createElement(ScrollView, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2030,\n                columnNumber: 53\n              }\n            }, React.createElement(Image, {\n              style: stylesViewGame.imagePxGAA,\n              source: require(\"./GAApitch1.png\"),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2032,\n                columnNumber: 65\n              }\n            }), this.state.EventFieldLocations.map(function (data) {\n              return React.createElement(View, {\n                style: {\n                  position: 'absolute',\n                  left: data.x,\n                  top: data.y,\n                  backgroundColor: '#242424',\n                  width: 10,\n                  height: 10,\n                  borderWidth: 2,\n                  borderColor: '#C30000',\n                  borderRadius: 50\n                },\n                __self: _this3,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2036,\n                  columnNumber: 69\n                }\n              });\n            }))));\n          }\n        } else if (SportType == 'Soccer') {\n          if (screenWidth != this.state.StatsStoredUsingScreenWidth && screenHeight != this.state.StatsStoredUsingScreenHeight) {\n            if (screenWidth < 600 || screenHeight < 376) {\n              alert('Warning - This device is too small to display the full image. Please scroll across the image to navigate or use a larger device screen size.');\n              FieldWithPlots = React.createElement(ScrollView, {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2076,\n                  columnNumber: 53\n                }\n              }, React.createElement(ScrollView, {\n                horizontal: true,\n                style: stylesViewGame.imagePlotContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2078,\n                  columnNumber: 53\n                }\n              }, React.createElement(View, {\n                style: stylesViewGame.EventContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2080,\n                  columnNumber: 57\n                }\n              }, React.createElement(Text, {\n                style: stylesViewGame.buttonTitle,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2081,\n                  columnNumber: 61\n                }\n              }, \" Event Type: \", YourTeamEventSelection)), React.createElement(View, {\n                style: stylesViewGame.ColumnContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2084,\n                  columnNumber: 57\n                }\n              }, React.createElement(TouchableOpacity, {\n                style: stylesViewGame.button,\n                onPress: this.GoToMainMenu,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2085,\n                  columnNumber: 61\n                }\n              }, React.createElement(Text, {\n                style: stylesViewGame.buttonTitle,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2086,\n                  columnNumber: 65\n                }\n              }, \"Back to Main Menu\"))), React.createElement(View, {\n                style: stylesViewGame.ColumnContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2090,\n                  columnNumber: 57\n                }\n              }, React.createElement(TouchableOpacity, {\n                style: stylesViewGame.button,\n                onPress: this.GoToViewGameMenu,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2091,\n                  columnNumber: 61\n                }\n              }, React.createElement(Text, {\n                style: stylesViewGame.buttonTitle,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2092,\n                  columnNumber: 65\n                }\n              }, \"Back to View Game Menu\")))), React.createElement(ScrollView, {\n                horizontal: true,\n                style: stylesViewGame.imagePlotContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2098,\n                  columnNumber: 53\n                }\n              }, React.createElement(ScrollView, {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2100,\n                  columnNumber: 53\n                }\n              }, React.createElement(Image, {\n                style: stylesViewGame.imagePxSoccer,\n                source: require(\"./SoccerField.png\"),\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2102,\n                  columnNumber: 53\n                }\n              }), this.state.EventFieldLocations.map(function (data) {\n                return React.createElement(View, {\n                  style: {\n                    position: 'absolute',\n                    left: data.x,\n                    top: data.y,\n                    backgroundColor: '#242424',\n                    width: 10,\n                    height: 10,\n                    borderWidth: 2,\n                    borderColor: '#C30000',\n                    borderRadius: 50\n                  },\n                  __self: _this3,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 2106,\n                    columnNumber: 69\n                  }\n                });\n              }))));\n            } else {\n              FieldWithPlots = React.createElement(ScrollView, {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2143,\n                  columnNumber: 53\n                }\n              }, React.createElement(ScrollView, {\n                horizontal: true,\n                style: stylesViewGame.imagePlotContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2145,\n                  columnNumber: 53\n                }\n              }, React.createElement(View, {\n                style: stylesViewGame.EventContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2147,\n                  columnNumber: 57\n                }\n              }, React.createElement(Text, {\n                style: stylesViewGame.buttonTitle,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2148,\n                  columnNumber: 61\n                }\n              }, \" Event Type: \", YourTeamEventSelection)), React.createElement(View, {\n                style: stylesViewGame.ColumnContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2151,\n                  columnNumber: 57\n                }\n              }, React.createElement(TouchableOpacity, {\n                style: stylesViewGame.button,\n                onPress: this.GoToMainMenu,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2152,\n                  columnNumber: 61\n                }\n              }, React.createElement(Text, {\n                style: stylesViewGame.buttonTitle,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2153,\n                  columnNumber: 65\n                }\n              }, \"Back to Main Menu\"))), React.createElement(View, {\n                style: stylesViewGame.ColumnContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2157,\n                  columnNumber: 57\n                }\n              }, React.createElement(TouchableOpacity, {\n                style: stylesViewGame.button,\n                onPress: this.GoToViewGameMenu,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2158,\n                  columnNumber: 61\n                }\n              }, React.createElement(Text, {\n                style: stylesViewGame.buttonTitle,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2159,\n                  columnNumber: 65\n                }\n              }, \"Back to View Game Menu\")))), React.createElement(ScrollView, {\n                horizontal: true,\n                style: stylesViewGame.imagePlotContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2165,\n                  columnNumber: 53\n                }\n              }, React.createElement(ScrollView, {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2167,\n                  columnNumber: 53\n                }\n              }, React.createElement(Image, {\n                style: stylesViewGame.imagePxSoccer,\n                source: require(\"./SoccerField.png\"),\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2169,\n                  columnNumber: 53\n                }\n              }), this.state.EventFieldLocations.map(function (data) {\n                return React.createElement(View, {\n                  style: {\n                    position: 'absolute',\n                    left: data.x,\n                    top: data.y,\n                    backgroundColor: '#242424',\n                    width: 10,\n                    height: 10,\n                    borderWidth: 2,\n                    borderColor: '#C30000',\n                    borderRadius: 50\n                  },\n                  __self: _this3,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 2173,\n                    columnNumber: 69\n                  }\n                });\n              }))));\n            }\n          } else {\n            if (screenWidth < 600 || screenHeight < 376) {\n              alert('Warning - This device is too small to display the full image. Please scroll across the image to navigate or use a larger device screen size.');\n              FieldWithPlots = React.createElement(ScrollView, {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2210,\n                  columnNumber: 53\n                }\n              }, React.createElement(ScrollView, {\n                horizontal: true,\n                style: stylesViewGame.imagePlotContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2212,\n                  columnNumber: 53\n                }\n              }, React.createElement(View, {\n                style: stylesViewGame.EventContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2214,\n                  columnNumber: 57\n                }\n              }, React.createElement(Text, {\n                style: stylesViewGame.buttonTitle,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2215,\n                  columnNumber: 61\n                }\n              }, \" Event Type: \", YourTeamEventSelection)), React.createElement(View, {\n                style: stylesViewGame.ColumnContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2218,\n                  columnNumber: 57\n                }\n              }, React.createElement(TouchableOpacity, {\n                style: stylesViewGame.button,\n                onPress: this.GoToMainMenu,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2219,\n                  columnNumber: 61\n                }\n              }, React.createElement(Text, {\n                style: stylesViewGame.buttonTitle,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2220,\n                  columnNumber: 65\n                }\n              }, \"Back to Main Menu\"))), React.createElement(View, {\n                style: stylesViewGame.ColumnContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2224,\n                  columnNumber: 57\n                }\n              }, React.createElement(TouchableOpacity, {\n                style: stylesViewGame.button,\n                onPress: this.GoToViewGameMenu,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2225,\n                  columnNumber: 61\n                }\n              }, React.createElement(Text, {\n                style: stylesViewGame.buttonTitle,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2226,\n                  columnNumber: 65\n                }\n              }, \"Back to View Game Menu\")))), React.createElement(ScrollView, {\n                horizontal: true,\n                style: stylesViewGame.imagePlotContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2232,\n                  columnNumber: 53\n                }\n              }, React.createElement(ScrollView, {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2234,\n                  columnNumber: 53\n                }\n              }, React.createElement(Image, {\n                style: stylesViewGame.imageSoccerMobile,\n                source: require(\"./SoccerField.png\"),\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2236,\n                  columnNumber: 53\n                }\n              }), this.state.EventFieldLocations.map(function (data) {\n                return React.createElement(View, {\n                  style: {\n                    position: 'absolute',\n                    left: data.x,\n                    top: data.y,\n                    backgroundColor: '#242424',\n                    width: 10,\n                    height: 10,\n                    borderWidth: 2,\n                    borderColor: '#C30000',\n                    borderRadius: 50\n                  },\n                  __self: _this3,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 2240,\n                    columnNumber: 69\n                  }\n                });\n              }))));\n            }\n\n            FieldWithPlots = React.createElement(ScrollView, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2269,\n                columnNumber: 49\n              }\n            }, React.createElement(ScrollView, {\n              horizontal: true,\n              style: stylesViewGame.imagePlotContainer,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2271,\n                columnNumber: 49\n              }\n            }, React.createElement(View, {\n              style: stylesViewGame.EventContainer,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2273,\n                columnNumber: 53\n              }\n            }, React.createElement(Text, {\n              style: stylesViewGame.buttonTitle,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2274,\n                columnNumber: 57\n              }\n            }, \" Event Type: \", YourTeamEventSelection)), React.createElement(View, {\n              style: stylesViewGame.ColumnContainer,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2277,\n                columnNumber: 53\n              }\n            }, React.createElement(TouchableOpacity, {\n              style: stylesViewGame.button,\n              onPress: this.GoToMainMenu,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2278,\n                columnNumber: 57\n              }\n            }, React.createElement(Text, {\n              style: stylesViewGame.buttonTitle,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2279,\n                columnNumber: 61\n              }\n            }, \"Back to Main Menu\"))), React.createElement(View, {\n              style: stylesViewGame.ColumnContainer,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2283,\n                columnNumber: 53\n              }\n            }, React.createElement(TouchableOpacity, {\n              style: stylesViewGame.button,\n              onPress: this.GoToViewGameMenu,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2284,\n                columnNumber: 57\n              }\n            }, React.createElement(Text, {\n              style: stylesViewGame.buttonTitle,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2285,\n                columnNumber: 61\n              }\n            }, \"Back to View Game Menu\")))), React.createElement(ScrollView, {\n              horizontal: true,\n              style: stylesViewGame.imagePlotContainer,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2291,\n                columnNumber: 49\n              }\n            }, React.createElement(ScrollView, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2293,\n                columnNumber: 49\n              }\n            }, React.createElement(Image, {\n              style: stylesViewGame.imagePxSoccer,\n              source: require(\"./SoccerField.png\"),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2295,\n                columnNumber: 49\n              }\n            }), this.state.EventFieldLocations.map(function (data) {\n              return React.createElement(View, {\n                style: {\n                  position: 'absolute',\n                  left: data.x,\n                  top: data.y,\n                  backgroundColor: '#242424',\n                  width: 10,\n                  height: 10,\n                  borderWidth: 2,\n                  borderColor: '#C30000',\n                  borderRadius: 50\n                },\n                __self: _this3,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2299,\n                  columnNumber: 65\n                }\n              });\n            }))));\n          }\n        }\n      }\n\n      if (OpponentsSpecificStatFieldEvents == true) {\n        if (SportType == 'GAA') {\n          if (screenWidth != this.state.StatsStoredUsingScreenWidth && screenHeight != this.state.StatsStoredUsingScreenHeight) {\n            if (screenWidth < 600 || screenHeight < 376) {\n              alert('Warning - This device is too small to display the full image. Please scroll across the image to navigate or use a larger device screen size.');\n              FieldWithPlots = React.createElement(ScrollView, {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2352,\n                  columnNumber: 53\n                }\n              }, React.createElement(ScrollView, {\n                horizontal: true,\n                style: stylesViewGame.imagePlotContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2354,\n                  columnNumber: 53\n                }\n              }, React.createElement(View, {\n                style: stylesViewGame.EventContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2356,\n                  columnNumber: 57\n                }\n              }, React.createElement(Text, {\n                style: stylesViewGame.buttonTitle,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2357,\n                  columnNumber: 61\n                }\n              }, \" Event Type: \", YourTeamEventSelection)), React.createElement(View, {\n                style: stylesViewGame.ColumnContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2360,\n                  columnNumber: 57\n                }\n              }, React.createElement(TouchableOpacity, {\n                style: stylesViewGame.button,\n                onPress: this.GoToMainMenu,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2361,\n                  columnNumber: 61\n                }\n              }, React.createElement(Text, {\n                style: stylesViewGame.buttonTitle,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2362,\n                  columnNumber: 65\n                }\n              }, \"Back to Main Menu\"))), React.createElement(View, {\n                style: stylesViewGame.ColumnContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2366,\n                  columnNumber: 57\n                }\n              }, React.createElement(TouchableOpacity, {\n                style: stylesViewGame.button,\n                onPress: this.GoToViewGameMenu,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2367,\n                  columnNumber: 61\n                }\n              }, React.createElement(Text, {\n                style: stylesViewGame.buttonTitle,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2368,\n                  columnNumber: 65\n                }\n              }, \"Back to View Game Menu\")))), React.createElement(ScrollView, {\n                horizontal: true,\n                style: stylesViewGame.imagePlotContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2374,\n                  columnNumber: 53\n                }\n              }, React.createElement(ScrollView, {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2376,\n                  columnNumber: 53\n                }\n              }, React.createElement(Image, {\n                style: stylesViewGame.imagePxGAA,\n                source: require(\"./GAApitch1.png\"),\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2378,\n                  columnNumber: 65\n                }\n              }), this.state.OpponentsEventFieldLocations.map(function (data) {\n                return React.createElement(View, {\n                  style: {\n                    position: 'absolute',\n                    left: data.x,\n                    top: data.y,\n                    backgroundColor: '#242424',\n                    width: 10,\n                    height: 10,\n                    borderWidth: 2,\n                    borderColor: '#C30000',\n                    borderRadius: 50\n                  },\n                  __self: _this3,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 2382,\n                    columnNumber: 69\n                  }\n                });\n              }))));\n            } else {\n              FieldWithPlots = React.createElement(ScrollView, {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2416,\n                  columnNumber: 53\n                }\n              }, React.createElement(ScrollView, {\n                horizontal: true,\n                style: stylesViewGame.imagePlotContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2418,\n                  columnNumber: 53\n                }\n              }, React.createElement(View, {\n                style: stylesViewGame.EventContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2420,\n                  columnNumber: 57\n                }\n              }, React.createElement(Text, {\n                style: stylesViewGame.buttonTitle,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2421,\n                  columnNumber: 61\n                }\n              }, \" Event Type: \", YourTeamEventSelection)), React.createElement(View, {\n                style: stylesViewGame.ColumnContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2424,\n                  columnNumber: 57\n                }\n              }, React.createElement(TouchableOpacity, {\n                style: stylesViewGame.button,\n                onPress: this.GoToMainMenu,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2425,\n                  columnNumber: 61\n                }\n              }, React.createElement(Text, {\n                style: stylesViewGame.buttonTitle,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2426,\n                  columnNumber: 65\n                }\n              }, \"Back to Main Menu\"))), React.createElement(View, {\n                style: stylesViewGame.ColumnContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2430,\n                  columnNumber: 57\n                }\n              }, React.createElement(TouchableOpacity, {\n                style: stylesViewGame.button,\n                onPress: this.GoToViewGameMenu,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2431,\n                  columnNumber: 61\n                }\n              }, React.createElement(Text, {\n                style: stylesViewGame.buttonTitle,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2432,\n                  columnNumber: 65\n                }\n              }, \"Back to View Game Menu\")))), React.createElement(ScrollView, {\n                horizontal: true,\n                style: stylesViewGame.imagePlotContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2438,\n                  columnNumber: 53\n                }\n              }, React.createElement(ScrollView, {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2440,\n                  columnNumber: 53\n                }\n              }, React.createElement(Image, {\n                style: stylesViewGame.imagePxGAA,\n                source: require(\"./GAApitch1.png\"),\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2442,\n                  columnNumber: 65\n                }\n              }), this.state.OpponentsEventFieldLocations.map(function (data) {\n                return React.createElement(View, {\n                  style: {\n                    position: 'absolute',\n                    left: data.x,\n                    top: data.y,\n                    backgroundColor: '#242424',\n                    width: 10,\n                    height: 10,\n                    borderWidth: 2,\n                    borderColor: '#C30000',\n                    borderRadius: 50\n                  },\n                  __self: _this3,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 2446,\n                    columnNumber: 69\n                  }\n                });\n              }))));\n            }\n          } else {\n            if (screenWidth < 600 || screenHeight < 376) {\n              alert('Warning - This device is too small to display the full image. Please scroll across the image to navigate or use a larger device screen size.');\n              FieldWithPlots = React.createElement(ScrollView, {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2492,\n                  columnNumber: 49\n                }\n              }, React.createElement(ScrollView, {\n                horizontal: true,\n                style: stylesViewGame.imagePlotContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2494,\n                  columnNumber: 53\n                }\n              }, React.createElement(View, {\n                style: stylesViewGame.EventContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2496,\n                  columnNumber: 57\n                }\n              }, React.createElement(Text, {\n                style: stylesViewGame.buttonTitle,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2497,\n                  columnNumber: 61\n                }\n              }, \" Event Type: \", YourTeamEventSelection)), React.createElement(View, {\n                style: stylesViewGame.ColumnContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2500,\n                  columnNumber: 57\n                }\n              }, React.createElement(TouchableOpacity, {\n                style: stylesViewGame.button,\n                onPress: this.GoToMainMenu,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2501,\n                  columnNumber: 61\n                }\n              }, React.createElement(Text, {\n                style: stylesViewGame.buttonTitle,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2502,\n                  columnNumber: 65\n                }\n              }, \"Back to Main Menu\"))), React.createElement(View, {\n                style: stylesViewGame.ColumnContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2506,\n                  columnNumber: 57\n                }\n              }, React.createElement(TouchableOpacity, {\n                style: stylesViewGame.button,\n                onPress: this.GoToViewGameMenu,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2507,\n                  columnNumber: 61\n                }\n              }, React.createElement(Text, {\n                style: stylesViewGame.buttonTitle,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2508,\n                  columnNumber: 65\n                }\n              }, \"Back to View Game Menu\")))), React.createElement(ScrollView, {\n                horizontal: true,\n                style: stylesViewGame.imagePlotContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2514,\n                  columnNumber: 53\n                }\n              }, React.createElement(ScrollView, {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2516,\n                  columnNumber: 53\n                }\n              }, React.createElement(Image, {\n                style: stylesViewGame.imagePxGAA,\n                source: require(\"./GAApitch1.png\"),\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2518,\n                  columnNumber: 65\n                }\n              }), this.state.OpponentsEventFieldLocations.map(function (data) {\n                return React.createElement(View, {\n                  style: {\n                    position: 'absolute',\n                    left: data.x,\n                    top: data.y,\n                    backgroundColor: '#242424',\n                    width: 10,\n                    height: 10,\n                    borderWidth: 2,\n                    borderColor: '#C30000',\n                    borderRadius: 50\n                  },\n                  __self: _this3,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 2522,\n                    columnNumber: 69\n                  }\n                });\n              }))));\n            }\n\n            FieldWithPlots = React.createElement(ScrollView, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2551,\n                columnNumber: 44\n              }\n            }, React.createElement(ScrollView, {\n              horizontal: true,\n              style: stylesViewGame.imagePlotContainer,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2553,\n                columnNumber: 53\n              }\n            }, React.createElement(View, {\n              style: stylesViewGame.EventContainer,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2555,\n                columnNumber: 57\n              }\n            }, React.createElement(Text, {\n              style: stylesViewGame.buttonTitle,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2556,\n                columnNumber: 61\n              }\n            }, \" Event Type: \", YourTeamEventSelection)), React.createElement(View, {\n              style: stylesViewGame.ColumnContainer,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2559,\n                columnNumber: 57\n              }\n            }, React.createElement(TouchableOpacity, {\n              style: stylesViewGame.button,\n              onPress: this.GoToMainMenu,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2560,\n                columnNumber: 61\n              }\n            }, React.createElement(Text, {\n              style: stylesViewGame.buttonTitle,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2561,\n                columnNumber: 65\n              }\n            }, \" Back to Main Menu\"))), React.createElement(View, {\n              style: stylesViewGame.ColumnContainer,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2565,\n                columnNumber: 57\n              }\n            }, React.createElement(TouchableOpacity, {\n              style: stylesViewGame.button,\n              onPress: this.GoToViewGameMenu,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2566,\n                columnNumber: 61\n              }\n            }, React.createElement(Text, {\n              style: stylesViewGame.buttonTitle,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2567,\n                columnNumber: 65\n              }\n            }, \"Back to View Game Menu\")))), React.createElement(ScrollView, {\n              horizontal: true,\n              style: stylesViewGame.imagePlotContainer,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2573,\n                columnNumber: 53\n              }\n            }, React.createElement(Image, {\n              style: stylesViewGame.imagePxGAA,\n              source: require(\"./GAApitch1.png\"),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2576,\n                columnNumber: 65\n              }\n            }), this.state.OpponentsEventFieldLocations.map(function (data) {\n              return React.createElement(View, {\n                style: {\n                  position: 'absolute',\n                  left: data.x,\n                  top: data.y,\n                  backgroundColor: '#242424',\n                  width: 10,\n                  height: 10,\n                  borderWidth: 2,\n                  borderColor: '#C30000',\n                  borderRadius: 50\n                },\n                __self: _this3,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2580,\n                  columnNumber: 69\n                }\n              });\n            })));\n          }\n        } else if (SportType == 'Soccer') {\n          if (screenWidth != this.state.StatsStoredUsingScreenWidth && screenHeight != this.state.StatsStoredUsingScreenHeight) {\n            if (screenWidth < 600 || screenHeight < 376) {\n              alert('Warning - This device is too small to display the full image. Please scroll across the image to navigate or use a larger device screen size.');\n              FieldWithPlots = React.createElement(ScrollView, {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2620,\n                  columnNumber: 53\n                }\n              }, React.createElement(ScrollView, {\n                horizontal: true,\n                style: stylesViewGame.imagePlotContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2622,\n                  columnNumber: 53\n                }\n              }, React.createElement(View, {\n                style: stylesViewGame.EventContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2624,\n                  columnNumber: 57\n                }\n              }, React.createElement(Text, {\n                style: stylesViewGame.buttonTitle,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2625,\n                  columnNumber: 61\n                }\n              }, \" Event Type: \", YourTeamEventSelection)), React.createElement(View, {\n                style: stylesViewGame.ColumnContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2628,\n                  columnNumber: 57\n                }\n              }, React.createElement(TouchableOpacity, {\n                style: stylesViewGame.button,\n                onPress: this.GoToMainMenu,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2629,\n                  columnNumber: 61\n                }\n              }, React.createElement(Text, {\n                style: stylesViewGame.buttonTitle,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2630,\n                  columnNumber: 65\n                }\n              }, \"Back to Main Menu\"))), React.createElement(View, {\n                style: stylesViewGame.ColumnContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2634,\n                  columnNumber: 57\n                }\n              }, React.createElement(TouchableOpacity, {\n                style: stylesViewGame.button,\n                onPress: this.GoToViewGameMenu,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2635,\n                  columnNumber: 61\n                }\n              }, React.createElement(Text, {\n                style: stylesViewGame.buttonTitle,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2636,\n                  columnNumber: 65\n                }\n              }, \"Back to View Game Menu\")))), React.createElement(ScrollView, {\n                horizontal: true,\n                style: stylesViewGame.imagePlotContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2642,\n                  columnNumber: 53\n                }\n              }, React.createElement(ScrollView, {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2644,\n                  columnNumber: 53\n                }\n              }, React.createElement(Image, {\n                style: stylesViewGame.imagePxSoccer,\n                source: require(\"./SoccerField.png\"),\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2646,\n                  columnNumber: 53\n                }\n              }), this.state.OpponentsEventFieldLocations.map(function (data) {\n                return React.createElement(View, {\n                  style: {\n                    position: 'absolute',\n                    left: data.x,\n                    top: data.y,\n                    backgroundColor: '#242424',\n                    width: 10,\n                    height: 10,\n                    borderWidth: 2,\n                    borderColor: '#C30000',\n                    borderRadius: 50\n                  },\n                  __self: _this3,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 2650,\n                    columnNumber: 69\n                  }\n                });\n              }))));\n            } else {\n              FieldWithPlots = React.createElement(ScrollView, {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2687,\n                  columnNumber: 53\n                }\n              }, React.createElement(ScrollView, {\n                horizontal: true,\n                style: stylesViewGame.imagePlotContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2689,\n                  columnNumber: 53\n                }\n              }, React.createElement(View, {\n                style: stylesViewGame.EventContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2691,\n                  columnNumber: 57\n                }\n              }, React.createElement(Text, {\n                style: stylesViewGame.buttonTitle,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2692,\n                  columnNumber: 61\n                }\n              }, \" Event Type: \", YourTeamEventSelection)), React.createElement(View, {\n                style: stylesViewGame.ColumnContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2695,\n                  columnNumber: 57\n                }\n              }, React.createElement(TouchableOpacity, {\n                style: stylesViewGame.button,\n                onPress: this.GoToMainMenu,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2696,\n                  columnNumber: 61\n                }\n              }, React.createElement(Text, {\n                style: stylesViewGame.buttonTitle,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2697,\n                  columnNumber: 65\n                }\n              }, \"Back to Main Menu\"))), React.createElement(View, {\n                style: stylesViewGame.ColumnContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2701,\n                  columnNumber: 57\n                }\n              }, React.createElement(TouchableOpacity, {\n                style: stylesViewGame.button,\n                onPress: this.GoToViewGameMenu,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2702,\n                  columnNumber: 61\n                }\n              }, React.createElement(Text, {\n                style: stylesViewGame.buttonTitle,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2703,\n                  columnNumber: 65\n                }\n              }, \"Back to View Game Menu\")))), React.createElement(ScrollView, {\n                horizontal: true,\n                style: stylesViewGame.imagePlotContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2709,\n                  columnNumber: 53\n                }\n              }, React.createElement(ScrollView, {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2711,\n                  columnNumber: 53\n                }\n              }, React.createElement(Image, {\n                style: stylesViewGame.imagePxSoccer,\n                source: require(\"./SoccerField.png\"),\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2713,\n                  columnNumber: 53\n                }\n              }), this.state.OpponentsEventFieldLocations.map(function (data) {\n                return React.createElement(View, {\n                  style: {\n                    position: 'absolute',\n                    left: data.x,\n                    top: data.y,\n                    backgroundColor: '#242424',\n                    width: 10,\n                    height: 10,\n                    borderWidth: 2,\n                    borderColor: '#C30000',\n                    borderRadius: 50\n                  },\n                  __self: _this3,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 2717,\n                    columnNumber: 69\n                  }\n                });\n              }))));\n            }\n          } else {\n            if (screenWidth < 600 || screenHeight < 376) {\n              alert('Warning - This device is too small to display the full image. Please scroll across the image to navigate or use a larger device screen size.');\n              FieldWithPlots = React.createElement(ScrollView, {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2754,\n                  columnNumber: 53\n                }\n              }, React.createElement(ScrollView, {\n                horizontal: true,\n                style: stylesViewGame.imagePlotContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2756,\n                  columnNumber: 53\n                }\n              }, React.createElement(View, {\n                style: stylesViewGame.EventContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2758,\n                  columnNumber: 57\n                }\n              }, React.createElement(Text, {\n                style: stylesViewGame.buttonTitle,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2759,\n                  columnNumber: 61\n                }\n              }, \" Event Type: \", YourTeamEventSelection)), React.createElement(View, {\n                style: stylesViewGame.ColumnContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2762,\n                  columnNumber: 57\n                }\n              }, React.createElement(TouchableOpacity, {\n                style: stylesViewGame.button,\n                onPress: this.GoToMainMenu,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2763,\n                  columnNumber: 61\n                }\n              }, React.createElement(Text, {\n                style: stylesViewGame.buttonTitle,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2764,\n                  columnNumber: 65\n                }\n              }, \"Back to Main Menu\"))), React.createElement(View, {\n                style: stylesViewGame.ColumnContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2768,\n                  columnNumber: 57\n                }\n              }, React.createElement(TouchableOpacity, {\n                style: stylesViewGame.button,\n                onPress: this.GoToViewGameMenu,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2769,\n                  columnNumber: 61\n                }\n              }, React.createElement(Text, {\n                style: stylesViewGame.buttonTitle,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2770,\n                  columnNumber: 65\n                }\n              }, \"Back to View Game Menu\")))), React.createElement(ScrollView, {\n                horizontal: true,\n                style: stylesViewGame.imagePlotContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2776,\n                  columnNumber: 53\n                }\n              }, React.createElement(ScrollView, {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2778,\n                  columnNumber: 53\n                }\n              }, React.createElement(Image, {\n                style: stylesViewGame.imageSoccerMobile,\n                source: require(\"./SoccerField.png\"),\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2780,\n                  columnNumber: 53\n                }\n              }), this.state.OpponentsEventFieldLocations.map(function (data) {\n                return React.createElement(View, {\n                  style: {\n                    position: 'absolute',\n                    left: data.x,\n                    top: data.y,\n                    backgroundColor: '#242424',\n                    width: 10,\n                    height: 10,\n                    borderWidth: 2,\n                    borderColor: '#C30000',\n                    borderRadius: 50\n                  },\n                  __self: _this3,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 2784,\n                    columnNumber: 69\n                  }\n                });\n              }))));\n            }\n\n            FieldWithPlots = React.createElement(ScrollView, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2813,\n                columnNumber: 49\n              }\n            }, React.createElement(ScrollView, {\n              horizontal: true,\n              style: stylesViewGame.imagePlotContainer,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2815,\n                columnNumber: 49\n              }\n            }, React.createElement(View, {\n              style: stylesViewGame.EventContainer,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2817,\n                columnNumber: 53\n              }\n            }, React.createElement(Text, {\n              style: stylesViewGame.buttonTitle,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2818,\n                columnNumber: 57\n              }\n            }, \" Event Type: \", YourTeamEventSelection)), React.createElement(View, {\n              style: stylesViewGame.ColumnContainer,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2821,\n                columnNumber: 53\n              }\n            }, React.createElement(TouchableOpacity, {\n              style: stylesViewGame.button,\n              onPress: this.GoToMainMenu,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2822,\n                columnNumber: 57\n              }\n            }, React.createElement(Text, {\n              style: stylesViewGame.buttonTitle,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2823,\n                columnNumber: 61\n              }\n            }, \"Back to Main Menu\"))), React.createElement(View, {\n              style: stylesViewGame.ColumnContainer,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2827,\n                columnNumber: 53\n              }\n            }, React.createElement(TouchableOpacity, {\n              style: stylesViewGame.button,\n              onPress: this.GoToViewGameMenu,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2828,\n                columnNumber: 57\n              }\n            }, React.createElement(Text, {\n              style: stylesViewGame.buttonTitle,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2829,\n                columnNumber: 61\n              }\n            }, \"Back to View Game Menu\")))), React.createElement(ScrollView, {\n              horizontal: true,\n              style: stylesViewGame.imagePlotContainer,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2835,\n                columnNumber: 49\n              }\n            }, React.createElement(ScrollView, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2837,\n                columnNumber: 49\n              }\n            }, React.createElement(Image, {\n              style: stylesViewGame.imagePxSoccer,\n              source: require(\"./SoccerField.png\"),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2839,\n                columnNumber: 49\n              }\n            }), this.state.OpponentsEventFieldLocations.map(function (data) {\n              return React.createElement(View, {\n                style: {\n                  position: 'absolute',\n                  left: data.x,\n                  top: data.y,\n                  backgroundColor: '#242424',\n                  width: 10,\n                  height: 10,\n                  borderWidth: 2,\n                  borderColor: '#C30000',\n                  borderRadius: 50\n                },\n                __self: _this3,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2843,\n                  columnNumber: 65\n                }\n              });\n            }))));\n          }\n        }\n      }\n\n      return React.createElement(ScrollView, {\n        contentContainerStyle: {\n          flexGrow: 1,\n          justifyContent: 'center',\n          backgroundColor: '#252626',\n          alignItems: \"center\",\n          fontSize: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2878,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2880,\n          columnNumber: 21\n        }\n      }, ReviewSelection), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2884,\n          columnNumber: 21\n        }\n      }, FieldWithPlots), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2889,\n          columnNumber: 21\n        }\n      }, ReviewGameStats), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2894,\n          columnNumber: 21\n        }\n      }, ReviewPlayerStats), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2899,\n          columnNumber: 21\n        }\n      }, PlayerStats));\n    }\n  }]);\n\n  return ViewGame;\n}(Component);\n\nvar stylesViewGame = StyleSheet.create({\n  container: {\n    fontSize: 20\n  },\n  dataContainer: {\n    width: wp('80%'),\n    alignItems: \"center\",\n    borderWidth: 4,\n    borderColor: '#ffffff',\n    marginBottom: 10\n  },\n  Text: {\n    color: \"black\",\n    fontSize: 18,\n    justifyContent: 'center'\n  },\n  ColumnContainer: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: 'center'\n  },\n  headerContainer: {\n    backgroundColor: '#C30000',\n    alignItems: \"center\",\n    borderWidth: 4,\n    borderRadius: 20,\n    borderColor: '#ffffff',\n    alignItems: 'center',\n    width: wp('80%'),\n    marginTop: 30,\n    padding: 4\n  },\n  StatRow: {\n    flex: 1,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginBottom: 10,\n    borderWidth: 4,\n    borderRadius: 20,\n    backgroundColor: \"#33343F\",\n    borderColor: '#ffffff'\n  },\n  StatColumn: {\n    flex: 1,\n    flexDirection: \"column\",\n    padding: 50,\n    marginBottom: 10\n  },\n  dcontainer: {\n    backgroundColor: '#C30000',\n    height: '100%',\n    alignItems: \"center\",\n    fontSize: 20\n  },\n  StatRow: {\n    flex: 1,\n    flexDirection: \"row\",\n    borderWidth: 4,\n    borderRadius: 20,\n    borderColor: '#ffffff',\n    alignItems: \"center\",\n    marginBottom: 10,\n    backgroundColor: \"#33343F\"\n  },\n  StatText: {\n    color: \"black\",\n    fontSize: 18,\n    justifyContent: 'center',\n    fontWeight: \"bold\"\n  },\n  StatTextWhite: {\n    color: \"white\",\n    fontSize: 18,\n    textAlign: 'center',\n    justifyContent: 'center',\n    fontWeight: \"bold\"\n  },\n  text: {\n    color: \"white\",\n    fontSize: 18,\n    fontWeight: \"bold\"\n  },\n  dataContainer: {\n    backgroundColor: '#ffffff',\n    alignItems: 'center'\n  },\n  container2: {\n    backgroundColor: '#ffffff',\n    alignItems: 'center'\n  },\n  input: {\n    height: 48,\n    borderRadius: 5,\n    overflow: 'hidden',\n    backgroundColor: 'white',\n    marginTop: 10,\n    marginBottom: 10,\n    marginLeft: 30,\n    marginRight: 30,\n    paddingLeft: 16\n  },\n  EventContainer: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: 'center',\n    marginLeft: 30,\n    marginRight: 30,\n    marginTop: 20,\n    height: 48\n  },\n  button: {\n    backgroundColor: '#C30000',\n    marginLeft: 30,\n    marginRight: 30,\n    marginTop: 20,\n    height: 48,\n    borderRadius: 5,\n    alignItems: \"center\",\n    justifyContent: 'center',\n    width: '100%'\n  },\n  buttonTitle: {\n    color: 'white',\n    fontSize: 18,\n    justifyContent: 'center',\n    textAlign: 'center',\n    fontWeight: \"bold\"\n  },\n  imagePxGAA: {\n    height: 376,\n    width: 700\n  },\n  imagePxGAAmobile: {\n    height: 300,\n    width: 590\n  },\n  imagePxSoccer: {\n    height: 400,\n    width: 700\n  },\n  imageSoccerMobile: {\n    height: 280,\n    width: 480\n  },\n  imagePlotContainer: {\n    flexWrap: 'wrap',\n    flexDirection: \"row\",\n    marginTop: 10,\n    paddingTop: 10,\n    paddingBottom: 20,\n    backgroundColor: \"#33343F\",\n    borderRadius: 10,\n    borderWidth: 1,\n    borderColor: '#fff'\n  },\n  imageColumn: {\n    flexWrap: 'wrap',\n    flexDirection: \"column\",\n    marginLeft: 5,\n    marginTop: 10,\n    height: 48,\n    borderRadius: 5\n  },\n  imageheaderContainer: {\n    marginRight: 40,\n    marginLeft: 40,\n    marginTop: 10,\n    paddingTop: 20,\n    paddingBottom: 20,\n    backgroundColor: '#68a0cf',\n    borderRadius: 10,\n    borderWidth: 1,\n    borderColor: '#fff',\n    width: '100%'\n  },\n  imageGAA: {\n    width: win.width,\n    height: 300 * ratioGaaView\n  },\n  imageSoccer: {\n    width: win.width,\n    height: 376 * ratioSoccerView,\n    top: '20%'\n  }\n});\nexport default ViewGame;","map":{"version":3,"sources":["D:/StatsAppNative/MyApp/screens/ViewGame/ViewGame.js"],"names":["React","useEffect","useState","Component","DarkTheme","useNavigation","createAppContainer","createStackNavigator","firebase","createKeyboardAwareNavigator","ThemeColors","widthPercentageToDP","wp","heightPercentageToDP","hp","TapGestureHandler","screenWidth","Dimensions","get","width","screenHeight","height","win","ratioGaaView","ratioSoccerView","ViewGame","props","filterGameData","totalTeamGoals","state","myUserId","auth","currentUser","uid","navigation","setParams","navigate","params","tempArr","tempArrOpponents","database","ref","child","GameRecordKey","StatsRecordKey","on","snapshot","exists","gameObj","val","setState","StatsStoredUsingScreenWidth","StatsStoredUsingScreenHeight","totalTeamPoints","totalTeamShots","totalTeamShotsOnTarget","OpponentsName","totalOpponentsTeamGoals","totalOpponentsTeamShots","totalOpponentsTeamShotsOnTarget","snapshotToArray","EventFieldLocations","OpponentsEventFieldLocations","playerArr","PlayerData","OpponentsplayerArr","OpponentsPlayerData","err","GetSelectedYourTeamPlayerStats","value","tempArrYourTeam","key","YourTeamPlayerData","GoToMainMenu","GoToViewGameMenu","displayReviewSelection","YourTeamSpecificStatFieldEvents","OpponentsSpecificStatFieldEvents","displayReviewGameStats","displaySelectedPlayerStats","displayOpponentsSelectedPlayerStats","SelectAnEvent_ReviewGameStats_YourTeam","SelectAnEvent_ReviewGameStats_Opponents","SelectAnEvent_ReviewGameStats_YourTeamPlayer","SelectAnEvent_ReviewGameStats_Opponents_TeamPlayer","GetSelectedOpponentsPlayerStats","ReviewPlayerStats","itemKey","selectedTeamPlayer","YourTeamEventSelection","alert","orderByChild","equalTo","playerObj","i","length","Goals","Points","Passes","PlayerKitNumber","PlayerName","PlayerPosition","Shots","ShotsOnTarget","ReviewOpponentsPlayerStats","selectedOpponentsPlayer","GetSpecificPlayerEventLocations","tempEventFieldLocations","splice","EventType","UserID","data","x","y","id","push","GetSpecificOpponentsPlayerEventLocations","OpponentsEventSelection","ReviewGameStats","TeamSpecificStat","OpponentsSpecificStat","ExecuteYourTeamEventAnaylsis","ExecuteOpponentsPlayerEventAnaylsis","OpponentEventSelection","SportType","retArr","forEach","childSnapshot","item","YourTeamSelected","displayReviewOpponentsPlayer","displayReviewYourTeamPlayer","displayTeamOption","console","log","OpponentsSelected","SelectPlayerSelection","SelectOpponentsPlayerSelection","TeamName","inviteCode","hasATeam","userType","GameList","GameViewList","UsersScreenHeight","UsersScreenWidth","statRecord","gameStatsRecordsArray","totalTeamPasses","totalTeamRedCards","totalTeamYellowCards","totalOpponentsTeamPoints","totalOpponentsTeamPasses","totalOpponentsTeamRedCards","totalOpponentsTeamYellowCards","YourTeamFieldEventsView","OpponentsFieldEventsView","displayTeamSpecificEventSelection","displayOpponentsSpecificEventSelection","OpponentsSpecificStatFieldEventsSoccerView","RedCards","YellowCards","userObj","ReviewSelection","TeamOption","PlayerStats","FieldWithPlots","stylesViewGame","container","text","button","StatTextWhite","headerContainer","StatRow","StatColumn","buttonTitle","backgroundColor","map","index","PlayerID","Text","imagePlotContainer","EventContainer","ColumnContainer","imagePxGAA","require","position","left","top","borderWidth","borderColor","borderRadius","imagePxSoccer","imageSoccerMobile","flexGrow","justifyContent","alignItems","fontSize","StyleSheet","create","dataContainer","marginBottom","color","flex","flexDirection","marginTop","padding","dcontainer","StatText","fontWeight","textAlign","container2","input","overflow","marginLeft","marginRight","paddingLeft","imagePxGAAmobile","flexWrap","paddingTop","paddingBottom","imageColumn","imageheaderContainer","imageGAA","imageSoccer"],"mappings":"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","sourcesContent":["import React, { useEffect, useState , Component  } from 'react'\r\nimport {Picker, ImageBackground, Dimensions,StatusBar,FlatList, Keyboard,  StyleSheet, Image, Text, View , ScrollView, TouchableOpacity,TextInput , Button , Alert} from 'react-native'\r\n\r\nimport { DarkTheme, useNavigation } from '@react-navigation/native';\r\nimport { createAppContainer } from 'react-navigation';\r\nimport { createStackNavigator } from 'react-navigation-stack';\r\n\r\n\r\n\r\n\r\n\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\nimport { createKeyboardAwareNavigator, ThemeColors } from 'react-navigation';\r\n\r\nimport {widthPercentageToDP as wp, heightPercentageToDP as hp} from 'react-native-responsive-screen';\r\n\r\n\r\n\r\nimport { TapGestureHandler } from 'react-native-gesture-handler';\r\n\r\nconst screenWidth = Dimensions.get('window').width;\r\n\r\nconst screenHeight = Dimensions.get('window').height;\r\n\r\n\r\nconst win = Dimensions.get('window');\r\n\r\n\r\nconst ratioGaaView = win.width/590;\r\n\r\n\r\nconst ratioSoccerView = win.width/700;\r\n\r\nclass ViewGame extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            TeamName: '',\r\n            OpponentsName:'',\r\n            SportType: '',\r\n            inviteCode:'',\r\n            hasATeam: false,\r\n            userType: [],\r\n            GameList:[],\r\n            GameViewList:[],\r\n            EventType:'',\r\n\r\n            UsersScreenHeight:0,\r\n            UsersScreenWidth:0,\r\n            statRecord:'',\r\n            gameStatsRecordsArray:[],\r\n\r\n            selectedTeamPlayer:'',\r\n            selectedOpponentsPlayer:'',\r\n\r\n            PlayerData:[],\r\n            OpponentsPlayerData:[],\r\n            YourTeamPlayerData:[],\r\n            tempArr:[],\r\n            tempArrOpponents:[],\r\n            tempArrYourTeam:[],\r\n\r\n            playerArr:[],\r\n            OpponentsplayerArr:[],\r\n\r\n       \r\n       \r\n\r\n            totalTeamGoals: 0,\r\n            totalTeamPoints:0,\r\n            totalTeamPasses: 0,\r\n            totalTeamShots:0,\r\n            totalTeamShotsOnTarget:0,\r\n            totalTeamRedCards:0,\r\n            totalTeamYellowCards:0,\r\n\r\n            totalOpponentsTeamGoals:0,\r\n            totalOpponentsTeamPoints:0,\r\n            totalOpponentsTeamShots: 0,\r\n            totalOpponentsTeamShotsOnTarget:0,\r\n            totalOpponentsTeamPasses: 0,\r\n            totalOpponentsTeamRedCards:0,\r\n            totalOpponentsTeamYellowCards:0,\r\n\r\n\r\n            GameRecordKey:'',\r\n            StatsRecordKey: '',\r\n\r\n            //Detailed Analysis - Player Specific\r\n            tempEventFieldLocations:[],\r\n            YourTeamFieldEventsView: false,\r\n            OpponentsFieldEventsView:false,\r\n\r\n\r\n            YourTeamEventSelection: '',\r\n            OpponentsEventSelection:'',\r\n\r\n            EventFieldLocations:[],\r\n            OpponentsEventFieldLocations:[],\r\n\r\n            //Detailed Analysis - Tean event Specific\r\n            displayTeamSpecificEventSelection:false,\r\n            displayOpponentsSpecificEventSelection:false,\r\n\r\n        \r\n            //Field Location views - Overall Team/Opponent Team Events\r\n            YourTeamSpecificStatFieldEvents: false,\r\n            OpponentsSpecificStatFieldEventsSoccerView:false,\r\n\r\n            //frontend end toggles\r\n            displayReviewSelection:true,\r\n            displayReviewGameStats:false,\r\n            displayReviewYourTeamPlayer:false,\r\n            displayReviewOpponentsPlayer:false,\r\n            displaySelectedPlayerStats:false,\r\n            displayOpponentsSelectedPlayerStats:false,\r\n\r\n            //Event Selection - Overall Team/Opponent Team Events\r\n            SelectAnEvent_ReviewGameStats_YourTeam:false,\r\n            SelectAnEvent_ReviewGameStats_Opponents:false,\r\n\r\n            //Event Selection - Player Specific Event Selection  \r\n            SelectAnEvent_ReviewGameStats_YourTeamPlayer:false,\r\n            SelectAnEvent_ReviewGameStats_Opponents_TeamPlayer:false,\r\n\r\n            //Field Location views - Overall Team/Opponent Team Events (GAA + Soccer)\r\n            YourTeamSpecificStatFieldEvents:false,\r\n            OpponentsSpecificStatFieldEvents:false,\r\n\r\n            //Individual Player Stats\r\n            PlayerKitNumber: 0,\r\n            PlayerName:'',\r\n            PlayerPosition:'',\r\n            Goals:0,\r\n            Points:0,\r\n            Passes:0,\r\n            Shots:0,\r\n            ShotsOnTarget:0,\r\n            RedCards:0,\r\n            YellowCards:0,\r\n           \r\n        };\r\n\r\n     \r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        //Obtain SelectedStarting11 Array of players\r\n        const { state, setParams, navigate } = this.props.navigation;\r\n        const params = state.params || {};\r\n\r\n        // Firebase Key for the Game record\r\n        this.setState({GameRecordKey: params.GameRecordKey});\r\n\r\n        //Firebase Key for the Game Stats Record\r\n        this.setState({StatsRecordKey: params.StatsRecordKey});\r\n\r\n\r\n        var myUserId = firebase.auth().currentUser.uid;\r\n        var GameRecordKey = this.state.GameRecordKey;\r\n        var gameStatsRecordsArray = this.state.gameStatsRecordsArray;\r\n\r\n\r\n        // GET Team SportType\r\n        firebase.database().ref('/teams').child(myUserId)\r\n        .on('value', snapshot => {\r\n            const userObj = snapshot.val();\r\n\r\n            let SportType = userObj.SportType;\r\n            this.setState({SportType:SportType});\r\n\r\n            let TeamName = userObj.TeamName;\r\n            this.setState({TeamName:TeamName});\r\n\r\n        });\r\n\r\n            this.setState({SelectAnEvent_ReviewGameStats_Opponents_TeamPlayer:false});\r\n     \r\n            this.filterGameData();\r\n\r\n    }\r\n\r\n            \r\n \r\n  filterGameData = async() => {\r\n\r\n    var totalTeamGoals = this.state.totalTeamGoals;\r\n\r\n    var myUserId = firebase.auth().currentUser.uid;\r\n\r\n        //Obtain SelectedStarting11 Array of players\r\n        const { state, setParams, navigate } = this.props.navigation;\r\n        const params = state.params || {};\r\n        \r\n\r\n        var tempArr = [];\r\n        var tempArrOpponents = [];\r\n\r\n   try{\r\n\r\n   \r\n        \r\n\r\n    //GET Game records and put them all into an array \r\n    firebase.database().ref('/teams').child(myUserId).child('games').child(params.GameRecordKey).child('YourTeamStats').child(params.StatsRecordKey)\r\n    .on('value', snapshot => {\r\n   \r\n\r\n        if(snapshot.exists())\r\n        {\r\n\r\n            const gameObj = snapshot.val();\r\n\r\n\r\n            let screenWidth = gameObj.screenWidth;\r\n            this.setState({StatsStoredUsingScreenWidth: screenWidth});\r\n\r\n            let screenHeight = gameObj.screenHeight;\r\n            this.setState({StatsStoredUsingScreenHeight: screenHeight});\r\n\r\n\r\n            let totalTeamGoals = gameObj.totalTeamGoals;\r\n            this.setState({totalTeamGoals: totalTeamGoals});\r\n\r\n            let totalTeamPoints = gameObj.totalTeamPoints;\r\n            this.setState({totalTeamPoints: totalTeamPoints});\r\n\r\n            // let totalTeamPasses = gameObj.totalTeamPasses;\r\n            // this.setState({totalTeamPasses:totalTeamPasses});\r\n\r\n            let totalTeamShots = gameObj.totalTeamShots;\r\n            this.setState({totalTeamShots:totalTeamShots});\r\n\r\n            let totalTeamShotsOnTarget = gameObj.totalTeamShotsOnTarget;\r\n            this.setState({totalTeamShotsOnTarget:totalTeamShotsOnTarget});\r\n\r\n            let OpponentsName = gameObj.OpponentsName;\r\n            this.setState({OpponentsName: OpponentsName});\r\n\r\n            let totalOpponentsTeamGoals = gameObj.totalOpponentsTeamGoals;\r\n            this.setState({totalOpponentsTeamGoals: totalOpponentsTeamGoals});\r\n\r\n            // let totalOpponentsTeamPasses = gameObj.totalOpponentsTeamPasses;\r\n            // this.setState({totalOpponentsTeamPasses:totalOpponentsTeamPasses});\r\n\r\n            let totalOpponentsTeamShots = gameObj.totalOpponentsTeamShots;\r\n            this.setState({totalOpponentsTeamShots:totalOpponentsTeamShots});\r\n\r\n            let totalOpponentsTeamShotsOnTarget = gameObj.totalOpponentsTeamShotsOnTarget;\r\n            this.setState({totalOpponentsTeamShotsOnTarget:totalOpponentsTeamShotsOnTarget});\r\n\r\n\r\n            }\r\n            else \r\n            {\r\n\r\n            }\r\n        });\r\n\r\n        \r\n\r\n\r\n          //Get data from DB - Your Team Event Locations \r\n          firebase.database().ref('/teams').child(myUserId).child('/games').child(params.GameRecordKey).child('EventFieldPositions')\r\n          .on('value', snapshot => {\r\n    \r\n             tempArr = this.snapshotToArray(snapshot);\r\n\r\n              this.setState({\r\n                  EventFieldLocations: tempArr\r\n              });\r\n  \r\n       \r\n          });\r\n\r\n\r\n        \r\n\r\n        //Get data from DB  - Opponents Event Locations \r\n        firebase.database().ref('/teams').child(myUserId).child('/games').child(params.GameRecordKey).child('OpponentsEventFieldPositions')\r\n        .on('value', snapshot => {\r\n\r\n            tempArrOpponents = this.snapshotToArray(snapshot);\r\n\r\n            this.setState({\r\n                OpponentsEventFieldLocations:  tempArrOpponents\r\n            });\r\n        });\r\n\r\n\r\n\r\n        var myUserId = firebase.auth().currentUser.uid;\r\n        var playerArr = [];\r\n\r\n        firebase.database().ref('/teams').child(myUserId).child('/games').child(params.GameRecordKey).child('YourTeam').child('players')\r\n            .on('value', snapshot => {\r\n\r\n            \r\n              \r\n                playerArr = this.snapshotToArray(snapshot);\r\n\r\n                this.setState({\r\n                    PlayerData: playerArr\r\n                });\r\n\r\n        });\r\n\r\n\r\n        var OpponentsplayerArr = [];\r\n        firebase.database().ref('/teams').child(myUserId).child('/games').child(params.GameRecordKey).child('Opponents').child('players')\r\n        .on('value', snapshot => {\r\n\r\n       \r\n          \r\n            OpponentsplayerArr = this.snapshotToArray(snapshot);\r\n\r\n            this.setState({\r\n                OpponentsPlayerData: OpponentsplayerArr\r\n            });\r\n\r\n        });\r\n\r\n   \r\n        }\r\n        catch(err){\r\n            \r\n        }\r\n      }\r\n\r\n\r\n\r\n\r\n\r\n    //Your Team - Player Lists\r\n    GetSelectedYourTeamPlayerStats = value => () => {\r\n\r\n        //Obtain Array of players\r\n        const { state, setParams, navigate } = this.props.navigation;\r\n        const params = state.params || {};\r\n\r\n        var myUserId = firebase.auth().currentUser.uid;\r\n        var tempArrYourTeam = [];\r\n\r\n        firebase.database().ref('/teams').child(myUserId).child('/games').child(params.key).child('YourTeam').child('players')\r\n            .on('value', snapshot => {\r\n              \r\n                tempArrYourTeam = this.snapshotToArray(snapshot);\r\n                this.setState({\r\n                    YourTeamPlayerData: tempArrYourTeam\r\n                });\r\n\r\n        });\r\n\r\n   \r\n\r\n\r\n    }\r\n\r\n\r\n    GoToMainMenu = async() => {\r\n        this.props.navigation.navigate('Home');\r\n    }\r\n\r\n \r\n\r\n    GoToViewGameMenu = async() => {\r\n        \r\n        //Make View game menu appear\r\n        this.setState({displayReviewSelection:true});\r\n\r\n        //Make field disappear \r\n        this.setState({YourTeamSpecificStatFieldEvents: false});\r\n        this.setState({OpponentsSpecificStatFieldEvents: false});\r\n\r\n        this.setState({displayReviewGameStats:false});\r\n        this.setState({displaySelectedPlayerStats:false});\r\n        this.setState({displayOpponentsSelectedPlayerStats:false});\r\n\r\n        this.setState({SelectAnEvent_ReviewGameStats_YourTeam:false});\r\n        this.setState({SelectAnEvent_ReviewGameStats_Opponents:false});\r\n        this.setState({SelectAnEvent_ReviewGameStats_YourTeamPlayer:false});\r\n        this.setState({SelectAnEvent_ReviewGameStats_Opponents_TeamPlayer:false});\r\n\r\n\r\n\r\n    };\r\n\r\n\r\n\r\n       \r\n     \r\n\r\n\r\n    //Opponents - Player Lists\r\n    GetSelectedOpponentsPlayerStats = value => () => {\r\n\r\n        //Obtain Array of players\r\n        const { state, setParams, navigate } = this.props.navigation;\r\n        const params = state.params || {};\r\n\r\n        var myUserId = firebase.auth().currentUser.uid;\r\n        var tempArrOpponents = [];\r\n\r\n        firebase.database().ref('/teams').child(myUserId).child('/games').child(params.key).child('Opponents').child('players')\r\n            .on('value', snapshot => {\r\n              \r\n                tempArrOpponents = this.snapshotToArray(snapshot);\r\n                this.setState({\r\n                    OpponentsPlayerData: tempArrOpponents\r\n                });\r\n\r\n        });\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    //GET a specifc YOUR TEAM player\r\n    ReviewPlayerStats = ( itemKey ) => {\r\n        \r\n        var selectedTeamPlayer = this.state.selectedTeamPlayer;\r\n        var YourTeamEventSelection = this.state.YourTeamEventSelection;\r\n\r\n        var myUserId = firebase.auth().currentUser.uid;\r\n\r\n\r\n       const { state, setParams, navigate } = this.props.navigation;\r\n       const params = state.params || {};\r\n       var tempArr = this.state.tempArr;\r\n\r\n        if(selectedTeamPlayer == '' )\r\n        {\r\n            return alert(\"Please select a player\");\r\n        }\r\n        else\r\n        {\r\n            this.setState({displayReviewGameStats: false});\r\n            this.setState({displaySelectedPlayerStats:true});\r\n            this.setState({SelectAnEvent_ReviewGameStats_YourTeamPlayer:false});\r\n            \r\n\r\n \r\n            firebase.database().ref('/teams').child(myUserId).child('/games').child(params.GameRecordKey).child('YourTeam').child('players').orderByChild(\"PlayerID\").equalTo(selectedTeamPlayer)\r\n            .on('value', snapshot => {\r\n\r\n                const playerObj = snapshot.val();\r\n\r\n\r\n     \r\n                tempArr = this.snapshotToArray(snapshot);\r\n         \r\n\r\n                for(var i = 0; i < tempArr.length; i++)\r\n                {\r\n\r\n                    let Goals = tempArr[i].Goals;\r\n                    this.setState({Goals:Goals});\r\n\r\n                    let Points = tempArr[i].Points;\r\n                    this.setState({Points:Points});\r\n                    \r\n                    let Passes = tempArr[i].Passes;\r\n                    this.setState({Passes:Passes});\r\n\r\n                    let PlayerKitNumber = tempArr[i].PlayerKitNumber;\r\n                    this.setState({PlayerKitNumber:PlayerKitNumber});\r\n\r\n                    let PlayerName = tempArr[i].PlayerName;\r\n                    this.setState({PlayerName:PlayerName});\r\n\r\n                    let PlayerPosition = tempArr[i].PlayerPosition;\r\n                    this.setState({PlayerPosition:PlayerPosition});\r\n\r\n                    let Shots = tempArr[i].Shots;\r\n                    this.setState({Shots:Shots});\r\n\r\n                    let ShotsOnTarget = tempArr[i].ShotsOnTarget;\r\n                    this.setState({ShotsOnTarget: ShotsOnTarget});\r\n\r\n                }\r\n\r\n              \r\n            \r\n            \r\n        \r\n           \r\n            });\r\n\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n   \r\n\r\n    }\r\n\r\n\r\n    //GET a specific OPPONENTS player\r\n    ReviewOpponentsPlayerStats = ( itemKey ) => {\r\n\r\n    \r\n        var myUserId = firebase.auth().currentUser.uid;\r\n\r\n        const { state, setParams, navigate } = this.props.navigation;\r\n        const params = state.params || {};\r\n        var tempArr = this.state.tempArr;\r\n             \r\n\r\n        var selectedOpponentsPlayer = this.state.selectedOpponentsPlayer;\r\n\r\n        if(selectedOpponentsPlayer == '' )\r\n        {\r\n            return alert(\"Please select a player\");\r\n        }\r\n        else\r\n        {\r\n            \r\n            this.setState({displayReviewGameStats: false});\r\n            this.setState({displayOpponentsSelectedPlayerStats:true});\r\n            this.setState({SelectAnEvent_ReviewGameStats_Opponents_TeamPlayer:false});\r\n         \r\n              firebase.database().ref('/teams').child(myUserId).child('/games').child(params.GameRecordKey).child('Opponents').child('players').orderByChild(\"PlayerID\").equalTo(selectedOpponentsPlayer)\r\n              .on('value', snapshot => {\r\n  \r\n                  const playerObj = snapshot.val();\r\n  \r\n                  tempArr = this.snapshotToArray(snapshot);\r\n           \r\n  \r\n                  for(var i = 0; i < tempArr.length; i++)\r\n                  {\r\n                      \r\n                      let Goals = tempArr[i].Goals;\r\n                      this.setState({Goals:Goals});\r\n  \r\n                      let Points = tempArr[i].Points;\r\n                      this.setState({Points:Points});\r\n                      \r\n                      let Passes = tempArr[i].Passes;\r\n                      this.setState({Passes:Passes});\r\n  \r\n                      let PlayerKitNumber = tempArr[i].PlayerKitNumber;\r\n                      this.setState({PlayerKitNumber:PlayerKitNumber});\r\n  \r\n                      let PlayerName = tempArr[i].PlayerName;\r\n                      this.setState({PlayerName:PlayerName});\r\n  \r\n                      let PlayerPosition = tempArr[i].PlayerPosition;\r\n                      this.setState({PlayerPosition:PlayerPosition});\r\n  \r\n                      let Shots = tempArr[i].Shots;\r\n                      this.setState({Shots:Shots});\r\n  \r\n                      let ShotsOnTarget = tempArr[i].ShotsOnTarget;\r\n                      this.setState({ShotsOnTarget: ShotsOnTarget});\r\n  \r\n                  }\r\n              \r\n                      \r\n              });\r\n  \r\n  \r\n  \r\n          }\r\n  \r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n        }\r\n\r\n\r\n    GetSpecificPlayerEventLocations = async() => {\r\n        \r\n        //Array to store event Locations\r\n        var EventFieldLocations = this.state.EventFieldLocations;   \r\n\r\n        var YourTeamEventSelection = this.state.YourTeamEventSelection;\r\n\r\n        var selectedTeamPlayer = this.state.selectedTeamPlayer;\r\n\r\n    \r\n        var myUserId = firebase.auth().currentUser.uid;\r\n        var tempEventFieldLocations = this.state.tempEventFieldLocations;\r\n\r\n      \r\n        if(selectedTeamPlayer != '')\r\n        {\r\n\r\n            if(YourTeamEventSelection == '')\r\n            {\r\n                return alert(\"Please select an event\");\r\n            }\r\n            else\r\n            {\r\n                //get Event locations using SelectedTeamPlayer + YourTeamEventSelection\r\n                const { state, setParams, navigate } = this.props.navigation;\r\n                const params = state.params || {};\r\n               \r\n                //empty tempEventFieldLocations as this is only a temp array\r\n                tempEventFieldLocations.splice(0,tempEventFieldLocations.length);\r\n        \r\n                //filter array to get the specific player and event locations\r\n                for (var i = 0; i < EventFieldLocations.length; i++) \r\n                {\r\n        \r\n                    if(EventFieldLocations[i].EventType == YourTeamEventSelection)\r\n                    {\r\n                        if(EventFieldLocations[i].UserID == selectedTeamPlayer)\r\n                        {\r\n\r\n                            var data = {\r\n                                x:EventFieldLocations[i].x, \r\n                                y:EventFieldLocations[i].y,\r\n                                id:EventFieldLocations[i].UserID,\r\n                                EventType:EventFieldLocations[i].EventType\r\n                            };\r\n            \r\n            \r\n                            //Push to new temp EventFieldLocations\r\n                            this.state.tempEventFieldLocations.push(data);\r\n\r\n                           \r\n\r\n                        }\r\n        \r\n                    }\r\n                }\r\n        \r\n        \r\n\r\n                    //Make Field Image appear\r\n                    this.setState({YourTeamSpecificStatFieldEvents:true});\r\n                    \r\n                    this.setState({SelectAnEvent_ReviewGameStats_YourTeamPlayer:false});\r\n\r\n            }\r\n\r\n\r\n        }\r\n        else\r\n        {\r\n            return alert(\"Please select a player\");\r\n        }\r\n\r\n    }\r\n\r\n    //Opponents\r\n    GetSpecificOpponentsPlayerEventLocations = async() => {\r\n        \r\n        //Array to store event Locations\r\n        var OpponentsEventFieldLocations = this.state.OpponentsEventFieldLocations;   \r\n    \r\n        var OpponentsEventSelection = this.state.OpponentsEventSelection;\r\n    \r\n        var selectedOpponentsPlayer = this.state.selectedOpponentsPlayer;\r\n    \r\n   \r\n        var tempEventFieldLocations = this.state.tempEventFieldLocations;\r\n    \r\n            \r\n            if(selectedOpponentsPlayer != '')\r\n            {\r\n    \r\n                if(OpponentsEventSelection == '')\r\n                {\r\n                    return alert(\"Please select an event\");\r\n                }\r\n                else\r\n                {\r\n                    //get Event locations using SelectedTeamPlayer + YourTeamEventSelection\r\n                    const { state, setParams, navigate } = this.props.navigation;\r\n                    const params = state.params || {};\r\n                   \r\n                    //empty tempEventFieldLocations as this is only a temp array\r\n                    tempEventFieldLocations.splice(0,tempEventFieldLocations.length);\r\n            \r\n                    //filter array to get the specific player and event locations\r\n                    for (var i = 0; i < OpponentsEventFieldLocations.length; i++) \r\n                    {\r\n            \r\n                   \r\n                        //Bug here- we are not  hitting this if statement\r\n                        if(OpponentsEventFieldLocations[i].EventType == OpponentsEventSelection)\r\n                        {\r\n                         \r\n                            if(OpponentsEventFieldLocations[i].UserID == selectedOpponentsPlayer)\r\n                            {\r\n                    \r\n                                var data = {\r\n                                    x:OpponentsEventFieldLocations[i].x, \r\n                                    y:OpponentsEventFieldLocations[i].y,\r\n                                    id:OpponentsEventFieldLocations[i].UserID\r\n                                };\r\n                \r\n                \r\n                                //Push to new temp EventFieldLocations\r\n                                this.state.tempEventFieldLocations.push(data);\r\n                \r\n\r\n                            }\r\n\r\n                          \r\n                        }\r\n                    }\r\n            \r\n                        //Make Field Image appear\r\n                        this.setState({OpponentsSpecificStatFieldEvents:true});\r\n\r\n                        this.setState({SelectAnEvent_ReviewGameStats_Opponents_TeamPlayer: false});\r\n\r\n                    \r\n                }\r\n    \r\n    \r\n            }\r\n            else\r\n            {\r\n                return alert(\"Please select a player\");\r\n            }\r\n    \r\n        }\r\n    \r\n    \r\n\r\n\r\n\r\n    //Toggles frontend - View overall game stats\r\n    ReviewGameStats = async() => { \r\n\r\n        this.setState({ displayReviewSelection:false});\r\n\r\n        this.setState({ displayReviewGameStats: true});\r\n    }\r\n\r\n    //Toggles frontend - Event Selection will appear\r\n    TeamSpecificStat = async() => {\r\n    \r\n        this.setState({ SelectAnEvent_ReviewGameStats_YourTeam: true });\r\n\r\n        this.setState({ displayReviewSelection: false});\r\n\r\n        \r\n        this.setState({ displayReviewGameStats: false});\r\n\r\n\r\n\r\n    }\r\n\r\n    //Toggles frontend - Event Selection will appear\r\n    OpponentsSpecificStat = async() => {\r\n        \r\n        this.setState({ SelectAnEvent_ReviewGameStats_Opponents: true});\r\n\r\n        this.setState({ displayReviewGameStats: false});\r\n\r\n        this.setState({ displayReviewSelection: false});\r\n    }\r\n\r\n    ExecuteYourTeamEventAnaylsis = async() => {\r\n\r\n          //Users Event selection\r\n          var YourTeamEventSelection = this.state.YourTeamEventSelection;\r\n  \r\n          //Array to store event Locations\r\n          var EventFieldLocations = this.state.EventFieldLocations;\r\n  \r\n          var myUserId = firebase.auth().currentUser.uid;\r\n          var tempEventFieldLocations = this.state.tempEventFieldLocations;\r\n\r\n          const { state, setParams, navigate } = this.props.navigation;\r\n          const params = state.params || {};\r\n         \r\n          //empty tempEventFieldLocations as this is only a temp array\r\n          tempEventFieldLocations.splice(0,tempEventFieldLocations.length);\r\n  \r\n          //filter array to get the specific player and event locations\r\n          for (var i = 0; i < EventFieldLocations.length; i++) \r\n          {\r\n  \r\n              if(EventFieldLocations[i].EventType == YourTeamEventSelection)\r\n              {\r\n  \r\n                  var data = {\r\n                      x:EventFieldLocations[i].x, \r\n                      y:EventFieldLocations[i].y \r\n                  };\r\n  \r\n  \r\n                  //Push to new temp EventFieldLocations\r\n                  this.state.tempEventFieldLocations.push(data);\r\n  \r\n              }\r\n          }\r\n  \r\n\r\n          this.setState({SelectAnEvent_ReviewGameStats_YourTeam:false});\r\n\r\n          //Make Field Image appear\r\n          this.setState({YourTeamSpecificStatFieldEvents:true});\r\n   \r\n    }\r\n\r\n    ExecuteOpponentsPlayerEventAnaylsis = async() => {\r\n\r\n        //Users Event selection\r\n        var OpponentEventSelection = this.state.OpponentEventSelection;\r\n        \r\n        //Array to store event Locations\r\n        var OpponentsEventFieldLocations = this.state.OpponentsEventFieldLocations;\r\n\r\n        var myUserId = firebase.auth().currentUser.uid;\r\n        var tempEventFieldLocations = this.state.tempEventFieldLocations;\r\n\r\n        var SportType = this.state.SportType;\r\n\r\n\r\n        const { state, setParams, navigate } = this.props.navigation;\r\n        const params = state.params || {};\r\n\r\n        //empty tempEventFieldLocations as this is only a temp array\r\n        tempEventFieldLocations.splice(0,tempEventFieldLocations.length);\r\n\r\n        //filter array to get the specific player and event locations\r\n        for (var i = 0; i < OpponentsEventFieldLocations.length; i++) \r\n        {\r\n\r\n            if(OpponentsEventFieldLocations[i].EventType == OpponentEventSelection)\r\n            {\r\n\r\n                var data = {\r\n                    x:OpponentsEventFieldLocations[i].x, \r\n                    y:OpponentsEventFieldLocations[i].y \r\n                };\r\n\r\n\r\n                //Push to new temp EventFieldLocations\r\n                this.state.tempEventFieldLocations.push(data);\r\n\r\n\r\n             \r\n            }\r\n        }\r\n\r\n\r\n        this.setState({SelectAnEvent_ReviewGameStats_Opponents:false});\r\n\r\n       \r\n        //Make Field Image appear\r\n        this.setState({OpponentsSpecificStatFieldEvents:true});\r\n\r\n     \r\n    }\r\n\r\n    snapshotToArray = snapshot => {\r\n        var retArr = [];\r\n        snapshot.forEach(childSnapshot => {\r\n            var item = childSnapshot.val();\r\n            item.key = childSnapshot.key;\r\n            retArr.push(item);\r\n        });\r\n        return retArr;\r\n    }\r\n\r\n    //The users Team player selection will appear\r\n    YourTeamSelected = async() => {\r\n\r\n        this.setState({ displayReviewOpponentsPlayer:false });\r\n        this.setState({ displayReviewSelection:false});\r\n        this.setState({ displayReviewYourTeamPlayer:true });\r\n        this.setState({ displayTeamOption: false}); \r\n\r\n        \r\n    //Your Team - Player List\r\n\r\n        //Obtain SelectedStarting11 Array of players\r\n        const { state, setParams, navigate } = this.props.navigation;\r\n        const params = state.params || {};\r\n\r\n        var myUserId = firebase.auth().currentUser.uid;\r\n        var tempArr = [];\r\n\r\n        firebase.database().ref('/teams').child(myUserId).child('/games').child(params.GameRecordKey).child('YourTeam').child('players')\r\n            .on('value', snapshot => {\r\n\r\n                console.log(snapshot.val());\r\n              \r\n                tempArr = this.snapshotToArray(snapshot);\r\n\r\n                this.setState({\r\n                    PlayerData: tempArr\r\n                });\r\n\r\n        });\r\n\r\n\r\n    \r\n    }\r\n\r\n    //Opponents player selection will appear\r\n    OpponentsSelected = async() => {\r\n\r\n        this.setState({ displayReviewSelection:false});\r\n        this.setState({ displayReviewOpponentsPlayer:true });\r\n        this.setState({ displayTeamOption: false}); \r\n\r\n\r\n\r\n        //Your Team - Player List\r\n\r\n        //Obtain SelectedStarting11 Array of players\r\n        const { state, setParams, navigate } = this.props.navigation;\r\n        const params = state.params || {};\r\n\r\n        var myUserId = firebase.auth().currentUser.uid;\r\n        var tempArr = [];\r\n\r\n        firebase.database().ref('/teams').child(myUserId).child('/games').child(params.GameRecordKey).child('Opponents').child('players')\r\n            .on('value', snapshot => {\r\n\r\n            \r\n              \r\n                tempArr = this.snapshotToArray(snapshot);\r\n\r\n\r\n                // console.log(this.snapshotToArray(snapshot));\r\n                this.setState({\r\n                    OpponentsPlayerData: tempArr\r\n                });\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n    //This will trigger a selection on the frontend , where the user selects to review their Team players\r\n    SelectPlayerSelection = async() => {\r\n\r\n        this.setState({displayReviewGameStats: false});\r\n        this.setState({displayReviewSelection:false});\r\n\r\n        this.setState({SelectAnEvent_ReviewGameStats_YourTeamPlayer:true});\r\n\r\n    }\r\n\r\n    \r\n    //This will trigger a selection on the frontend , where the user selects to review the Opponents players\r\n    SelectOpponentsPlayerSelection = async() => {\r\n\r\n        this.setState({displayReviewGameStats: false});\r\n        this.setState({displayReviewSelection:false});\r\n\r\n        this.setState({SelectAnEvent_ReviewGameStats_Opponents_TeamPlayer:true});\r\n\r\n    }\r\n\r\n   \r\n        render(){\r\n            \r\n            var ReviewGameStats;\r\n            var ReviewPlayerStats;\r\n            var ReviewSelection;\r\n            var TeamOption;\r\n            var PlayerStats;\r\n            \r\n            var FieldWithPlots;\r\n        \r\n            var SportType = this.state.SportType;\r\n\r\n            var PlayerKitNumber = this.state.PlayerKitNumber;\r\n\r\n            var PlayerName = this.state.PlayerName;\r\n\r\n            var PlayerPosition = this.state.PlayerPosition;\r\n            var Goals = this.state.Goals;\r\n            var Points = this.state.Points;\r\n            var Passes = this.state.Passes;\r\n            var Shots = this.state.Shots;\r\n            var ShotsOnTarget = this.state.ShotsOnTarget;\r\n            var YourTeamEventSelection = this.state.YourTeamEventSelection;\r\n\r\n            \r\n            var displayReviewSelection = this.state.displayReviewSelection;\r\n            var displaySelectedPlayerStats = this.state.displaySelectedPlayerStats;\r\n            var displayReviewGameStats = this.state.displayReviewGameStats;\r\n            var displayOpponentsSelectedPlayerStats = this.state.displayOpponentsSelectedPlayerStats;\r\n            \r\n            //Event Selection - Overall Team/Opponent Team Events\r\n            var SelectAnEvent_ReviewGameStats_YourTeam  = this.state.SelectAnEvent_ReviewGameStats_YourTeam;\r\n            var SelectAnEvent_ReviewGameStats_Opponents = this.state.SelectAnEvent_ReviewGameStats_Opponents;\r\n\r\n            //Event Selection - Player Specific Event Selection  \r\n            var SelectAnEvent_ReviewGameStats_YourTeamPlayer = this.state.SelectAnEvent_ReviewGameStats_YourTeamPlayer;\r\n            var SelectAnEvent_ReviewGameStats_Opponents_TeamPlayer = this.state.SelectAnEvent_ReviewGameStats_Opponents_TeamPlayer;\r\n\r\n            //Field Location views - Overall Team/Opponent Team Events (GAA + Soccer)\r\n            var YourTeamSpecificStatFieldEvents = this.state.YourTeamSpecificStatFieldEvents;\r\n            var OpponentsSpecificStatFieldEvents = this.state.OpponentsSpecificStatFieldEvents;\r\n\r\n\r\n\r\n          \r\n\r\n\r\n                    if(displayReviewSelection == true)\r\n                    {\r\n\r\n                            ReviewSelection = (\r\n\r\n                                \r\n                        <ScrollView style={stylesViewGame.container}>                \r\n                                    <Text style={stylesViewGame.text}>Select an Option:</Text>\r\n\r\n                                    <TouchableOpacity style={stylesViewGame.button} onPress = {this.ReviewGameStats}>\r\n                                        <Text style={stylesViewGame.StatTextWhite}>Review All Games Stats</Text>\r\n                                    </TouchableOpacity>\r\n                                    \r\n                                    <TouchableOpacity style={stylesViewGame.button} onPress = {this.SelectPlayerSelection}>\r\n                                        <Text style={stylesViewGame.StatTextWhite}>Specific players stats from {this.state.TeamName}</Text>\r\n                                    </TouchableOpacity>\r\n\r\n                                    <TouchableOpacity style={stylesViewGame.button} onPress = {this.SelectOpponentsPlayerSelection}>\r\n                                        <Text style={stylesViewGame.StatTextWhite}>Specific players stats from {this.state.OpponentsName}</Text>\r\n                                    </TouchableOpacity>\r\n\r\n                                    <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToMainMenu}>\r\n                                        <Text style={stylesViewGame.StatTextWhite}>Back to Main Menu</Text>\r\n                                    </TouchableOpacity>\r\n                                \r\n                                </ScrollView>\r\n\r\n                            );\r\n        \r\n                    }\r\n\r\n\r\n\r\n                    if(displayReviewGameStats == true)\r\n                    {\r\n\r\n                        if(SportType == 'GAA')\r\n                        {\r\n\r\n                            //We are here - cant get the rows//- look at github and replace that way\r\n                            ReviewGameStats= (\r\n\r\n                                <View style={stylesViewGame.container}>\r\n\r\n                                    <View style={stylesViewGame.headerContainer}>\r\n                                        <Text style={stylesViewGame.StatTextWhite}>{this.state.TeamName}</Text>\r\n                                    </View>\r\n\r\n                                    <View style={stylesViewGame.StatRow}>\r\n                                        <View style={stylesViewGame.StatColumn}>\r\n                                            <Text style={stylesViewGame.StatTextWhite}> Goals: {this.state.totalTeamGoals}</Text>\r\n                                            <Text style={stylesViewGame.StatTextWhite}> Points: {this.state.totalTeamPoints}</Text>\r\n                                            <Text style={stylesViewGame.StatTextWhite}> Shots: {this.state.totalTeamShots}</Text>\r\n                                            <Text style={stylesViewGame.StatTextWhite}> Shots on target: {this.state.totalTeamShotsOnTarget}</Text>\r\n                                        </View>\r\n                                    </View>\r\n\r\n\r\n                                    <TouchableOpacity style={stylesViewGame.button} onPress = {this.TeamSpecificStat}>\r\n                                        <Text style={stylesViewGame.buttonTitle}>Review a specific stat from {this.state.TeamName} records</Text>\r\n                                    </TouchableOpacity>\r\n\r\n \r\n                                    <View style={stylesViewGame.headerContainer}>\r\n                                        <Text style={stylesViewGame.StatTextWhite}>{this.state.OpponentsName}</Text>\r\n                                    </View>\r\n\r\n                                    <View style={stylesViewGame.StatRow}>\r\n                                        <View style={stylesViewGame.StatColumn}>\r\n                                            <Text style={stylesViewGame.StatTextWhite}> Goals: {this.state.totalOpponentsTeamGoals}</Text>\r\n                                            <Text style={stylesViewGame.StatTextWhite}> Points: {this.state.totalOpponentsTeamPoints}</Text>\r\n                                            <Text style={stylesViewGame.StatTextWhite}> Shots: {this.state.totalOpponentsTeamShots}</Text>\r\n                                            <Text style={stylesViewGame.StatTextWhite}> Shots on target: {this.state.totalOpponentsTeamShotsOnTarget}</Text>\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                    <TouchableOpacity style={stylesViewGame.button} onPress = {this.OpponentsSpecificStat}>\r\n                                        <Text style={stylesViewGame.buttonTitle}>Review a specific stat from {this.state.OpponentsName} records</Text>\r\n                                    </TouchableOpacity>\r\n\r\n                                    <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToMainMenu}>\r\n                                        <Text style={stylesViewGame.buttonTitle}>Back to Main Menu</Text>\r\n                                    </TouchableOpacity> \r\n\r\n                                </View>\r\n\r\n                            );\r\n\r\n                        }\r\n                        else if(SportType == 'Soccer')\r\n                        {\r\n\r\n                            ReviewGameStats= (\r\n\r\n                                <View style={stylesViewGame.container}>\r\n\r\n                                    <View style={stylesViewGame.headerContainer}>\r\n                                        <Text style={stylesViewGame.StatTextWhite}>{this.state.TeamName} records</Text>\r\n                                    </View>\r\n\r\n                                    <View style={stylesViewGame.StatRow}>\r\n                                        <View style={stylesViewGame.StatColumn}>\r\n                                            <Text style={stylesViewGame.StatTextWhite}> Goals: {this.state.totalTeamGoals}</Text>\r\n                                            <Text style={stylesViewGame.StatTextWhite}> Shots: {this.state.totalTeamShots}</Text>\r\n                                            <Text style={stylesViewGame.StatTextWhite}> Shots on target: {this.state.totalTeamShotsOnTarget}</Text>\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                    <TouchableOpacity style={stylesViewGame.button} onPress = {this.TeamSpecificStat}>\r\n                                        <Text style={stylesViewGame.buttonTitle}>Review a specific stat from {this.state.TeamName} </Text>\r\n                                    </TouchableOpacity>\r\n\r\n                                    <View style={stylesViewGame.headerContainer}>\r\n                                        <Text style={stylesViewGame.StatTextWhite}>{this.state.OpponentsName} records</Text>\r\n                                    </View>\r\n\r\n                                    <View style={stylesViewGame.StatRow}>\r\n                                        <View style={stylesViewGame.StatColumn}>\r\n                                            <Text style={stylesViewGame.StatTextWhite}> Goals: {this.state.totalOpponentsTeamGoals}</Text>\r\n                                            <Text style={stylesViewGame.StatTextWhite}> Shots: {this.state.totalOpponentsTeamShots}</Text>\r\n                                            <Text style={stylesViewGame.StatTextWhite}> Shots on target: {this.state.totalOpponentsTeamShotsOnTarget}</Text>\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                    <TouchableOpacity style={stylesViewGame.button} onPress = {this.OpponentsSpecificStat}>\r\n                                        <Text style={stylesViewGame.buttonTitle}>Review a specific stat from {this.state.OpponentsName} records</Text>\r\n                                    </TouchableOpacity>\r\n\r\n                                    <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToMainMenu}>\r\n                                        <Text style={stylesViewGame.buttonTitle}>Back to Main Menu</Text>\r\n                                    </TouchableOpacity>\r\n\r\n\r\n                                </View>\r\n                            );  \r\n                        }\r\n\r\n                    }\r\n\r\n\r\n                    if(SelectAnEvent_ReviewGameStats_YourTeam)\r\n                    {\r\n\r\n                        if(SportType == 'GAA')\r\n                        {\r\n\r\n                            ReviewPlayerStats = (\r\n                                \r\n                                \r\n                        <ScrollView style={{backgroundColor:'#ffffff'}}>\r\n            \r\n                                        <Text style={stylesViewGame.buttonTitle}>Select a stat below</Text>\r\n            \r\n                                        <Picker\r\n                                            selectedValue={this.state.YourTeamEventSelection}\r\n                                         \r\n                                            onValueChange={(text) => this.setState({YourTeamEventSelection:text})}\r\n                                        >\r\n                                            \r\n                                            <Picker.Item label=\"Select a event\" value=\"\" />\r\n                                            <Picker.Item label=\"Goal\" value=\"Goal\" />\r\n                                            <Picker.Item label=\"Point\" value=\"Point\"/>\r\n                                            <Picker.Item label=\"Pass\" value=\"Pass\"/>\r\n                        \r\n                        \r\n                                        </Picker>\r\n            \r\n                                        <TouchableOpacity style={stylesViewGame.button} onPress = {this.ExecuteYourTeamEventAnaylsis}>\r\n                                            <Text style={stylesViewGame.buttonTitle}>Review this teams games stats</Text>\r\n                                        </TouchableOpacity>   \r\n\r\n                                        <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToMainMenu}>\r\n                                            <Text style={stylesViewGame.buttonTitle}>Back to Main Menu</Text>\r\n                                        </TouchableOpacity>\r\n\r\n            \r\n                                </ScrollView>\r\n                            );\r\n\r\n                        }\r\n                    \r\n                        else if(SportType == 'Soccer')\r\n                        {\r\n                            ReviewPlayerStats = (\r\n                                \r\n                                \r\n                        <ScrollView style={{backgroundColor:'#ffffff'}}>\r\n            \r\n                                        <Text style={stylesViewGame.buttonTitle}>Select a stat below</Text>\r\n            \r\n                                        <Picker\r\n                                            selectedValue={this.state.YourTeamEventSelection}\r\n                                        \r\n                                            onValueChange={(text) => this.setState({YourTeamEventSelection:text})}\r\n                                        >\r\n                                            \r\n                                            <Picker.Item label=\"Select a event\" value=\"\" />\r\n                                            <Picker.Item label=\"Goal\" value=\"Goal\" />\r\n                                            <Picker.Item label=\"Pass\" value=\"Pass\"/>\r\n                        \r\n                        \r\n                                        </Picker>\r\n            \r\n                                        <TouchableOpacity style={stylesViewGame.button} onPress = {this.ExecuteYourTeamEventAnaylsis}>\r\n                                            <Text style={stylesViewGame.buttonTitle}>Review this teams games stats</Text>\r\n                                        </TouchableOpacity>   \r\n\r\n                                        <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToMainMenu}>\r\n                                            <Text style={stylesViewGame.buttonTitle}>Back to Main Menu</Text>\r\n                                        </TouchableOpacity>\r\n\r\n            \r\n                                </ScrollView>\r\n                            );\r\n                        }\r\n                    }\r\n\r\n                    if(SelectAnEvent_ReviewGameStats_Opponents)\r\n                    {\r\n\r\n                        if(SportType == 'GAA')\r\n                        {\r\n\r\n                            ReviewPlayerStats = (\r\n\r\n                                \r\n                        <ScrollView style={stylesViewGame.container}>\r\n                                    <Text style={stylesViewGame.buttonTitle}>Select a stat below</Text>\r\n                \r\n                                        <Picker\r\n                                            selectedValue={this.state.OpponentsEventSelection}\r\n                                         \r\n                                            onValueChange={(text) => this.setState({OpponentsEventSelection:text})}\r\n                                        >\r\n                                                        \r\n                                            <Picker.Item label=\"Select a event\" value=\"\" />\r\n                                            <Picker.Item label=\"Goal\" value=\"Goal\" />\r\n                                            <Picker.Item label=\"Point\" value=\"Point\"/>\r\n                                            <Picker.Item label=\"Pass\" value=\"Pass\"/>\r\n                                    \r\n                                    \r\n                                            </Picker>\r\n                \r\n                                            <TouchableOpacity style={stylesViewGame.button} onPress = {this.ExecuteOpponentsPlayerEventAnaylsis}>\r\n                                                <Text style={stylesViewGame.buttonTitle}>Submit</Text>\r\n                                            </TouchableOpacity>   \r\n\r\n                                            <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToMainMenu}>\r\n                                                <Text style={stylesViewGame.buttonTitle}>Back to Main Menu</Text>\r\n                                            </TouchableOpacity>\r\n\r\n                \r\n                                </ScrollView>\r\n                            );\r\n                        }\r\n                        else if(SportType == 'Soccer')\r\n                        {\r\n\r\n                            ReviewPlayerStats = (\r\n\r\n                                \r\n                        <ScrollView style={stylesViewGame.container}>\r\n                                    <Text style={stylesViewGame.buttonTitle}>Select a stat</Text>\r\n                \r\n                                        <Picker\r\n                                            selectedValue={this.state.OpponentsEventSelection}\r\n                                         \r\n                                            onValueChange={(text) => this.setState({OpponentsEventSelection:text})}\r\n                                        >\r\n                                                        \r\n                                            <Picker.Item label=\"Select a event\" value=\"\" />\r\n                                            <Picker.Item label=\"Goal\" value=\"Goal\" />\r\n                                            <Picker.Item label=\"Pass\" value=\"Pass\"/>\r\n                                    \r\n                                    \r\n                                            </Picker>\r\n                \r\n                                            <TouchableOpacity style={stylesViewGame.button} onPress = {this.ExecuteOpponentsPlayerEventAnaylsis}>\r\n                                                <Text style={stylesViewGame.buttonTitle}>Submit</Text>\r\n                                            </TouchableOpacity>   \r\n\r\n                                            <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToMainMenu}>\r\n                                                <Text style={stylesViewGame.buttonTitle}>Back to Main Menu</Text>\r\n                                            </TouchableOpacity>\r\n\r\n                \r\n                                </ScrollView>\r\n                            );\r\n                        }\r\n                    }\r\n\r\n\r\n                // YOUR_TEAM SPECIFIC PLAYER  \r\n                \r\n                 if(SelectAnEvent_ReviewGameStats_YourTeamPlayer == true)\r\n                 {\r\n                     if(SportType == 'GAA')\r\n                     {\r\n\r\n                        ReviewPlayerStats = (\r\n\r\n                            \r\n                        <ScrollView style={{backgroundColor:'#ffffff'}}>\r\n\r\n                                <Text style={stylesViewGame.buttonTitle}>Select a player </Text>\r\n\r\n                                <Picker\r\n                                    selectedValue={this.state.selectedTeamPlayer}\r\n                                 \r\n                                    onValueChange={(text) => this.setState({selectedTeamPlayer:text})}\r\n                                >\r\n\r\n                                <Picker.Item label=\"Select a Player\" value=\"\" />\r\n                                    {this.state.PlayerData.map((item, index) => {\r\n                                        return (\r\n\r\n                                                <Picker.Item label={item.PlayerName} value={item.PlayerID}/>\r\n                                            \r\n                                                )\r\n\r\n                                    })} \r\n\r\n                                </Picker> \r\n\r\n                                <Text style={stylesViewGame.buttonTitle}>Select a stat (*Optional*)</Text>\r\n\r\n                                <Picker\r\n                                    selectedValue={this.state.YourTeamEventSelection}\r\n                                 \r\n                                    onValueChange={(text) => this.setState({YourTeamEventSelection:text})}\r\n                                    >\r\n                                                    \r\n                                        <Picker.Item label=\"Select a event\" value=\"\" />\r\n                                        <Picker.Item label=\"Goal\" value=\"Goal\" />\r\n                                        <Picker.Item label=\"Point\" value=\"Point\" />\r\n                                        <Picker.Item label=\"Pass\" value=\"Pass\"/>\r\n\r\n\r\n                                </Picker>  \r\n\r\n\r\n                                <TouchableOpacity style={stylesViewGame.button} onPress = {this.ReviewPlayerStats}>\r\n                                    <Text style={stylesViewGame.buttonTitle}>Review this players games stats</Text>\r\n                                </TouchableOpacity> \r\n\r\n                                \r\n                                <TouchableOpacity style={stylesViewGame.button} onPress = {this.GetSpecificPlayerEventLocations}>\r\n                                    <Text style={stylesViewGame.buttonTitle}>Review this players event locations</Text>\r\n                                </TouchableOpacity> \r\n\r\n                                <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToMainMenu}>\r\n                                        <Text style={stylesViewGame.buttonTitle}>Back to Main Menu</Text>\r\n                                </TouchableOpacity>\r\n\r\n\r\n\r\n\r\n                                \r\n                            </ScrollView>\r\n\r\n                        );\r\n\r\n\r\n                    }\r\n                    else if(SportType == 'Soccer')\r\n                    {\r\n                        ReviewPlayerStats = (\r\n\r\n                            \r\n                        <ScrollView style={{backgroundColor:'#ffffff'}}>\r\n\r\n                                <Text style={stylesViewGame.buttonTitle}>Select a player</Text>\r\n\r\n                                <Picker\r\n                                    selectedValue={this.state.selectedTeamPlayer}\r\n                                 \r\n                                    onValueChange={(text) => this.setState({selectedTeamPlayer:text})}\r\n                                >\r\n\r\n                                <Picker.Item label=\"Select a Player\" value=\"\" />\r\n                                    {this.state.PlayerData.map((item, index) => {\r\n                                        return (\r\n\r\n                                                <Picker.Item label={item.PlayerName} value={item.PlayerID}/>\r\n                                            \r\n                                                )\r\n\r\n                                    })} \r\n\r\n                                </Picker> \r\n\r\n                                <Text style={stylesViewGame.buttonTitle}>Select a stat (*Optional*)</Text>\r\n\r\n                                <Picker\r\n                                    selectedValue={this.state.YourTeamEventSelection}\r\n                                 \r\n                                    onValueChange={(text) => this.setState({YourTeamEventSelection:text})}\r\n                                    >\r\n                                                    \r\n                                        <Picker.Item label=\"Select a event\" value=\"\" />\r\n                                        <Picker.Item label=\"Goal\" value=\"Goal\" /> \r\n                                        <Picker.Item label=\"Pass\" value=\"Pass\"/>\r\n\r\n\r\n                                </Picker>  \r\n\r\n                                <TouchableOpacity style={stylesViewGame.button} onPress = {this.ReviewPlayerStats}>\r\n                                    <Text style={stylesViewGame.buttonTitle}>Review this players games stats</Text>\r\n                                </TouchableOpacity> \r\n\r\n                                \r\n                                <TouchableOpacity style={stylesViewGame.button} onPress = {this.GetSpecificPlayerEventLocations}>\r\n                                    <Text style={stylesViewGame.buttonTitle}>Review this players event locations</Text>\r\n                                </TouchableOpacity> \r\n\r\n                                <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToMainMenu}>\r\n                                        <Text style={stylesViewGame.buttonTitle}>Back to Main Menu</Text>\r\n                                </TouchableOpacity>\r\n\r\n\r\n                                \r\n                            </ScrollView>\r\n\r\n                        );\r\n\r\n                      \r\n\r\n                    }\r\n\r\n                    \r\n                 }\r\n\r\n                 if(SelectAnEvent_ReviewGameStats_Opponents_TeamPlayer == true)\r\n                 {\r\n\r\n                        if(SportType == 'GAA')\r\n                        {\r\n\r\n                            ReviewPlayerStats = (\r\n                                \r\n                                \r\n                        <ScrollView style={{backgroundColor:'#ffffff'}}>\r\n\r\n                                    <Text style={stylesViewGame.buttonTitle}>Select a player</Text>\r\n\r\n                                    <Picker\r\n                                        selectedValue={this.state.selectedOpponentsPlayer}\r\n                                     \r\n                                        onValueChange={(text) => this.setState({selectedOpponentsPlayer:text})}\r\n                                    >\r\n\r\n                                    <Picker.Item label=\"Select a Player\" value=\"\" />\r\n                                        {this.state.OpponentsPlayerData.map((item, index) => {\r\n                                            return (\r\n\r\n                                                    <Picker.Item label={item.PlayerName} value={item.PlayerID}/>\r\n                                                \r\n                                                    )\r\n\r\n                                        })} \r\n\r\n                                    </Picker> \r\n\r\n                                    <Text style={stylesViewGame.buttonTitle}>Select a stat (*Optional*)</Text>\r\n\r\n                                    <Picker\r\n                                        selectedValue={this.state.OpponentsEventSelection}\r\n                                     \r\n                                        onValueChange={(text) => this.setState({OpponentsEventSelection:text})}\r\n                                        >\r\n                                                        \r\n                                            <Picker.Item label=\"Select a event\" value=\"\" />\r\n                                            <Picker.Item label=\"Goal\" value=\"Goal\" /> \r\n                                            <Picker.Item label=\"Point\" value=\"Point\" /> \r\n                                            <Picker.Item label=\"Pass\" value=\"Pass\"/>\r\n\r\n\r\n                                    </Picker>  \r\n\r\n                                    <TouchableOpacity style={stylesViewGame.button} onPress = {this.ReviewOpponentsPlayerStats}>\r\n                                        <Text style={stylesViewGame.buttonTitle}>Review this players games stats</Text>\r\n                                    </TouchableOpacity> \r\n\r\n                                    \r\n                                    <TouchableOpacity style={stylesViewGame.button} onPress = {this.GetSpecificOpponentsPlayerEventLocations}>\r\n                                        <Text style={stylesViewGame.buttonTitle}>Review this players event locations</Text>\r\n                                    </TouchableOpacity> \r\n\r\n                                    <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToMainMenu}>\r\n                                            <Text style={stylesViewGame.buttonTitle}>Back to Main Menu</Text>\r\n                                    </TouchableOpacity>\r\n\r\n\r\n                                    \r\n                                </ScrollView>\r\n\r\n                            );\r\n\r\n                       \r\n\r\n                        }\r\n   \r\n                    \r\n                    \r\n                    if(SportType =='Soccer')\r\n                    {\r\n\r\n                        ReviewPlayerStats = (\r\n                            \r\n                            \r\n                        <ScrollView style={{backgroundColor:'#ffffff'}}>\r\n\r\n                                <Text style={stylesViewGame.buttonTitle}>Select a player</Text>\r\n\r\n                                <Picker\r\n                                    selectedValue={this.state.selectedOpponentsPlayer}\r\n                                 \r\n                                    onValueChange={(text) => this.setState({selectedOpponentsPlayer:text})}\r\n                                >\r\n\r\n                                <Picker.Item label=\"Select a Player\" value=\"\" />\r\n                                    {this.state.OpponentsPlayerData.map((item, index) => {\r\n                                        return (\r\n\r\n                                                <Picker.Item label={item.PlayerName} value={item.PlayerID}/>\r\n                                            \r\n                                                )\r\n\r\n                                    })} \r\n\r\n                                </Picker> \r\n\r\n                                <Text style={stylesViewGame.buttonTitle}>Select a stat (*Optional*)</Text>\r\n\r\n                                <Picker\r\n                                    selectedValue={this.state.OpponentsEventSelection}\r\n                                 \r\n                                    onValueChange={(text) => this.setState({OpponentsEventSelection:text})}\r\n                                    >\r\n                                                    \r\n                                        <Picker.Item label=\"Select a event\" value=\"\" />\r\n                                        <Picker.Item label=\"Goal\" value=\"Goal\" /> \r\n                                        <Picker.Item label=\"Pass\" value=\"Pass\"/>\r\n\r\n\r\n                                </Picker>  \r\n\r\n                                <TouchableOpacity style={stylesViewGame.button} onPress = {this.ReviewOpponentsPlayerStats}>\r\n                                    <Text style={stylesViewGame.buttonTitle}>Review this players games stats</Text>\r\n                                </TouchableOpacity> \r\n\r\n                                \r\n                                <TouchableOpacity style={stylesViewGame.button} onPress = {this.GetSpecificOpponentsPlayerEventLocations}>\r\n                                    <Text style={stylesViewGame.buttonTitle}>Review this players event locations</Text>\r\n                                </TouchableOpacity> \r\n\r\n                                <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToMainMenu}>\r\n                                        <Text style={stylesViewGame.Text}>Back to Main Menu</Text>\r\n                                </TouchableOpacity>\r\n\r\n\r\n\r\n                                \r\n                            </ScrollView>\r\n\r\n                        );\r\n\r\n                      \r\n   \r\n                    }\r\n\r\n                }\r\n                 \r\n\r\n\r\n\r\n                if(displaySelectedPlayerStats == true)\r\n                {\r\n                    if(SportType == 'GAA')\r\n                    {\r\n                        ReviewGameStats= (\r\n                            \r\n                        <ScrollView style={{backgroundColor:'#ffffff'}}>\r\n\r\n                                <View>\r\n                                    <View style={stylesViewGame.headerContainer}>\r\n                                        <Text style={stylesViewGame.StatTextWhite}>{PlayerName}</Text>\r\n                                    </View>\r\n\r\n                                    <View style={stylesViewGame.StatRow}>\r\n                                        <View style={stylesViewGame.StatColumn}>\r\n                                            <Text style={stylesViewGame.StatTextWhite}> Goals: {Goals}</Text>\r\n                                            <Text style={stylesViewGame.StatTextWhite}> Points: {Points}</Text>\r\n                                            <Text style={stylesViewGame.StatTextWhite}> Shots: {Shots}</Text>\r\n                                            <Text style={stylesViewGame.StatTextWhite}> Shots on target: {ShotsOnTarget}</Text>\r\n                                            <Text style={stylesViewGame.StatTextWhite}> Passes: {Passes}</Text>\r\n                                        </View>\r\n\r\n                                        <View style={stylesViewGame.StatColumn}>\r\n                                            <Text style={stylesViewGame.StatTextWhite}> EventType: {Goals}</Text>\r\n                                            <Text style={stylesViewGame.StatTextWhite}> EventType: {Goals}</Text>\r\n                                            <Text style={stylesViewGame.StatTextWhite}> EventType: {Goals}</Text>\r\n                                            <Text style={stylesViewGame.StatTextWhite}> EventType: {Goals}</Text>\r\n                                            <Text style={stylesViewGame.StatTextWhite}> EventType: {Goals}</Text>\r\n                                        </View>\r\n\r\n                                        <View style={stylesViewGame.StatColumn}>\r\n                                            <Text style={stylesViewGame.StatTextWhite}> EventType: {Goals}</Text>\r\n                                            <Text style={stylesViewGame.StatTextWhite}> EventType: {Goals}</Text>\r\n                                            <Text style={stylesViewGame.StatTextWhite}> EventType: {Goals}</Text>\r\n                                            <Text style={stylesViewGame.StatTextWhite}> EventType: {Goals}</Text>\r\n                                            <Text style={stylesViewGame.StatTextWhite}> EventType: {Goals}</Text>\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                    <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToMainMenu}>\r\n                                        <Text style={stylesViewGame.StatTextWhite}> Back to Main Menu</Text>\r\n                                    </TouchableOpacity>\r\n\r\n                                    \r\n                                    <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToViewGameMenu}>\r\n                                        <Text style={stylesViewGame.StatTextWhite}>Back to View Game Menu</Text>\r\n                                    </TouchableOpacity>\r\n                                </View>\r\n\r\n                            </ScrollView>\r\n                        );\r\n                    }\r\n                    \r\n                    if(SportType == 'Soccer')\r\n                    {\r\n                        ReviewGameStats = (\r\n\r\n                            \r\n                        <ScrollView style={{backgroundColor:'#ffffff'}}>\r\n\r\n                                        <View>\r\n                                            <View style={stylesViewGame.headerContainer}>\r\n                                                <Text style={stylesViewGame.StatTextWhite}>{PlayerName}</Text>\r\n                                            </View>\r\n\r\n                                            <View style={stylesViewGame.StatRow}>\r\n                                                <View style={stylesViewGame.StatColumn}>\r\n                                                    <Text style={stylesViewGame.StatTextWhite}> Goals: {Goals}</Text>\r\n                                                    <Text style={stylesViewGame.StatTextWhite}> Shots: {Shots}</Text>\r\n                                                    <Text style={stylesViewGame.StatTextWhite}> Shots on target: {ShotsOnTarget}</Text>\r\n                                                    <Text style={stylesViewGame.StatTextWhite}> Passes: {Passes}</Text>\r\n                                                </View>\r\n\r\n                                                <View style={stylesViewGame.StatColumn}>\r\n                                                    <Text style={stylesViewGame.StatTextWhite}> EventType: {Goals}</Text>\r\n                                                    <Text style={stylesViewGame.StatTextWhite}> EventType: {Goals}</Text>\r\n                                                    <Text style={stylesViewGame.StatTextWhite}> EventType: {Goals}</Text>\r\n                                                    <Text style={stylesViewGame.StatTextWhite}> EventType: {Goals}</Text>\r\n                                                    <Text style={stylesViewGame.StatTextWhite}> EventType: {Goals}</Text>\r\n                                                </View>\r\n                                            </View>\r\n\r\n                                            <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToMainMenu}>\r\n                                                <Text style={stylesViewGame.StatTextWhite}>Back to Main Menu</Text>\r\n                                            </TouchableOpacity>\r\n\r\n                                            <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToViewGameMenu}>\r\n                                                <Text style={stylesViewGame.StatTextWhite}>Back to View Game Menu</Text>\r\n                                            </TouchableOpacity>\r\n                                        </View>\r\n\r\n                            </ScrollView>\r\n                        );\r\n                    }\r\n\r\n\r\n\r\n                }\r\n\r\n                if(displayOpponentsSelectedPlayerStats == true)\r\n                {\r\n                    if(SportType == 'GAA')\r\n                    {\r\n                        ReviewGameStats= (\r\n                            \r\n                        <ScrollView style={{backgroundColor:'#ffffff'}}>\r\n\r\n                                <View>\r\n                                    <View style={stylesViewGame.headerContainer}>\r\n                                        <Text style={stylesViewGame.StatTextWhite}>{PlayerName}</Text>\r\n                                    </View>\r\n\r\n                                    <View style={stylesViewGame.StatRow}>\r\n                                        <View style={stylesViewGame.StatColumn}>\r\n                                            <Text style={stylesViewGame.StatTextWhite}> Goals: {Goals}</Text>\r\n                                            <Text style={stylesViewGame.StatTextWhite}> Points: {Points}</Text>\r\n                                            <Text style={stylesViewGame.StatTextWhite}> Shots: {Shots}</Text>\r\n                                            <Text style={stylesViewGame.StatTextWhite}> Shots on target: {ShotsOnTarget}</Text>\r\n                                            <Text style={stylesViewGame.StatTextWhite}> Passes: {Passes}</Text>\r\n                                        </View>\r\n\r\n                                        <View style={stylesViewGame.StatColumn}>\r\n                                            <Text style={stylesViewGame.StatTextWhite}> EventType: {Goals}</Text>\r\n                                            <Text style={stylesViewGame.StatTextWhite}> EventType: {Goals}</Text>\r\n                                            <Text style={stylesViewGame.StatTextWhite}> EventType: {Goals}</Text>\r\n                                            <Text style={stylesViewGame.StatTextWhite}> EventType: {Goals}</Text>\r\n                                            <Text style={stylesViewGame.StatTextWhite}> EventType: {Goals}</Text>\r\n                                        </View>\r\n                                    </View>\r\n\r\n                                    <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToMainMenu}>\r\n                                        <Text style={stylesViewGame.StatTextWhite}>Back to Main Menu</Text>\r\n                                    </TouchableOpacity>\r\n                                    \r\n                                    <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToViewGameMenu}>\r\n                                        <Text style={stylesViewGame.StatTextWhite}>Back to View Game Menu</Text>\r\n                                    </TouchableOpacity>\r\n\r\n                                </View>\r\n\r\n                            </ScrollView>\r\n                        );\r\n                    }\r\n                    \r\n                    if(SportType == 'Soccer')\r\n                    {\r\n                        ReviewGameStats = (\r\n\r\n                            \r\n                        <ScrollView style={{backgroundColor:'#ffffff'}}>\r\n\r\n                                        <View>\r\n                                            <View style={stylesViewGame.headerContainer}>\r\n                                                <Text style={stylesViewGame.StatTextWhite}>{PlayerName}</Text>\r\n                                            </View>\r\n                                            \r\n                                            <View style={stylesViewGame.StatRow}>\r\n                                                <View style={stylesViewGame.StatColumn}>\r\n                                                    <Text style={stylesViewGame.StatTextWhite}> Goals: {Goals}</Text>\r\n                                                    <Text style={stylesViewGame.StatTextWhite}> Shots: {Shots}</Text>\r\n                                                    <Text style={stylesViewGame.StatTextWhite}> Shots on target: {ShotsOnTarget}</Text>\r\n                                                    <Text style={stylesViewGame.StatTextWhite}> Passes: {Passes}</Text>\r\n                                                </View>\r\n\r\n                                                <View style={stylesViewGame.StatColumn}>\r\n                                                    <Text style={stylesViewGame.StatTextWhite}> EventType: {Goals}</Text>\r\n                                                    <Text style={stylesViewGame.StatTextWhite}> EventType: {Goals}</Text>\r\n                                                    <Text style={stylesViewGame.StatTextWhite}> EventType: {Goals}</Text>\r\n                                                    <Text style={stylesViewGame.StatTextWhite}> EventType: {Goals}</Text>\r\n                                                    <Text style={stylesViewGame.StatTextWhite}> EventType: {Goals}</Text>\r\n                                                </View>\r\n\r\n                                            </View>\r\n\r\n                                            <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToMainMenu}>\r\n                                                <Text style={stylesViewGame.StatTextWhite}>Back to Main Menu</Text>\r\n                                            </TouchableOpacity>\r\n\r\n                                            <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToViewGameMenu}>\r\n                                                <Text style={stylesViewGame.StatTextWhite}>Back to View Game Menu</Text>\r\n                                            </TouchableOpacity>\r\n\r\n                                        </View>\r\n\r\n                            </ScrollView>\r\n                        );\r\n                    }\r\n\r\n\r\n\r\n                }\r\n               \r\n               \r\n\r\n\r\n                if(YourTeamSpecificStatFieldEvents == true)\r\n                {\r\n\r\n\r\n                   //Condition to check if the Device is smaller than the image so for mobile view we check the StatsStoredUsingScreenWidth  \r\n                        //if screenwidth < StatsStoredUsingScreenWidth || screenHeight < StatsStoredUsingScreenHeight\r\n                            //Then alert the user that this maybe be inaccurate . please try a larger device screen size e.g web version\r\n                                //ScrollView possibly for mobile\r\n\r\n                                if(SportType == 'GAA')\r\n                                {\r\n            \r\n                                    if(screenWidth != this.state.StatsStoredUsingScreenWidth && screenHeight != this.state.StatsStoredUsingScreenHeight)\r\n                                    {\r\n                                        \r\n                                            if(screenWidth < 600 || screenHeight < 376)\r\n                                            {\r\n                                                alert('Warning - This device is too small to display the full image. Please scroll across the image to navigate or use a larger device screen size.');\r\n            \r\n                                                FieldWithPlots = (\r\n                                               \r\n                                                    <ScrollView>\r\n                                                    \r\n                                                    <ScrollView horizontal={true} style={stylesViewGame.imagePlotContainer}>\r\n                                                    \r\n                                                        <View style={stylesViewGame.EventContainer}>\r\n                                                            <Text style={stylesViewGame.buttonTitle}> Event Type: {YourTeamEventSelection}</Text>\r\n                                                        </View>\r\n\r\n                                                        <View style={stylesViewGame.ColumnContainer}>\r\n                                                            <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToMainMenu}>\r\n                                                                <Text style={stylesViewGame.buttonTitle}>Back to Main Menu</Text>\r\n                                                            </TouchableOpacity>\r\n                                                        </View>\r\n                            \r\n                                                        <View style={stylesViewGame.ColumnContainer}>\r\n                                                            <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToViewGameMenu}>\r\n                                                                <Text style={stylesViewGame.buttonTitle}>Back to View Game Menu</Text>\r\n                                                            </TouchableOpacity>\r\n                                                        </View>\r\n\r\n                                                    </ScrollView>\r\n\r\n                                                    <ScrollView horizontal={true} style={stylesViewGame.imagePlotContainer}>\r\n            \r\n                                                    <ScrollView>\r\n                                                                \r\n                                                                <Image style ={stylesViewGame.imagePxGAA}                        \r\n                                                                source={require('./GAApitch1.png')}/>\r\n                                                                {this.state.EventFieldLocations.map((data) => {\r\n                                                                    return (\r\n                                                                    <View \r\n                                                                        style={{\r\n                                                                        position: 'absolute',\r\n                                                                        left: data.x,\r\n                                                                        top: data.y,\r\n                                                                        backgroundColor:'#242424',\r\n                                                                        width: 10,\r\n                                                                        height: 10,\r\n                                                                        borderWidth:2,\r\n                                                                        borderColor:'#C30000',\r\n                                                                        borderRadius: 50\r\n                                                                        }}>\r\n                                                                    </View> \r\n                                                            \r\n                                                                )\r\n                                                            })} \r\n                                \r\n                                                        </ScrollView>\r\n                                                    </ScrollView>\r\n\r\n                                                </ScrollView>\r\n                            \r\n                        \r\n                        \r\n                                                );\r\n            \r\n            \r\n            \r\n                                            } \r\n                                            else \r\n                                            {\r\n                                      \r\n                                                FieldWithPlots = (\r\n            \r\n                                                    <ScrollView>\r\n                                                    \r\n                                                    <ScrollView horizontal={true} style={stylesViewGame.imagePlotContainer}>\r\n                                                    \r\n                                                        <View style={stylesViewGame.EventContainer}>\r\n                                                            <Text style={stylesViewGame.buttonTitle}> Event Type: {YourTeamEventSelection}</Text>\r\n                                                        </View>\r\n\r\n                                                        <View style={stylesViewGame.ColumnContainer}>\r\n                                                            <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToMainMenu}>\r\n                                                                <Text style={stylesViewGame.buttonTitle}>Back to Main Menu</Text>\r\n                                                            </TouchableOpacity>\r\n                                                        </View>\r\n                            \r\n                                                        <View style={stylesViewGame.ColumnContainer}>\r\n                                                            <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToViewGameMenu}>\r\n                                                                <Text style={stylesViewGame.buttonTitle}>Back to View Game Menu</Text>\r\n                                                            </TouchableOpacity>\r\n                                                        </View>\r\n\r\n                                                    </ScrollView>\r\n\r\n                                                    <ScrollView horizontal={true} style={stylesViewGame.imagePlotContainer}>\r\n            \r\n                                                    <ScrollView>\r\n                                                                \r\n                                                                <Image style ={stylesViewGame.imagePxGAA}                        \r\n                                                                source={require('./GAApitch1.png')}/>\r\n                                                                {this.state.EventFieldLocations.map((data) => {\r\n                                                                    return (\r\n                                                                    <View \r\n                                                                        style={{\r\n                                                                        position: 'absolute',\r\n                                                                        left: data.x,\r\n                                                                        top: data.y,\r\n                                                                        backgroundColor:'#242424',\r\n                                                                        width: 10,\r\n                                                                        height: 10,\r\n                                                                        borderWidth:2,\r\n                                                                        borderColor:'#C30000',\r\n                                                                        borderRadius: 50\r\n                                                                        }}>\r\n                                                                    </View> \r\n                                                            \r\n                                                                )\r\n                                                            })} \r\n                                \r\n                                                        </ScrollView>\r\n                                                    </ScrollView>\r\n\r\n                                                </ScrollView>\r\n                                            \r\n                                                );\r\n            \r\n                                            }\r\n                                   \r\n            \r\n                        \r\n            \r\n            \r\n                                    }   \r\n            \r\n                                    else\r\n                                    {\r\n            \r\n            \r\n            \r\n                                        if(screenWidth < 600 || screenHeight < 376)\r\n                                        {\r\n                \r\n                                            alert('Warning - This device is too small to display the full image. Please scroll across the image to navigate or use a larger device screen size.');\r\n                                            \r\n                                            FieldWithPlots = (\r\n            \r\n                                \r\n                                    \r\n                                                <ScrollView>\r\n                                                    \r\n                                                    <ScrollView horizontal={true} style={stylesViewGame.imagePlotContainer}>\r\n                                                    \r\n                                                        <View style={stylesViewGame.EventContainer}>\r\n                                                            <Text style={stylesViewGame.buttonTitle}> Event Type: {YourTeamEventSelection}</Text>\r\n                                                        </View>\r\n\r\n                                                        <View style={stylesViewGame.ColumnContainer}>\r\n                                                            <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToMainMenu}>\r\n                                                                <Text style={stylesViewGame.buttonTitle}>Back to Main Menu</Text>\r\n                                                            </TouchableOpacity>\r\n                                                        </View>\r\n                            \r\n                                                        <View style={stylesViewGame.ColumnContainer}>\r\n                                                            <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToViewGameMenu}>\r\n                                                                <Text style={stylesViewGame.buttonTitle}>Back to View Game Menu</Text>\r\n                                                            </TouchableOpacity>\r\n                                                        </View>\r\n\r\n                                                    </ScrollView>\r\n\r\n                                                    <ScrollView horizontal={true} style={stylesViewGame.imagePlotContainer}>\r\n            \r\n                                                    <ScrollView>\r\n                                                                \r\n                                                                <Image style ={stylesViewGame.imagePxGAA}                        \r\n                                                                source={require('./GAApitch1.png')}/>\r\n                                                                {this.state.EventFieldLocations.map((data) => {\r\n                                                                    return (\r\n                                                                    <View \r\n                                                                        style={{\r\n                                                                        position: 'absolute',\r\n                                                                        left: data.x,\r\n                                                                        top: data.y,\r\n                                                                        backgroundColor:'#242424',\r\n                                                                        width: 10,\r\n                                                                        height: 10,\r\n                                                                        borderWidth:2,\r\n                                                                        borderColor:'#C30000',\r\n                                                                        borderRadius: 50\r\n                                                                        }}>\r\n                                                                    </View> \r\n                                                            \r\n                                                                )\r\n                                                            })} \r\n                                \r\n                                                        </ScrollView>\r\n                                                    </ScrollView>\r\n\r\n                                                </ScrollView>\r\n                            \r\n                                            );\r\n                                        }\r\n            \r\n                                        FieldWithPlots = (\r\n            \r\n                                \r\n                                    \r\n                                           <ScrollView>\r\n                                                    \r\n                                                    <ScrollView horizontal={true} style={stylesViewGame.imagePlotContainer}>\r\n                                                    \r\n                                                        <View style={stylesViewGame.EventContainer}>\r\n                                                            <Text style={stylesViewGame.buttonTitle}> Event Type: {YourTeamEventSelection}</Text>\r\n                                                        </View>\r\n\r\n                                                        <View style={stylesViewGame.ColumnContainer}>\r\n                                                            <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToMainMenu}>\r\n                                                                <Text style={stylesViewGame.buttonTitle}>Back to Main Menu</Text>\r\n                                                            </TouchableOpacity>\r\n                                                        </View>\r\n                            \r\n                                                        <View style={stylesViewGame.ColumnContainer}>\r\n                                                            <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToViewGameMenu}>\r\n                                                                <Text style={stylesViewGame.buttonTitle}>Back to View Game Menu</Text>\r\n                                                            </TouchableOpacity>\r\n                                                        </View>\r\n\r\n                                                    </ScrollView>\r\n\r\n                                                    <ScrollView horizontal={true} style={stylesViewGame.imagePlotContainer}>\r\n            \r\n                                                    <ScrollView>\r\n                                                                \r\n                                                                <Image style ={stylesViewGame.imagePxGAA}                        \r\n                                                                source={require('./GAApitch1.png')}/>\r\n                                                                {this.state.EventFieldLocations.map((data) => {\r\n                                                                    return (\r\n                                                                    <View \r\n                                                                        style={{\r\n                                                                        position: 'absolute',\r\n                                                                        left: data.x,\r\n                                                                        top: data.y,\r\n                                                                        backgroundColor:'#242424',\r\n                                                                        width: 10,\r\n                                                                        height: 10,\r\n                                                                        borderWidth:2,\r\n                                                                        borderColor:'#C30000',\r\n                                                                        borderRadius: 50\r\n                                                                        }}>\r\n                                                                    </View> \r\n                                                            \r\n                                                                )\r\n                                                            })} \r\n                                \r\n                                                        </ScrollView>\r\n                                                    </ScrollView>\r\n\r\n                                                </ScrollView>\r\n            \r\n                                        );\r\n            \r\n                                    }   \r\n            \r\n                                }\r\n                                else if(SportType == 'Soccer')\r\n                                {\r\n            \r\n                                        if(screenWidth != this.state.StatsStoredUsingScreenWidth && screenHeight != this.state.StatsStoredUsingScreenHeight)\r\n                                        {\r\n            \r\n                                            if(screenWidth < 600 || screenHeight < 376)\r\n                                            {\r\n                                                alert('Warning - This device is too small to display the full image. Please scroll across the image to navigate or use a larger device screen size.');\r\n            \r\n                                        \r\n                                                FieldWithPlots = (\r\n                                          \r\n                                                    <ScrollView>\r\n                                                    \r\n                                                    <ScrollView horizontal={true} style={stylesViewGame.imagePlotContainer}>\r\n                                                    \r\n                                                        <View style={stylesViewGame.EventContainer}>\r\n                                                            <Text style={stylesViewGame.buttonTitle}> Event Type: {YourTeamEventSelection}</Text>\r\n                                                        </View>\r\n\r\n                                                        <View style={stylesViewGame.ColumnContainer}>\r\n                                                            <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToMainMenu}>\r\n                                                                <Text style={stylesViewGame.buttonTitle}>Back to Main Menu</Text>\r\n                                                            </TouchableOpacity>\r\n                                                        </View>\r\n                            \r\n                                                        <View style={stylesViewGame.ColumnContainer}>\r\n                                                            <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToViewGameMenu}>\r\n                                                                <Text style={stylesViewGame.buttonTitle}>Back to View Game Menu</Text>\r\n                                                            </TouchableOpacity>\r\n                                                        </View>\r\n\r\n                                                    </ScrollView>\r\n\r\n                                                    <ScrollView horizontal={true} style={stylesViewGame.imagePlotContainer}>\r\n            \r\n                                                    <ScrollView>\r\n                                                                \r\n                                                    <Image style ={stylesViewGame.imagePxSoccer}                   \r\n                                                                source={require('./SoccerField.png')}/>\r\n                                                                {this.state.EventFieldLocations.map((data) => {\r\n                                                                    return (\r\n                                                                    <View \r\n                                                                        style={{\r\n                                                                        position: 'absolute',\r\n                                                                        left: data.x,\r\n                                                                        top: data.y,\r\n                                                                        backgroundColor:'#242424',\r\n                                                                        width: 10,\r\n                                                                        height: 10,\r\n                                                                        borderWidth:2,\r\n                                                                        borderColor:'#C30000',\r\n                                                                        borderRadius: 50\r\n                                                                        }}>\r\n                                                                    </View> \r\n                                                            \r\n                                                                )\r\n                                                            })} \r\n                                \r\n                                                        </ScrollView>\r\n                                                    </ScrollView>\r\n\r\n                                                </ScrollView>\r\n                            \r\n\r\n\r\n\r\n\r\n\r\n                                                );\r\n            \r\n                                            }\r\n                                            else\r\n                                            {\r\n            \r\n            \r\n            \r\n                                                FieldWithPlots = (\r\n            \r\n                                                    <ScrollView>\r\n                                                    \r\n                                                    <ScrollView horizontal={true} style={stylesViewGame.imagePlotContainer}>\r\n                                                    \r\n                                                        <View style={stylesViewGame.EventContainer}>\r\n                                                            <Text style={stylesViewGame.buttonTitle}> Event Type: {YourTeamEventSelection}</Text>\r\n                                                        </View>\r\n\r\n                                                        <View style={stylesViewGame.ColumnContainer}>\r\n                                                            <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToMainMenu}>\r\n                                                                <Text style={stylesViewGame.buttonTitle}>Back to Main Menu</Text>\r\n                                                            </TouchableOpacity>\r\n                                                        </View>\r\n                            \r\n                                                        <View style={stylesViewGame.ColumnContainer}>\r\n                                                            <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToViewGameMenu}>\r\n                                                                <Text style={stylesViewGame.buttonTitle}>Back to View Game Menu</Text>\r\n                                                            </TouchableOpacity>\r\n                                                        </View>\r\n\r\n                                                    </ScrollView>\r\n\r\n                                                    <ScrollView horizontal={true} style={stylesViewGame.imagePlotContainer}>\r\n            \r\n                                                    <ScrollView>\r\n                                                                \r\n                                                    <Image style ={stylesViewGame.imagePxSoccer}                   \r\n                                                                source={require('./SoccerField.png')}/>\r\n                                                                {this.state.EventFieldLocations.map((data) => {\r\n                                                                    return (\r\n                                                                    <View \r\n                                                                        style={{\r\n                                                                        position: 'absolute',\r\n                                                                        left: data.x,\r\n                                                                        top: data.y,\r\n                                                                        backgroundColor:'#242424',\r\n                                                                        width: 10,\r\n                                                                        height: 10,\r\n                                                                        borderWidth:2,\r\n                                                                        borderColor:'#C30000',\r\n                                                                        borderRadius: 50\r\n                                                                        }}>\r\n                                                                    </View> \r\n                                                            \r\n                                                                )\r\n                                                            })} \r\n                                \r\n                                                        </ScrollView>\r\n                                                    </ScrollView>\r\n\r\n                                                </ScrollView>\r\n                        \r\n                                                );\r\n                                            }\r\n            \r\n                                    \r\n            \r\n                                        }\r\n                                        else\r\n                                        {\r\n            \r\n                                            if(screenWidth < 600 || screenHeight < 376)\r\n                                            {\r\n                                                alert('Warning - This device is too small to display the full image. Please scroll across the image to navigate or use a larger device screen size.');\r\n            \r\n                                        \r\n                                                FieldWithPlots = (\r\n                                                    <ScrollView>\r\n                                                    \r\n                                                    <ScrollView horizontal={true} style={stylesViewGame.imagePlotContainer}>\r\n                                                    \r\n                                                        <View style={stylesViewGame.EventContainer}>\r\n                                                            <Text style={stylesViewGame.buttonTitle}> Event Type: {YourTeamEventSelection}</Text>\r\n                                                        </View>\r\n\r\n                                                        <View style={stylesViewGame.ColumnContainer}>\r\n                                                            <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToMainMenu}>\r\n                                                                <Text style={stylesViewGame.buttonTitle}>Back to Main Menu</Text>\r\n                                                            </TouchableOpacity>\r\n                                                        </View>\r\n                            \r\n                                                        <View style={stylesViewGame.ColumnContainer}>\r\n                                                            <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToViewGameMenu}>\r\n                                                                <Text style={stylesViewGame.buttonTitle}>Back to View Game Menu</Text>\r\n                                                            </TouchableOpacity>\r\n                                                        </View>\r\n\r\n                                                    </ScrollView>\r\n\r\n                                                    <ScrollView horizontal={true} style={stylesViewGame.imagePlotContainer}>\r\n            \r\n                                                    <ScrollView>\r\n                                                                \r\n                                                    <Image style ={stylesViewGame.imageSoccerMobile}                   \r\n                                                                source={require('./SoccerField.png')}/>\r\n                                                                {this.state.EventFieldLocations.map((data) => {\r\n                                                                    return (\r\n                                                                    <View \r\n                                                                        style={{\r\n                                                                        position: 'absolute',\r\n                                                                        left: data.x,\r\n                                                                        top: data.y,\r\n                                                                        backgroundColor:'#242424',\r\n                                                                        width: 10,\r\n                                                                        height: 10,\r\n                                                                        borderWidth:2,\r\n                                                                        borderColor:'#C30000',\r\n                                                                        borderRadius: 50\r\n                                                                        }}>\r\n                                                                    </View> \r\n                                                            \r\n                                                                )\r\n                                                            })} \r\n                                \r\n                                                        </ScrollView>\r\n                                                    </ScrollView>\r\n\r\n                                                </ScrollView>\r\n                                                );\r\n            \r\n                                            }\r\n            \r\n                                        \r\n                                            FieldWithPlots = (\r\n            \r\n                                \r\n                                                <ScrollView>\r\n                                                    \r\n                                                <ScrollView horizontal={true} style={stylesViewGame.imagePlotContainer}>\r\n                                                \r\n                                                    <View style={stylesViewGame.EventContainer}>\r\n                                                        <Text style={stylesViewGame.buttonTitle}> Event Type: {YourTeamEventSelection}</Text>\r\n                                                    </View>\r\n\r\n                                                    <View style={stylesViewGame.ColumnContainer}>\r\n                                                        <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToMainMenu}>\r\n                                                            <Text style={stylesViewGame.buttonTitle}>Back to Main Menu</Text>\r\n                                                        </TouchableOpacity>\r\n                                                    </View>\r\n                        \r\n                                                    <View style={stylesViewGame.ColumnContainer}>\r\n                                                        <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToViewGameMenu}>\r\n                                                            <Text style={stylesViewGame.buttonTitle}>Back to View Game Menu</Text>\r\n                                                        </TouchableOpacity>\r\n                                                    </View>\r\n\r\n                                                </ScrollView>\r\n\r\n                                                <ScrollView horizontal={true} style={stylesViewGame.imagePlotContainer}>\r\n        \r\n                                                <ScrollView>\r\n                                                            \r\n                                                <Image style ={stylesViewGame.imagePxSoccer}                   \r\n                                                            source={require('./SoccerField.png')}/>\r\n                                                            {this.state.EventFieldLocations.map((data) => {\r\n                                                                return (\r\n                                                                <View \r\n                                                                    style={{\r\n                                                                    position: 'absolute',\r\n                                                                    left: data.x,\r\n                                                                    top: data.y,\r\n                                                                    backgroundColor:'#242424',\r\n                                                                    width: 10,\r\n                                                                    height: 10,\r\n                                                                    borderWidth:2,\r\n                                                                    borderColor:'#C30000',\r\n                                                                    borderRadius: 50\r\n                                                                    }}>\r\n                                                                </View> \r\n                                                        \r\n                                                            )\r\n                                                        })} \r\n                            \r\n                                                    </ScrollView>\r\n                                                </ScrollView>\r\n\r\n                                            </ScrollView>\r\n                                            );\r\n                                        }\r\n            \r\n            \r\n            \r\n                                }\r\n                              \r\n                }\r\n\r\n\r\n\r\n\r\n\r\n                if(OpponentsSpecificStatFieldEvents == true)\r\n                {\r\n                          //Condition to check if the Device is smaller than the image so for mobile view we check the StatsStoredUsingScreenWidth  \r\n                        //if screenwidth < StatsStoredUsingScreenWidth || screenHeight < StatsStoredUsingScreenHeight\r\n                            //Then alert the user that this maybe be inaccurate . please try a larger device screen size e.g web version\r\n                                //ScrollView possibly for mobile\r\n\r\n                                if(SportType == 'GAA')\r\n                                {\r\n            \r\n                                    if(screenWidth != this.state.StatsStoredUsingScreenWidth && screenHeight != this.state.StatsStoredUsingScreenHeight)\r\n                                    {\r\n                                        \r\n                                            if(screenWidth < 600 || screenHeight < 376)\r\n                                            {\r\n                                                alert('Warning - This device is too small to display the full image. Please scroll across the image to navigate or use a larger device screen size.');\r\n            \r\n                                                FieldWithPlots = (\r\n                                               \r\n                                                    <ScrollView>\r\n                                                    \r\n                                                    <ScrollView horizontal={true} style={stylesViewGame.imagePlotContainer}>\r\n                                                    \r\n                                                        <View style={stylesViewGame.EventContainer}>\r\n                                                            <Text style={stylesViewGame.buttonTitle}> Event Type: {YourTeamEventSelection}</Text>\r\n                                                        </View>\r\n\r\n                                                        <View style={stylesViewGame.ColumnContainer}>\r\n                                                            <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToMainMenu}>\r\n                                                                <Text style={stylesViewGame.buttonTitle}>Back to Main Menu</Text>\r\n                                                            </TouchableOpacity>\r\n                                                        </View>\r\n                            \r\n                                                        <View style={stylesViewGame.ColumnContainer}>\r\n                                                            <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToViewGameMenu}>\r\n                                                                <Text style={stylesViewGame.buttonTitle}>Back to View Game Menu</Text>\r\n                                                            </TouchableOpacity>\r\n                                                        </View>\r\n\r\n                                                    </ScrollView>\r\n\r\n                                                    <ScrollView horizontal={true} style={stylesViewGame.imagePlotContainer}>\r\n            \r\n                                                    <ScrollView>\r\n                                                                \r\n                                                                <Image style ={stylesViewGame.imagePxGAA}                        \r\n                                                                source={require('./GAApitch1.png')}/>\r\n                                                                {this.state.OpponentsEventFieldLocations.map((data) => {\r\n                                                                    return (\r\n                                                                    <View \r\n                                                                        style={{\r\n                                                                        position: 'absolute',\r\n                                                                        left: data.x,\r\n                                                                        top: data.y,\r\n                                                                        backgroundColor:'#242424',\r\n                                                                        width: 10,\r\n                                                                        height: 10,\r\n                                                                        borderWidth:2,\r\n                                                                        borderColor:'#C30000',\r\n                                                                        borderRadius: 50\r\n                                                                        }}>\r\n                                                                    </View> \r\n                                                            \r\n                                                                )\r\n                                                            })} \r\n                                \r\n                                                        </ScrollView>\r\n                                                    </ScrollView>\r\n\r\n                                                </ScrollView>\r\n                            \r\n                        \r\n                        \r\n                                                );\r\n            \r\n            \r\n            \r\n                                            } \r\n                                            else \r\n                                            {\r\n                                      \r\n                                                FieldWithPlots = (\r\n            \r\n                                                    <ScrollView>\r\n                                                    \r\n                                                    <ScrollView horizontal={true} style={stylesViewGame.imagePlotContainer}>\r\n                                                    \r\n                                                        <View style={stylesViewGame.EventContainer}>\r\n                                                            <Text style={stylesViewGame.buttonTitle}> Event Type: {YourTeamEventSelection}</Text>\r\n                                                        </View>\r\n\r\n                                                        <View style={stylesViewGame.ColumnContainer}>\r\n                                                            <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToMainMenu}>\r\n                                                                <Text style={stylesViewGame.buttonTitle}>Back to Main Menu</Text>\r\n                                                            </TouchableOpacity>\r\n                                                        </View>\r\n                            \r\n                                                        <View style={stylesViewGame.ColumnContainer}>\r\n                                                            <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToViewGameMenu}>\r\n                                                                <Text style={stylesViewGame.buttonTitle}>Back to View Game Menu</Text>\r\n                                                            </TouchableOpacity>\r\n                                                        </View>\r\n\r\n                                                    </ScrollView>\r\n\r\n                                                    <ScrollView horizontal={true} style={stylesViewGame.imagePlotContainer}>\r\n            \r\n                                                    <ScrollView>\r\n                                                                \r\n                                                                <Image style ={stylesViewGame.imagePxGAA}                        \r\n                                                                source={require('./GAApitch1.png')}/>\r\n                                                                {this.state.OpponentsEventFieldLocations.map((data) => {\r\n                                                                    return (\r\n                                                                    <View \r\n                                                                        style={{\r\n                                                                        position: 'absolute',\r\n                                                                        left: data.x,\r\n                                                                        top: data.y,\r\n                                                                        backgroundColor:'#242424',\r\n                                                                        width: 10,\r\n                                                                        height: 10,\r\n                                                                        borderWidth:2,\r\n                                                                        borderColor:'#C30000',\r\n                                                                        borderRadius: 50\r\n                                                                        }}>\r\n                                                                    </View> \r\n                                                            \r\n                                                                )\r\n                                                            })} \r\n                                \r\n                                                        </ScrollView>\r\n                                                    </ScrollView>\r\n\r\n                                                </ScrollView>\r\n                                            \r\n                                                );\r\n            \r\n                                            }\r\n                                   \r\n            \r\n                        \r\n            \r\n            \r\n                                    }   \r\n            \r\n                                    else\r\n                                    {\r\n            \r\n            \r\n            \r\n                                        if(screenWidth < 600 || screenHeight < 376)\r\n                                        {\r\n                \r\n                                            alert('Warning - This device is too small to display the full image. Please scroll across the image to navigate or use a larger device screen size.');\r\n                                            \r\n                                            FieldWithPlots = (\r\n            \r\n                                \r\n                                    \r\n                                                <ScrollView>\r\n                                                    \r\n                                                    <ScrollView horizontal={true} style={stylesViewGame.imagePlotContainer}>\r\n                                                    \r\n                                                        <View style={stylesViewGame.EventContainer}>\r\n                                                            <Text style={stylesViewGame.buttonTitle}> Event Type: {YourTeamEventSelection}</Text>\r\n                                                        </View>\r\n\r\n                                                        <View style={stylesViewGame.ColumnContainer}>\r\n                                                            <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToMainMenu}>\r\n                                                                <Text style={stylesViewGame.buttonTitle}>Back to Main Menu</Text>\r\n                                                            </TouchableOpacity>\r\n                                                        </View>\r\n                            \r\n                                                        <View style={stylesViewGame.ColumnContainer}>\r\n                                                            <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToViewGameMenu}>\r\n                                                                <Text style={stylesViewGame.buttonTitle}>Back to View Game Menu</Text>\r\n                                                            </TouchableOpacity>\r\n                                                        </View>\r\n\r\n                                                    </ScrollView>\r\n\r\n                                                    <ScrollView horizontal={true} style={stylesViewGame.imagePlotContainer}>\r\n            \r\n                                                    <ScrollView>\r\n                                                                \r\n                                                                <Image style ={stylesViewGame.imagePxGAA}                        \r\n                                                                source={require('./GAApitch1.png')}/>\r\n                                                                {this.state.OpponentsEventFieldLocations.map((data) => {\r\n                                                                    return (\r\n                                                                    <View \r\n                                                                        style={{\r\n                                                                        position: 'absolute',\r\n                                                                        left: data.x,\r\n                                                                        top: data.y,\r\n                                                                        backgroundColor:'#242424',\r\n                                                                        width: 10,\r\n                                                                        height: 10,\r\n                                                                        borderWidth:2,\r\n                                                                        borderColor:'#C30000',\r\n                                                                        borderRadius: 50\r\n                                                                        }}>\r\n                                                                    </View> \r\n                                                            \r\n                                                                )\r\n                                                            })} \r\n                                \r\n                                                        </ScrollView>\r\n                                                    </ScrollView>\r\n\r\n                                                </ScrollView>\r\n                            \r\n                                            );\r\n                                        }\r\n            \r\n                                        FieldWithPlots = (\r\n            \r\n                                \r\n                                    \r\n                                           <ScrollView>\r\n                                                    \r\n                                                    <ScrollView horizontal={true} style={stylesViewGame.imagePlotContainer}>\r\n                                                    \r\n                                                        <View style={stylesViewGame.EventContainer}>\r\n                                                            <Text style={stylesViewGame.buttonTitle}> Event Type: {YourTeamEventSelection}</Text>\r\n                                                        </View>\r\n\r\n                                                        <View style={stylesViewGame.ColumnContainer}>\r\n                                                            <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToMainMenu}>\r\n                                                                <Text style={stylesViewGame.buttonTitle}> Back to Main Menu</Text>\r\n                                                            </TouchableOpacity>\r\n                                                        </View>\r\n                            \r\n                                                        <View style={stylesViewGame.ColumnContainer}>\r\n                                                            <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToViewGameMenu}>\r\n                                                                <Text style={stylesViewGame.buttonTitle}>Back to View Game Menu</Text>\r\n                                                            </TouchableOpacity>\r\n                                                        </View>\r\n\r\n                                                    </ScrollView>\r\n\r\n                                                    <ScrollView horizontal={true} style={stylesViewGame.imagePlotContainer}>\r\n            \r\n                                                 \r\n                                                                <Image style ={stylesViewGame.imagePxGAA}                        \r\n                                                                source={require('./GAApitch1.png')}/>\r\n                                                                {this.state.OpponentsEventFieldLocations.map((data) => {\r\n                                                                    return (\r\n                                                                    <View \r\n                                                                        style={{\r\n                                                                        position: 'absolute',\r\n                                                                        left: data.x,\r\n                                                                        top: data.y,\r\n                                                                        backgroundColor:'#242424',\r\n                                                                        width: 10,\r\n                                                                        height: 10,\r\n                                                                        borderWidth:2,\r\n                                                                        borderColor:'#C30000',\r\n                                                                        borderRadius: 50\r\n                                                                        }}>\r\n                                                                    </View> \r\n                                                            \r\n                                                                )\r\n                                                            })} \r\n                                \r\n                                                      \r\n                                                    </ScrollView>\r\n\r\n                                                </ScrollView>\r\n            \r\n                                        );\r\n            \r\n                                    }   \r\n            \r\n                                }\r\n                                else if(SportType == 'Soccer')\r\n                                {\r\n            \r\n                                        if(screenWidth != this.state.StatsStoredUsingScreenWidth && screenHeight != this.state.StatsStoredUsingScreenHeight)\r\n                                        {\r\n            \r\n                                            if(screenWidth < 600 || screenHeight < 376)\r\n                                            {\r\n                                                alert('Warning - This device is too small to display the full image. Please scroll across the image to navigate or use a larger device screen size.');\r\n            \r\n                                        \r\n                                                FieldWithPlots = (\r\n                                          \r\n                                                    <ScrollView>\r\n                                                    \r\n                                                    <ScrollView horizontal={true} style={stylesViewGame.imagePlotContainer}>\r\n                                                    \r\n                                                        <View style={stylesViewGame.EventContainer}>\r\n                                                            <Text style={stylesViewGame.buttonTitle}> Event Type: {YourTeamEventSelection}</Text>\r\n                                                        </View>\r\n\r\n                                                        <View style={stylesViewGame.ColumnContainer}>\r\n                                                            <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToMainMenu}>\r\n                                                                <Text style={stylesViewGame.buttonTitle}>Back to Main Menu</Text>\r\n                                                            </TouchableOpacity>\r\n                                                        </View>\r\n                            \r\n                                                        <View style={stylesViewGame.ColumnContainer}>\r\n                                                            <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToViewGameMenu}>\r\n                                                                <Text style={stylesViewGame.buttonTitle}>Back to View Game Menu</Text>\r\n                                                            </TouchableOpacity>\r\n                                                        </View>\r\n\r\n                                                    </ScrollView>\r\n\r\n                                                    <ScrollView horizontal={true} style={stylesViewGame.imagePlotContainer}>\r\n            \r\n                                                    <ScrollView>\r\n                                                                \r\n                                                    <Image style ={stylesViewGame.imagePxSoccer}                   \r\n                                                                source={require('./SoccerField.png')}/>\r\n                                                                {this.state.OpponentsEventFieldLocations.map((data) => {\r\n                                                                    return (\r\n                                                                    <View \r\n                                                                        style={{\r\n                                                                        position: 'absolute',\r\n                                                                        left: data.x,\r\n                                                                        top: data.y,\r\n                                                                        backgroundColor:'#242424',\r\n                                                                        width: 10,\r\n                                                                        height: 10,\r\n                                                                        borderWidth:2,\r\n                                                                        borderColor:'#C30000',\r\n                                                                        borderRadius: 50\r\n                                                                        }}>\r\n                                                                    </View> \r\n                                                            \r\n                                                                )\r\n                                                            })} \r\n                                \r\n                                                        </ScrollView>\r\n                                                    </ScrollView>\r\n\r\n                                                </ScrollView>\r\n                            \r\n\r\n\r\n\r\n\r\n\r\n                                                );\r\n            \r\n                                            }\r\n                                            else\r\n                                            {\r\n            \r\n            \r\n            \r\n                                                FieldWithPlots = (\r\n            \r\n                                                    <ScrollView>\r\n                                                    \r\n                                                    <ScrollView horizontal={true} style={stylesViewGame.imagePlotContainer}>\r\n                                                    \r\n                                                        <View style={stylesViewGame.EventContainer}>\r\n                                                            <Text style={stylesViewGame.buttonTitle}> Event Type: {YourTeamEventSelection}</Text>\r\n                                                        </View>\r\n\r\n                                                        <View style={stylesViewGame.ColumnContainer}>\r\n                                                            <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToMainMenu}>\r\n                                                                <Text style={stylesViewGame.buttonTitle}>Back to Main Menu</Text>\r\n                                                            </TouchableOpacity>\r\n                                                        </View>\r\n                            \r\n                                                        <View style={stylesViewGame.ColumnContainer}>\r\n                                                            <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToViewGameMenu}>\r\n                                                                <Text style={stylesViewGame.buttonTitle}>Back to View Game Menu</Text>\r\n                                                            </TouchableOpacity>\r\n                                                        </View>\r\n\r\n                                                    </ScrollView>\r\n\r\n                                                    <ScrollView horizontal={true} style={stylesViewGame.imagePlotContainer}>\r\n            \r\n                                                    <ScrollView>\r\n                                                                \r\n                                                    <Image style ={stylesViewGame.imagePxSoccer}                   \r\n                                                                source={require('./SoccerField.png')}/>\r\n                                                                {this.state.OpponentsEventFieldLocations.map((data) => {\r\n                                                                    return (\r\n                                                                    <View \r\n                                                                        style={{\r\n                                                                        position: 'absolute',\r\n                                                                        left: data.x,\r\n                                                                        top: data.y,\r\n                                                                        backgroundColor:'#242424',\r\n                                                                        width: 10,\r\n                                                                        height: 10,\r\n                                                                        borderWidth:2,\r\n                                                                        borderColor:'#C30000',\r\n                                                                        borderRadius: 50\r\n                                                                        }}>\r\n                                                                    </View> \r\n                                                            \r\n                                                                )\r\n                                                            })} \r\n                                \r\n                                                        </ScrollView>\r\n                                                    </ScrollView>\r\n\r\n                                                </ScrollView>\r\n                        \r\n                                                );\r\n                                            }\r\n            \r\n                                    \r\n            \r\n                                        }\r\n                                        else\r\n                                        {\r\n            \r\n                                            if(screenWidth < 600 || screenHeight < 376)\r\n                                            {\r\n                                                alert('Warning - This device is too small to display the full image. Please scroll across the image to navigate or use a larger device screen size.');\r\n            \r\n                                        \r\n                                                FieldWithPlots = (\r\n                                                    <ScrollView>\r\n                                                    \r\n                                                    <ScrollView horizontal={true} style={stylesViewGame.imagePlotContainer}>\r\n                                                    \r\n                                                        <View style={stylesViewGame.EventContainer}>\r\n                                                            <Text style={stylesViewGame.buttonTitle}> Event Type: {YourTeamEventSelection}</Text>\r\n                                                        </View>\r\n\r\n                                                        <View style={stylesViewGame.ColumnContainer}>\r\n                                                            <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToMainMenu}>\r\n                                                                <Text style={stylesViewGame.buttonTitle}>Back to Main Menu</Text>\r\n                                                            </TouchableOpacity>\r\n                                                        </View>\r\n                            \r\n                                                        <View style={stylesViewGame.ColumnContainer}>\r\n                                                            <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToViewGameMenu}>\r\n                                                                <Text style={stylesViewGame.buttonTitle}>Back to View Game Menu</Text>\r\n                                                            </TouchableOpacity>\r\n                                                        </View>\r\n\r\n                                                    </ScrollView>\r\n\r\n                                                    <ScrollView horizontal={true} style={stylesViewGame.imagePlotContainer}>\r\n            \r\n                                                    <ScrollView>\r\n                                                                \r\n                                                    <Image style ={stylesViewGame.imageSoccerMobile}                   \r\n                                                                source={require('./SoccerField.png')}/>\r\n                                                                {this.state.OpponentsEventFieldLocations.map((data) => {\r\n                                                                    return (\r\n                                                                    <View \r\n                                                                        style={{\r\n                                                                        position: 'absolute',\r\n                                                                        left: data.x,\r\n                                                                        top: data.y,\r\n                                                                        backgroundColor:'#242424',\r\n                                                                        width: 10,\r\n                                                                        height: 10,\r\n                                                                        borderWidth:2,\r\n                                                                        borderColor:'#C30000',\r\n                                                                        borderRadius: 50\r\n                                                                        }}>\r\n                                                                    </View> \r\n                                                            \r\n                                                                )\r\n                                                            })} \r\n                                \r\n                                                        </ScrollView>\r\n                                                    </ScrollView>\r\n\r\n                                                </ScrollView>\r\n                                                );\r\n            \r\n                                            }\r\n            \r\n                                        \r\n                                            FieldWithPlots = (\r\n            \r\n                                \r\n                                                <ScrollView>\r\n                                                    \r\n                                                <ScrollView horizontal={true} style={stylesViewGame.imagePlotContainer}>\r\n                                                \r\n                                                    <View style={stylesViewGame.EventContainer}>\r\n                                                        <Text style={stylesViewGame.buttonTitle}> Event Type: {YourTeamEventSelection}</Text>\r\n                                                    </View>\r\n\r\n                                                    <View style={stylesViewGame.ColumnContainer}>\r\n                                                        <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToMainMenu}>\r\n                                                            <Text style={stylesViewGame.buttonTitle}>Back to Main Menu</Text>\r\n                                                        </TouchableOpacity>\r\n                                                    </View>\r\n                        \r\n                                                    <View style={stylesViewGame.ColumnContainer}>\r\n                                                        <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToViewGameMenu}>\r\n                                                            <Text style={stylesViewGame.buttonTitle}>Back to View Game Menu</Text>\r\n                                                        </TouchableOpacity>\r\n                                                    </View>\r\n\r\n                                                </ScrollView>\r\n\r\n                                                <ScrollView horizontal={true} style={stylesViewGame.imagePlotContainer}>\r\n        \r\n                                                <ScrollView>\r\n                                                            \r\n                                                <Image style ={stylesViewGame.imagePxSoccer}                   \r\n                                                            source={require('./SoccerField.png')}/>\r\n                                                            {this.state.OpponentsEventFieldLocations.map((data) => {\r\n                                                                return (\r\n                                                                <View \r\n                                                                    style={{\r\n                                                                    position: 'absolute',\r\n                                                                    left: data.x,\r\n                                                                    top: data.y,\r\n                                                                    backgroundColor:'#242424',\r\n                                                                    width: 10,\r\n                                                                    height: 10,\r\n                                                                    borderWidth:2,\r\n                                                                    borderColor:'#C30000',\r\n                                                                    borderRadius: 50\r\n                                                                    }}>\r\n                                                                </View> \r\n                                                        \r\n                                                            )\r\n                                                        })} \r\n                            \r\n                                                    </ScrollView>\r\n                                                </ScrollView>\r\n\r\n                                            </ScrollView>\r\n                                            );\r\n                                        }\r\n            \r\n            \r\n            \r\n                        }\r\n\r\n                }\r\n\r\n\r\n\r\n            return (\r\n \r\n\r\n                <ScrollView contentContainerStyle={{ flexGrow: 1, justifyContent: 'center', backgroundColor: '#252626', alignItems: \"center\", fontSize: 20}}>\r\n\r\n                    <View>\r\n                        {ReviewSelection}  \r\n                    </View>\r\n                        \r\n                    <View>\r\n                        {FieldWithPlots}\r\n                    </View>\r\n\r\n                    \r\n                    <View>\r\n                        {ReviewGameStats}\r\n                    </View>\r\n\r\n                    \r\n                    <View>\r\n                        {ReviewPlayerStats}\r\n                    </View>\r\n\r\n                    \r\n                    <View>\r\n                        {PlayerStats}\r\n                    </View>\r\n\r\n                </ScrollView>\r\n        \r\n                      \r\n\r\n                       \r\n\r\n\r\n            )\r\n\r\n        }\r\n}\r\n\r\n\r\nconst stylesViewGame = StyleSheet.create({\r\n    container: {\r\n  \r\n    \r\n        fontSize: 20,\r\n       \r\n    },\r\n    dataContainer: {\r\n        // height: hp('50%'), // 70% of height device screen\r\n        width: wp('80%') ,  // % of width device screen\r\n        // backgroundColor: '#424242', \r\n        alignItems: \"center\",\r\n        borderWidth: 4,\r\n        borderColor:'#ffffff',\r\n \r\n        marginBottom:10\r\n    },\r\n    Text:{\r\n        color: \"black\",\r\n        fontSize:18,\r\n        justifyContent:'center',\r\n\r\n    },\r\n\r\n    ColumnContainer:{\r\n        flex:1,\r\n        flexDirection:\"row\",\r\n        justifyContent:'center'\r\n    },\r\n\r\n    headerContainer:{ \r\n\r\n        backgroundColor: '#C30000',\r\n        alignItems: \"center\",\r\n        borderWidth: 4,\r\n        borderRadius: 20,\r\n        borderColor:'#ffffff',\r\n        alignItems: 'center',\r\n        width: wp('80%') ,  // % of width device screen\r\n        marginTop:30,\r\n        padding:4,\r\n  \r\n    },\r\n\r\n\r\n    StatRow: {\r\n        flex:1,\r\n        flexDirection:\"row\",\r\n        alignItems: \"center\",\r\n        marginBottom:10,\r\n        borderWidth: 4,\r\n        borderRadius: 20,\r\n        backgroundColor: \"#33343F\",\r\n        borderColor:'#ffffff',\r\n    },\r\n\r\n    StatColumn: {\r\n        flex:1,\r\n        flexDirection:\"column\",\r\n        padding: 50,\r\n        marginBottom:10,\r\n\r\n  \r\n\r\n    },\r\n    dcontainer: {\r\n        backgroundColor: '#C30000',\r\n        height:'100%',\r\n        alignItems: \"center\",\r\n        fontSize: 20,\r\n       \r\n    },\r\n\r\n    StatRow: {\r\n        flex:1,\r\n        flexDirection:\"row\",\r\n        borderWidth: 4,\r\n        borderRadius: 20,\r\n        borderColor:'#ffffff',\r\n        alignItems: \"center\",\r\n        marginBottom:10,\r\n        backgroundColor: \"#33343F\",\r\n    },\r\n\r\n\r\n    StatText: {\r\n        color: \"black\",\r\n        fontSize:18,\r\n        justifyContent:'center',\r\n        fontWeight: \"bold\",\r\n        \r\n    },\r\n\r\n    StatTextWhite: {\r\n        color: \"white\",\r\n        fontSize:18,\r\n        textAlign: 'center',\r\n        justifyContent:'center',\r\n        fontWeight: \"bold\",\r\n     \r\n    },\r\n\r\n    text:{\r\n        color: \"white\",\r\n        fontSize:18,\r\n        fontWeight: \"bold\",\r\n    },\r\n\r\n\r\n    dataContainer: {\r\n        backgroundColor: '#ffffff', \r\n        alignItems: 'center',\r\n        \r\n    },\r\n    container2: {\r\n        backgroundColor: '#ffffff', \r\n        alignItems: 'center',\r\n    },\r\n    input: {\r\n        height: 48,\r\n        borderRadius: 5,\r\n        overflow: 'hidden',\r\n        backgroundColor: 'white',\r\n        marginTop: 10,\r\n        marginBottom: 10,\r\n        marginLeft: 30,\r\n        marginRight: 30,\r\n        paddingLeft: 16\r\n    },\r\n\r\n    EventContainer:{\r\n        flex:1,\r\n        flexDirection:\"row\",\r\n        justifyContent:'center',\r\n        marginLeft: 30,\r\n        marginRight: 30,\r\n        marginTop: 20,\r\n        height: 48,\r\n    },\r\n\r\n    button: {\r\n        backgroundColor: '#C30000',\r\n        marginLeft: 30,\r\n        marginRight: 30,\r\n        marginTop: 20,\r\n        height: 48,\r\n        borderRadius: 5,\r\n        alignItems: \"center\",\r\n        justifyContent: 'center',\r\n        width: '100%'\r\n    },\r\n\r\n    buttonTitle: {\r\n        color:'white',\r\n        fontSize:18,\r\n        justifyContent:'center',\r\n        textAlign: 'center',\r\n        fontWeight: \"bold\",\r\n    },\r\n\r\n  \r\n    \r\n    imagePxGAA:{\r\n    \r\n        height:376,\r\n        width:700,\r\n  \r\n        \r\n     },\r\n\r\n     imagePxGAAmobile:{\r\n    \r\n        height:300,\r\n        width:590,\r\n   \r\n     \r\n     },\r\n\r\n\r\n    imagePxSoccer:{\r\n        height:400,\r\n        width: 700,\r\n\r\n    },\r\n    \r\n   \r\n    imageSoccerMobile:\r\n    {\r\n        \r\n            height:280,\r\n            width: 480,\r\n        \r\n    },\r\n   \r\n  \r\n\r\n    imagePlotContainer: {\r\n\r\n    \r\n        flexWrap: 'wrap',\r\n        flexDirection:\"row\",\r\n\r\n        marginTop:10,\r\n        paddingTop:10,\r\n        paddingBottom:20,\r\n        backgroundColor: \"#33343F\",\r\n        borderRadius:10,\r\n        borderWidth: 1,\r\n        borderColor: '#fff',\r\n\r\n\r\n       \r\n\r\n    },\r\n\r\n    imageColumn:{\r\n        flexWrap: 'wrap',\r\n        flexDirection:\"column\",\r\n\r\n\r\n        marginLeft: 5,\r\n        // marginRight: 30,\r\n        marginTop: 10,\r\n        height: 48,\r\n        borderRadius: 5,\r\n\r\n        // alignItems: \"center\",\r\n        // justifyContent: 'center'\r\n    },\r\n\r\n    imageheaderContainer:{\r\n\r\n      \r\n        marginRight:40,\r\n        marginLeft:40,\r\n        marginTop:10,\r\n        paddingTop:20,\r\n        paddingBottom:20,\r\n        backgroundColor:'#68a0cf',\r\n        borderRadius:10,\r\n        borderWidth: 1,\r\n        borderColor: '#fff',\r\n        width: '100%',\r\n\r\n    },\r\n\r\n    imageGAA:{\r\n        width: win.width,\r\n        height: 300 * ratioGaaView, //399 is actual height of image\r\n    \r\n    \r\n    },\r\n    \r\n    \r\n    imageSoccer:{\r\n        width: win.width,\r\n        height: 376 * ratioSoccerView , //399 is actual height of image\r\n        top: '20%'\r\n    \r\n    },\r\n    \r\n    \r\n\r\n});\r\n\r\nexport default ViewGame;"]},"metadata":{},"sourceType":"module"}