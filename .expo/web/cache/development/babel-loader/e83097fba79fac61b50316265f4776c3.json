{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, useEffect, useState } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport styles from \"./styles\";\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\n\nvar TeamAnalystRegistrationScreen = function (_Component) {\n  _inherits(TeamAnalystRegistrationScreen, _Component);\n\n  var _super = _createSuper(TeamAnalystRegistrationScreen);\n\n  function TeamAnalystRegistrationScreen(props) {\n    var _this;\n\n    _classCallCheck(this, TeamAnalystRegistrationScreen);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      UserID: '',\n      userType: '',\n      teamCreated: 0,\n      listPlayers: [],\n      SportType: '',\n      testMenu: true\n    };\n    return _this;\n  }\n\n  _createClass(TeamAnalystRegistrationScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }]);\n\n  return TeamAnalystRegistrationScreen;\n}(Component);\n\nexport default TeamAnalystRegistrationScreen;","map":{"version":3,"sources":["D:/StatsAppNative/MyApp/screens/TeamAnalystRegistrationScreen/TeamAnalystRegistrationScreen.js"],"names":["React","Component","useEffect","useState","styles","firebase","TeamAnalystRegistrationScreen","props","state","UserID","userType","teamCreated","listPlayers","SportType","testMenu"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAsD,OAAtD;;;;;;;;AAEA,OAAOC,MAAP;AAEA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAO,mBAAP;;IAKMC,6B;;;;;AACF,yCAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE,EADC;AAETC,MAAAA,QAAQ,EAAE,EAFD;AAGVC,MAAAA,WAAW,EAAE,CAHH;AAIVC,MAAAA,WAAW,EAAC,EAJF;AAKVC,MAAAA,SAAS,EAAE,EALD;AAMVC,MAAAA,QAAQ,EAAC;AANC,KAAb;AAFe;AAWd;;;;WAID,6BAAmB,CAElB;;;;EAlBmCb,S;;AAwB5C,eAAeK,6BAAf","sourcesContent":["import React, { Component, useEffect, useState } from 'react'\r\nimport { Image, Text, TextInput, TouchableOpacity, ScrollView , View , StyleSheet} from 'react-native';\r\nimport styles from './styles';\r\n// import * as firebase from 'firebase/app';\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\n\r\n\r\n//--Task -fix this page so that it not a function\r\n\r\nclass TeamAnalystRegistrationScreen extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            UserID: '',\r\n            userType: '',\r\n           teamCreated: 0, \r\n           listPlayers:[],\r\n           SportType: '',\r\n           testMenu:true,\r\n            \r\n            };\r\n        }\r\n\r\n\r\n\r\n        componentDidMount(){\r\n\r\n        }\r\n\r\n\r\n\r\n}\r\n\r\nexport default TeamAnalystRegistrationScreen;\r\n\r\n       \r\n    // const [fullName, setFullName] = useState('')\r\n    // const [email, setEmail] = useState('')\r\n    // const [password, setPassword] = useState('')\r\n    // const [confirmPassword, setConfirmPassword] = useState('')\r\n    // const [teamAdminInvite, setInviteCode] = useState('')\r\n\r\n\r\n    // const CreatedByUserID = '';\r\n\r\n    \r\n    // const onSignUpPress = () => {\r\n    //     //  Full name Validation\r\n    //     if(fullName == \"\")\r\n    //     {\r\n    //         alert(\"Please enter your full name.\")\r\n    //         return\r\n    //     }\r\n\r\n    //     //  Email Validation\r\n    //     if(email == \"\")\r\n    //     {\r\n    //         alert(\"Please enter your email.\")\r\n    //         return\r\n    //     }\r\n\r\n    //     //  teamAdminInvite Validation\r\n    //     if(teamAdminInvite == \"\")\r\n    //     {\r\n    //         alert(\"Please enter your teamAdminInvite code.\")\r\n    //         return\r\n    //     }\r\n\r\n    //     //  Password confirmation Check\r\n    //     if (password !== confirmPassword) {\r\n    //         alert(\"Passwords don't match.\")\r\n    //         return\r\n    //     }\r\n    //     //Set UserType to TA\r\n    //     if (password !== confirmPassword) {\r\n    //         alert(\"Passwords don't match.\")\r\n    //         return\r\n    //     }\r\n\r\n\r\n\r\n//Check if the team invite is completely unique in the users list\r\n// const checkIFTeamExists = firebase.database().ref(\"teams\").orderByChild('teamAdminInvite').equalTo(teamAdminInvite).once('value' , snapshot =>  {\r\n//         if (snapshot.exists()){\r\n\r\n//             //obtain Team ID \r\n//             const teamObj = snapshot.val();\r\n\r\n\r\n//             console.log(snapshot.val());\r\n\r\n//             let CreatedByUserID = teamObj.CreatedByUserID;\r\n//             this.setState({CreatedByUserID: teamObj.CreatedByUserID});\r\n\r\n\r\n//              console.log(CreatedByUserID);\r\n\r\n// console.log(email);\r\n// console.log(password);\r\n\r\n\r\n//             //bug here - CreatID isnt defined in state\r\n//             firebase\r\n//             .auth()\r\n//             .createUserWithEmailAndPassword(email, password)\r\n//             .then((response) => {\r\n//                 const uid = response.user.uid;\r\n//                 const userType = \"TeamAnalyst\";\r\n//                 const data2 = {\r\n//                     id: uid,\r\n//                     email: email,\r\n//                     fullName: this.state.fullName,\r\n//                     userType:   userType,\r\n//                     teamCreated: 0,\r\n//                     teamplayerlimit:this.state.teamplayerlimit,\r\n//                     teamgamelimit:this.state.teamgamelimit,\r\n//                     teamAdminInvite:this.state.teamAdminInvite\r\n                \r\n                    \r\n//                 };\r\n\r\n\r\n//                 const usersRef = firebase.database().ref('users/' + uid)\r\n//                     usersRef\r\n//                         .set(data2)\r\n//                                 .then(() => {\r\n//                                         this.setState({\r\n//                                             isLoading: true,\r\n//                                         })\r\n                                    \r\n\r\n//                                         //Add the team Analyst to the Team Record\r\n//                                         // const teamAdminsRef = firebase.database().ref('teams').orderByChild('')\r\n\r\n//                                 const addTeamAdmin = firebase.database().ref('teams').child(CreatedByUserID).child('teamAdmins')\r\n\r\n//                                     var adminData = {\r\n//                                         id: uid,\r\n//                                         fullName:this.state.fullName\r\n//                                     };\r\n\r\n\r\n//                                 addTeamAdmin.update(adminData);\r\n\r\n//                                         this.props.navigation.navigate('Login')\r\n//                                     })\r\n//                                     .catch((error) => {\r\n//                                         alert(error)\r\n//                                     });\r\n//                             })\r\n//                             .catch((error) => {\r\n//                                 alert(error)\r\n//                         });\r\n//             }\r\n//             else\r\n//             {\r\n//                 alert('Cannot find Team - Maybe incorrect team admin code');\r\n//             }\r\n\r\n//       });\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//   navigation.navigate('Login')\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//         }\r\n       \r\n\r\n\r\n    \r\n\r\n//     return (\r\n//         <ScrollView>\r\n//                 <Text style={styles.footerText}> Please enter your full name:</Text>\r\n//                 <TextInput\r\n//                     style={styles.input}\r\n//                     placeholderTextColor=\"#aaaaaa\"\r\n//                     placeholder='Please enter your full name'\r\n//                     onChangeText={(text) => setFullName(text)}\r\n//                     value={fullName}\r\n//                     underlineColorAndroid=\"transparent\"\r\n//                     autoCapitalize=\"none\"\r\n//                 />\r\n\r\n//                 <Text style={styles.footerText}> Please enter your email:</Text>\r\n//                 <TextInput\r\n//                     style={styles.input}\r\n//                     placeholderTextColor=\"#aaaaaa\"\r\n//                     placeholder='Please enter your email'\r\n//                     onChangeText={(text) => setEmail(text)}\r\n//                     value={email}\r\n//                     underlineColorAndroid=\"transparent\"\r\n//                     autoCapitalize=\"none\"\r\n//                 />\r\n\r\n//                 <Text style={styles.footerText}> Please enter your password:</Text>\r\n//                 <TextInput\r\n//                     style={styles.input}\r\n//                     placeholderTextColor=\"#aaaaaa\"\r\n//                     secureTextEntry\r\n//                     placeholder='Password'\r\n//                     onChangeText={(text) => setPassword(text)}\r\n//                     value={password}\r\n//                     underlineColorAndroid=\"transparent\"\r\n//                     autoCapitalize=\"none\"\r\n//                 />\r\n//                  <Text style={styles.footerText}> Please confirm your password:</Text>\r\n//                 <TextInput\r\n//                     style={styles.input}\r\n//                     placeholderTextColor=\"#aaaaaa\"\r\n//                     secureTextEntry\r\n//                     placeholder='Confirm Password'\r\n//                     onChangeText={(text) => setConfirmPassword(text)}\r\n//                     value={confirmPassword}\r\n//                     underlineColorAndroid=\"transparent\"\r\n//                     autoCapitalize=\"none\"\r\n//                 />\r\n\r\n//                 <Text style={styles.footerText}>Please enter you invite code.This can be obtained by your  Head Team Analyst - this will be in the team record:</Text>\r\n//                 <TextInput\r\n//                     style={styles.input}\r\n//                     placeholderTextColor=\"#aaaaaa\"\r\n//                     placeholder='Please enter your invite code'\r\n//                     onChangeText={(text) => setInviteCode(text)}\r\n//                     value={teamAdminInvite}\r\n//                     underlineColorAndroid=\"transparent\"\r\n//                     autoCapitalize=\"none\"\r\n//                 />\r\n\r\n//                 <View style={styles.footerView}>\r\n//                     <TouchableOpacity style={styles.button} onPress={() => onSignUpPress()}>\r\n//                     <Text style={styles.buttonTitle}>Sign up!</Text>\r\n//                     </TouchableOpacity>\r\n//                 </View>\r\n\r\n//         </ScrollView>\r\n//     )\r\n// }"]},"metadata":{},"sourceType":"module"}