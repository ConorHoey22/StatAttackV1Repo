{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\StatsAppNative\\\\MyApp\\\\screens\\\\PlayerProfile\\\\PlayerProfile.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useEffect, useState, Component } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport { ThemeColors } from 'react-navigation';\nimport { useNavigation } from '@react-navigation/native';\nimport { createAppContainer } from 'react-navigation';\nimport { createStackNavigator } from 'react-navigation-stack';\n\nvar PlayerProfile = function (_Component) {\n  _inherits(PlayerProfile, _Component);\n\n  var _super = _createSuper(PlayerProfile);\n\n  function PlayerProfile(props) {\n    var _this;\n\n    _classCallCheck(this, PlayerProfile);\n\n    _this = _super.call(this, props);\n\n    _this.getPlayerDetails = function _callee() {\n      var myUserId;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              myUserId = firebase.auth().currentUser.uid;\n              firebase.database().ref('/users').child(myUserId).child('').on('value', function (snapshot) {\n                var userObj = snapshot.val();\n                var fullName = userObj.fullName;\n\n                _this.setState({\n                  fullName: fullName\n                });\n\n                var userType = userObj.userType;\n\n                _this.setState({\n                  userType: userType\n                });\n\n                var totalGoals = userObj.totalGoals;\n\n                _this.setState({\n                  totalGoals: totalGoals\n                });\n\n                var totalPoints = userObj.totalPoints;\n\n                _this.setState({\n                  totalPoints: totalPoints\n                });\n\n                var totalPasses = userObj.totalPasses;\n\n                _this.setState({\n                  totalPasses: totalPasses\n                });\n\n                var totalShots = userObj.totalShots;\n\n                _this.setState({\n                  totalShots: totalShots\n                });\n\n                var totalShotsOnTarget = userObj.totalShotsOnTarget;\n\n                _this.setState({\n                  totalShotsOnTarget: totalShotsOnTarget\n                });\n\n                var totalTackles = userObj.totalTackles;\n\n                _this.setState({\n                  totalTackles: totalTackles\n                });\n\n                var totalWonTheBall = userObj.totalWonTheBall;\n\n                _this.setState({\n                  totalWonTheBall: totalWonTheBall\n                });\n\n                var totalLostTheBall = userObj.totalLostTheBall;\n\n                _this.setState({\n                  totalLostTheBall: totalLostTheBall\n                });\n\n                var totalYellowCards = userObj.totalYellowCards;\n\n                _this.setState({\n                  totalYellowCards: totalYellowCards\n                });\n\n                var totalRedCards = userObj.totalRedCards;\n\n                _this.setState({\n                  totalRedCards: totalRedCards\n                });\n\n                var totalAssists = userObj.totalAssists;\n\n                _this.setState({\n                  totalAssists: totalAssists\n                });\n              });\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      fullName: '',\n      TeamName: '',\n      SportType: '',\n      inviteCode: '',\n      hasATeam: false,\n      userType: [],\n      totalGoals: 0,\n      totalPoints: 0,\n      totalPasses: 0,\n      totalShots: 0,\n      totalShotsOnTarget: 0,\n      totalTackles: 0,\n      totalWonTheBall: 0,\n      totalLostTheBall: 0,\n      totalYellowCards: 0,\n      totalRedCards: 0,\n      totalAssists: 0\n    };\n    return _this;\n  }\n\n  _createClass(PlayerProfile, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getPlayerDetails();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _PlayerProfile;\n\n      if (SportType == 'GAA') {\n        _PlayerProfile = React.createElement(View, {\n          style: stylePlayerProfile.container,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 21\n          }\n        }, React.createElement(Text, {\n          style: stylePlayerProfile.Text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }\n        }, this.state.fullName), React.createElement(Text, {\n          style: stylePlayerProfile.Text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }\n        }, this.state.userType), React.createElement(Text, {\n          style: stylePlayerProfile.Text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }\n        }, \"Total Stats\"), React.createElement(Text, {\n          style: stylePlayerProfile.Text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }\n        }, \"Goals: \", this.state.totalGoals), React.createElement(Text, {\n          style: stylePlayerProfile.Text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }\n        }, \"Points: \", this.state.totalPoints), React.createElement(Text, {\n          style: stylePlayerProfile.Text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }\n        }, \"Shots: \", this.state.totalShots), React.createElement(Text, {\n          style: stylePlayerProfile.Text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }\n        }, \"Shots on target: \", this.state.totalShotsOnTarget), React.createElement(Text, {\n          style: stylePlayerProfile.Text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }\n        }, \"Assists: \", this.state.totalAssists), React.createElement(Text, {\n          style: stylePlayerProfile.Text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }\n        }, \"Tackles: \", this.state.totalTackles), React.createElement(Text, {\n          style: stylePlayerProfile.Text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }\n        }, \"Won the Ball: \", this.state.totalWonTheBall), React.createElement(Text, {\n          style: stylePlayerProfile.Text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }\n        }, \"Lost the Ball: \", this.state.totalWonTheBall), React.createElement(Text, {\n          style: stylePlayerProfile.Text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }\n        }, \"Yellow Cards: \", this.state.totalYellowCards), React.createElement(Text, {\n          style: stylePlayerProfile.Text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }\n        }, \"Red Cards: \", this.state.totalRedCards));\n      } else if (SportType == 'Soccer') {\n        _PlayerProfile = React.createElement(View, {\n          style: stylePlayerProfile.container,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 21\n          }\n        }, React.createElement(Text, {\n          style: stylePlayerProfile.Text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }\n        }, this.state.fullName), React.createElement(Text, {\n          style: stylePlayerProfile.Text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }\n        }, this.state.userType), React.createElement(Text, {\n          style: stylePlayerProfile.Text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }\n        }, \"Total Stats\"), React.createElement(Text, {\n          style: stylePlayerProfile.Text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }\n        }, \"Goals: \", this.state.totalGoals), React.createElement(Text, {\n          style: stylePlayerProfile.Text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }\n        }, \"Shots: \", this.state.totalShots), React.createElement(Text, {\n          style: stylePlayerProfile.Text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }\n        }, \"Shots on target: \", this.state.totalShotsOnTarget), React.createElement(Text, {\n          style: stylePlayerProfile.Text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }\n        }, \"Assists: \", this.state.totalAssists), React.createElement(Text, {\n          style: stylePlayerProfile.Text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }\n        }, \"Tackles: \", this.state.totalTackles), React.createElement(Text, {\n          style: stylePlayerProfile.Text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }\n        }, \"Won the Ball: \", this.state.totalWonTheBall), React.createElement(Text, {\n          style: stylePlayerProfile.Text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }\n        }, \"Lost the Ball: \", this.state.totalWonTheBall), React.createElement(Text, {\n          style: stylePlayerProfile.Text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }\n        }, \"Yellow Cards: \", this.state.totalYellowCards), React.createElement(Text, {\n          style: stylePlayerProfile.Text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }\n        }, \"Red Cards: \", this.state.totalRedCards));\n      }\n\n      return React.createElement(ScrollView, {\n        style: stylePlayerProfile.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 17\n        }\n      }, _PlayerProfile);\n    }\n  }]);\n\n  return PlayerProfile;\n}(Component);\n\nvar styleProfile = StyleSheet.create({\n  container: {\n    backgroundColor: '#252626'\n  },\n  Text: {\n    color: '#ffffff',\n    fontSize: 20\n  }\n});\nexport default PlayerProfile;","map":{"version":3,"sources":["D:/StatsAppNative/MyApp/screens/PlayerProfile/PlayerProfile.js"],"names":["React","useEffect","useState","Component","firebase","ThemeColors","useNavigation","createAppContainer","createStackNavigator","PlayerProfile","props","getPlayerDetails","myUserId","auth","currentUser","uid","database","ref","child","on","snapshot","userObj","val","fullName","setState","userType","totalGoals","totalPoints","totalPasses","totalShots","totalShotsOnTarget","totalTackles","totalWonTheBall","totalLostTheBall","totalYellowCards","totalRedCards","totalAssists","state","TeamName","SportType","inviteCode","hasATeam","stylePlayerProfile","container","Text","styleProfile","StyleSheet","create","backgroundColor","color","fontSize"],"mappings":"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","sourcesContent":["import React, { useEffect, useState , Component  } from 'react'\r\nimport {FlatList, StyleSheet, Keyboard, Text, View , ScrollView, TouchableOpacity,TextInput ,Picker, Button , Alert} from 'react-native'\r\n\r\n// import * as firebase from 'firebase/app';\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\nimport { ThemeColors } from 'react-navigation';\r\n\r\n\r\n\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { createAppContainer } from 'react-navigation';\r\nimport { createStackNavigator } from 'react-navigation-stack';\r\n\r\n\r\n class PlayerProfile extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            fullName:'',\r\n            TeamName: '',\r\n            SportType: '',\r\n            inviteCode:'',\r\n            hasATeam: false,\r\n            userType: [],\r\n            totalGoals:0,\r\n            totalPoints:0,\r\n            totalPasses: 0,\r\n            totalShots:0,\r\n            totalShotsOnTarget:0,\r\n            totalTackles:0,\r\n            totalWonTheBall:0,\r\n            totalLostTheBall:0,\r\n            totalYellowCards:0,\r\n            totalRedCards:0,\r\n            totalAssists:0\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getPlayerDetails();\r\n    \r\n    }\r\n\r\n    getPlayerDetails = async() => {\r\n        var myUserId = firebase.auth().currentUser.uid;\r\n\r\n        firebase.database().ref('/users').child(myUserId).child('')\r\n        .on('value', snapshot => {\r\n            const userObj = snapshot.val();\r\n\r\n            let fullName = userObj.fullName;\r\n            this.setState({fullName:fullName});\r\n\r\n            let userType = userObj.userType;\r\n            this.setState({userType:userType});\r\n        \r\n            let totalGoals = userObj.totalGoals;\r\n            this.setState({totalGoals:totalGoals});\r\n\r\n            let totalPoints = userObj.totalPoints;\r\n            this.setState({totalPoints:totalPoints});\r\n\r\n            let totalPasses = userObj.totalPasses;\r\n            this.setState({totalPasses:totalPasses});\r\n\r\n            let totalShots = userObj.totalShots;\r\n            this.setState({totalShots:totalShots});\r\n\r\n            let totalShotsOnTarget = userObj.totalShotsOnTarget;\r\n            this.setState({totalShotsOnTarget:totalShotsOnTarget});\r\n            \r\n            let totalTackles = userObj.totalTackles;\r\n            this.setState({totalTackles:totalTackles});\r\n\r\n            let totalWonTheBall = userObj.totalWonTheBall;\r\n            this.setState({totalWonTheBall:totalWonTheBall});\r\n\r\n            let totalLostTheBall = userObj.totalLostTheBall;\r\n            this.setState({totalLostTheBall:totalLostTheBall});\r\n\r\n            let totalYellowCards = userObj.totalYellowCards;\r\n            this.setState({totalYellowCards:totalYellowCards});\r\n\r\n            let totalRedCards = userObj.totalRedCards;\r\n            this.setState({totalRedCards:totalRedCards});\r\n\r\n            let totalAssists = userObj.totalAssists;\r\n            this.setState({totalAssists:totalAssists});\r\n\r\n        });\r\n\r\n    }\r\n\r\n        \r\n\r\n        render(){\r\n\r\n\r\n            var PlayerProfile;\r\n\r\n            if(SportType == 'GAA')\r\n            {\r\n                PlayerProfile = (\r\n                    <View style={stylePlayerProfile.container}>\r\n                   \r\n                        <Text style={stylePlayerProfile.Text}>{this.state.fullName}</Text>\r\n                        <Text style={stylePlayerProfile.Text}>{this.state.userType}</Text>\r\n    \r\n                        <Text style={stylePlayerProfile.Text}>Total Stats</Text>\r\n                        <Text style={stylePlayerProfile.Text}>Goals: {this.state.totalGoals}</Text>\r\n                        <Text style={stylePlayerProfile.Text}>Points: {this.state.totalPoints}</Text>\r\n                        <Text style={stylePlayerProfile.Text}>Shots: {this.state.totalShots}</Text>\r\n                        <Text style={stylePlayerProfile.Text}>Shots on target: {this.state.totalShotsOnTarget}</Text>\r\n                        <Text style={stylePlayerProfile.Text}>Assists: {this.state.totalAssists }</Text>\r\n                        <Text style={stylePlayerProfile.Text}>Tackles: {this.state.totalTackles }</Text>\r\n                        <Text style={stylePlayerProfile.Text}>Won the Ball: {this.state.totalWonTheBall }</Text>\r\n                        <Text style={stylePlayerProfile.Text}>Lost the Ball: {this.state.totalWonTheBall }</Text>\r\n                        <Text style={stylePlayerProfile.Text}>Yellow Cards: {this.state.totalYellowCards }</Text>\r\n                        <Text style={stylePlayerProfile.Text}>Red Cards: {this.state.totalRedCards }</Text>\r\n \r\n \r\n                    </View>\r\n                );\r\n\r\n            }\r\n            else if (SportType == 'Soccer')\r\n            {\r\n                PlayerProfile = (\r\n                    <View style={stylePlayerProfile.container}>\r\n                   \r\n                        <Text style={stylePlayerProfile.Text}>{this.state.fullName}</Text>\r\n                        <Text style={stylePlayerProfile.Text}>{this.state.userType}</Text>\r\n    \r\n                        <Text style={stylePlayerProfile.Text}>Total Stats</Text>\r\n                        <Text style={stylePlayerProfile.Text}>Goals: {this.state.totalGoals}</Text>\r\n                        <Text style={stylePlayerProfile.Text}>Shots: {this.state.totalShots}</Text>\r\n                        <Text style={stylePlayerProfile.Text}>Shots on target: {this.state.totalShotsOnTarget}</Text>\r\n                        <Text style={stylePlayerProfile.Text}>Assists: {this.state.totalAssists }</Text>\r\n                        <Text style={stylePlayerProfile.Text}>Tackles: {this.state.totalTackles }</Text>\r\n                        <Text style={stylePlayerProfile.Text}>Won the Ball: {this.state.totalWonTheBall }</Text>\r\n                        <Text style={stylePlayerProfile.Text}>Lost the Ball: {this.state.totalWonTheBall }</Text>\r\n                        <Text style={stylePlayerProfile.Text}>Yellow Cards: {this.state.totalYellowCards }</Text>\r\n                        <Text style={stylePlayerProfile.Text}>Red Cards: {this.state.totalRedCards }</Text>\r\n \r\n \r\n                    </View>\r\n                );\r\n            }\r\n\r\n\r\n            return (\r\n                <ScrollView style={stylePlayerProfile.container}>\r\n                   \r\n\r\n                    {PlayerProfile}\r\n\r\n\r\n                </ScrollView>\r\n            )\r\n\r\n        }\r\n}\r\n\r\n\r\n\r\nconst styleProfile = StyleSheet.create({\r\n    container: {\r\n        backgroundColor: '#252626'\r\n    },\r\n    Text: {\r\n        color:'#ffffff',\r\n        fontSize: 20\r\n        \r\n    }\r\n\r\n});\r\n\r\n\r\nexport default PlayerProfile;"]},"metadata":{},"sourceType":"module"}