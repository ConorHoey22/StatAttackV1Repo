{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\StatsAppNative\\\\MyApp\\\\screens\\\\PlayerRegistrationScreen\\\\PlayerRegistrationScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useEffect, useState, Component } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\n\nvar PlayerRegistrationScreen = function (_Component) {\n  _inherits(PlayerRegistrationScreen, _Component);\n\n  var _super = _createSuper(PlayerRegistrationScreen);\n\n  function PlayerRegistrationScreen(props) {\n    var _this;\n\n    _classCallCheck(this, PlayerRegistrationScreen);\n\n    _this = _super.call(this, props);\n\n    _this.NewAccountSignUp = function () {\n      var _this$state = _this.state,\n          fullName = _this$state.fullName,\n          email = _this$state.email,\n          password = _this$state.password,\n          inviteCode = _this$state.inviteCode,\n          sportType = _this$state.sportType;\n\n      if (fullName.length > 0) {} else {\n        alert(\"Please enter your full name.\");\n      }\n\n      if (_this.state.password !== _this.state.confirmPassword) {\n        alert(\"Passwords don't match.\");\n        return;\n      }\n\n      if (sportType == '') {\n        alert(\"Please select a sport\");\n      }\n\n      firebase.auth().createUserWithEmailAndPassword(email, password).then(function (response) {\n        var uid = response.user.uid;\n        var userType = \"Player\";\n        var data = {\n          id: uid,\n          email: email,\n          fullName: fullName,\n          userType: userType,\n          sportType: sportType,\n          totalGoals: 0,\n          totalPoints: 0,\n          totalPasses: 0,\n          totalShots: 0,\n          totalShotsOnTarget: 0,\n          totalTackles: 0,\n          totalWonTheBall: 0,\n          totalLostTheBall: 0,\n          totalYellowCards: 0,\n          totalRedCards: 0,\n          totalAssists: 0\n        };\n        var usersRef = firebase.database().ref('users/' + uid);\n        usersRef.set(data).then(function () {\n          return alert(\"Account Created\", _this.props.navigation.navigate('Login'));\n        });\n      });\n    };\n\n    _this.LinkAccount = function () {\n      var _this$state2 = _this.state,\n          fullName = _this$state2.fullName,\n          email = _this$state2.email,\n          password = _this$state2.password,\n          inviteCode = _this$state2.inviteCode,\n          sportType = _this$state2.sportType,\n          teamAdminInvite = _this$state2.teamAdminInvite;\n\n      if (_this.state.fullName.length > 0) {} else {\n        alert(\"Please enter your full name.\");\n        return;\n      }\n\n      if (_this.state.password.length > 6) {} else {\n        alert(\"Password must be greater than 6 characters.\");\n        return;\n      }\n\n      if (_this.state.password !== _this.state.confirmPassword) {\n        alert(\"Passwords don't match.\");\n        return;\n      }\n\n      if (_this.state.sportType == '') {\n        alert(\"Please select a sport\");\n        return;\n      }\n\n      if (_this.state.email == '') {\n        alert(\"Please enter your email\");\n        return;\n      }\n\n      var reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n      if (reg.test(_this.state.email) === false) {\n        alert(\"Email is Not Correct\");\n        return;\n      }\n\n      if (_this.state.teamAdminInvite == '') {\n        alert(\"Please enter your team invite code\");\n        return;\n      }\n\n      if (_this.state.inviteCode == '') {\n        alert(\"Please enter your player invite code\");\n        return;\n      }\n\n      var userteaminvitecode = firebase.database().ref('/teams').orderByChild(\"teamAdminInvite\").equalTo(teamAdminInvite).once('value').then(function (snapshot) {\n        if (snapshot.exists()) {\n          snapshot.forEach(function (childSnapshot) {\n            var value = childSnapshot.val();\n            var HA_ID = value.CreatedByUserID;\n            var find = firebase.database().ref('teams').child(HA_ID).child('players').orderByChild('inviteCode').equalTo(inviteCode).once('value').then(function (snapshot1) {\n              if (snapshot1.exists()) {\n                snapshot1.forEach(function (childSnapshot1) {\n                  var value1 = childSnapshot1.val();\n                  var dd = value1.Verified;\n\n                  if (value1.Verified == false) {\n                    firebase.auth().createUserWithEmailAndPassword(email, password).then(function (response) {\n                      var uid = response.user.uid;\n                      var userType = \"Player\";\n                      var data = {\n                        id: uid,\n                        email: email,\n                        fullName: fullName,\n                        userType: userType,\n                        sportType: sportType,\n                        inviteCode: inviteCode,\n                        hasATeam: true,\n                        totalGoals: 0,\n                        totalPoints: 0,\n                        totalPasses: 0,\n                        totalShots: 0,\n                        totalShotsOnTarget: 0,\n                        totalTackles: 0,\n                        totalWonTheBall: 0,\n                        totalLostTheBall: 0,\n                        totalYellowCards: 0,\n                        totalRedCards: 0,\n                        totalAssists: 0\n                      };\n                      var usersRef = firebase.database().ref('users/' + uid);\n                      usersRef.set(data).then(function () {});\n                      childSnapshot1.ref.update({\n                        UserID: data.id,\n                        Verified: true,\n                        inviteCode: ''\n                      });\n                      alert('Account Created Successfully. Try to logging in', [{\n                        text: 'Proceed to Login',\n                        onPress: function onPress() {\n                          return navigation.navigate('Login');\n                        }\n                      }], {\n                        cancelable: false\n                      });\n                    });\n                  } else {\n                    alert('This player account has already been activated. Please contact you team admin.');\n                  }\n                });\n              } else {\n                alert('Invalid player invite code- Please try again.');\n              }\n            });\n          });\n        } else {\n          alert('Invalid team invite code- Please try again.');\n        }\n      });\n    };\n\n    _this.SignUpOptionExistingAcccount = function () {\n      _this.setState({\n        displayOptions: false\n      });\n\n      _this.setState({\n        displayExistingSignup: true\n      });\n\n      _this.setState({\n        displayNewAccountSignup: false\n      });\n    };\n\n    _this.SignUpOptionNewAccount = function () {\n      _this.setState({\n        displayOptions: false\n      });\n\n      _this.setState({\n        displayExistingSignup: false\n      });\n\n      _this.setState({\n        displayNewAccountSignup: true\n      });\n    };\n\n    _this.ExistingPlayerRegistration = function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.setState({\n                AccountCreationStatus: true\n              });\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      fullName: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      inviteCode: '',\n      sportType: '',\n      teamAdminInvite: '',\n      displayOptions: true,\n      displayExistingSignup: false,\n      displayNewAccountSignup: false,\n      HA_ID: '',\n      AccountCreationStatus: false\n    };\n    return _this;\n  }\n\n  _createClass(PlayerRegistrationScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var options;\n      var displayOptions = this.state.displayOptions;\n      var displayExistingSignup = this.state.displayExistingSignup;\n      var AccountCreationStatus = this.state.AccountCreationStatus;\n\n      if (AccountCreationStatus == true) {}\n\n      if (displayOptions == true) {\n        options = React.createElement(ScrollView, {\n          style: stylesPlayerReg.container,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 718,\n            columnNumber: 18\n          }\n        }, React.createElement(Text, {\n          style: stylesPlayerReg.footerText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 720,\n            columnNumber: 20\n          }\n        }, \"Has your team already created a temporary player account for you? If so click the below!\"), React.createElement(TouchableOpacity, {\n          style: stylesPlayerReg.button,\n          onPress: this.SignUpOptionExistingAcccount,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 723,\n            columnNumber: 30\n          }\n        }, React.createElement(Text, {\n          style: stylesPlayerReg.buttonTitle,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 724,\n            columnNumber: 34\n          }\n        }, \"Existing Player account\")), React.createElement(Text, {\n          style: stylesPlayerReg.footerText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 729,\n            columnNumber: 29\n          }\n        }, \"Click below if you want to create a new player account!\"), React.createElement(TouchableOpacity, {\n          style: stylesPlayerReg.button,\n          onPress: this.SignUpOptionNewAccount,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 732,\n            columnNumber: 30\n          }\n        }, React.createElement(Text, {\n          style: stylesPlayerReg.buttonTitle,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 733,\n            columnNumber: 34\n          }\n        }, \"New Player Account\")));\n      }\n\n      if (displayExistingSignup == true) {\n        options = React.createElement(ScrollView, {\n          style: stylesPlayerReg.container,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 748,\n            columnNumber: 17\n          }\n        }, React.createElement(Text, {\n          style: stylesPlayerReg.footerText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 749,\n            columnNumber: 17\n          }\n        }, \" Please enter your full name:\"), React.createElement(TextInput, {\n          style: stylesPlayerReg.input,\n          placeholderTextColor: \"#aaaaaa\",\n          placeholder: \"Please enter your full name\",\n          onChangeText: function onChangeText(text) {\n            return _this2.setState({\n              fullName: text\n            });\n          },\n          value: this.state.fullName,\n          underlineColorAndroid: \"transparent\",\n          autoCapitalize: \"none\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 750,\n            columnNumber: 17\n          }\n        }), React.createElement(Text, {\n          style: stylesPlayerReg.footerText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 761,\n            columnNumber: 17\n          }\n        }, \" Please enter your email:\"), React.createElement(TextInput, {\n          style: stylesPlayerReg.input,\n          placeholderTextColor: \"#aaaaaa\",\n          placeholder: \"Please enter your email\",\n          onChangeText: function onChangeText(text) {\n            return _this2.setState({\n              email: text\n            });\n          },\n          value: this.state.email,\n          underlineColorAndroid: \"transparent\",\n          autoCapitalize: \"none\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 762,\n            columnNumber: 17\n          }\n        }), React.createElement(Text, {\n          style: stylesPlayerReg.footerText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 773,\n            columnNumber: 17\n          }\n        }, \" Please enter your password:\"), React.createElement(TextInput, {\n          style: stylesPlayerReg.input,\n          placeholderTextColor: \"#aaaaaa\",\n          secureTextEntry: true,\n          placeholder: \"Password\",\n          onChangeText: function onChangeText(text) {\n            return _this2.setState({\n              password: text\n            });\n          },\n          value: this.state.password,\n          underlineColorAndroid: \"transparent\",\n          autoCapitalize: \"none\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 774,\n            columnNumber: 17\n          }\n        }), React.createElement(Text, {\n          style: stylesPlayerReg.footerText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 785,\n            columnNumber: 18\n          }\n        }, \" Please confirm your password:\"), React.createElement(TextInput, {\n          style: stylesPlayerReg.input,\n          placeholderTextColor: \"#aaaaaa\",\n          secureTextEntry: true,\n          placeholder: \"Confirm Password\",\n          onChangeText: function onChangeText(text) {\n            return _this2.setState({\n              confirmPassword: text\n            });\n          },\n          value: this.state.confirmPassword,\n          underlineColorAndroid: \"transparent\",\n          autoCapitalize: \"none\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 786,\n            columnNumber: 17\n          }\n        }), React.createElement(Text, {\n          style: stylesPlayerReg.footerText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 799,\n            columnNumber: 17\n          }\n        }, \" Please confirm your sport:\"), React.createElement(Picker, {\n          selectedValue: this.state.sportType,\n          style: stylesPlayerReg.input,\n          onValueChange: function onValueChange(text) {\n            return _this2.setState({\n              sportType: text\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 801,\n            columnNumber: 17\n          }\n        }, React.createElement(Picker.Item, {\n          label: \"Select a sport\",\n          value: \"\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 807,\n            columnNumber: 29\n          }\n        }), React.createElement(Picker.Item, {\n          label: \"GAA\",\n          value: \"GAA\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 808,\n            columnNumber: 29\n          }\n        }), React.createElement(Picker.Item, {\n          label: \"Soccer\",\n          value: \"Soccer\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 809,\n            columnNumber: 29\n          }\n        })), React.createElement(Text, {\n          style: stylesPlayerReg.footerText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 814,\n            columnNumber: 17\n          }\n        }, \"Please enter your \\\"PLAYER\\\" invite code. This can be obtained from your Team Analyst:\"), React.createElement(TextInput, {\n          style: stylesPlayerReg.input,\n          placeholderTextColor: \"#aaaaaa\",\n          placeholder: \"Please enter your Player invite code\",\n          onChangeText: function onChangeText(text) {\n            return _this2.setState({\n              inviteCode: text\n            });\n          },\n          value: this.state.inviteCode,\n          underlineColorAndroid: \"transparent\",\n          autoCapitalize: \"none\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 815,\n            columnNumber: 17\n          }\n        }), React.createElement(Text, {\n          style: stylesPlayerReg.footerText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 826,\n            columnNumber: 17\n          }\n        }, \"Please enter your \\\"TEAM\\\" invite code. This can be obtained from your Team Analyst:\"), React.createElement(TextInput, {\n          style: stylesPlayerReg.input,\n          placeholderTextColor: \"#aaaaaa\",\n          placeholder: \"Please enter your Team invite code\",\n          onChangeText: function onChangeText(text) {\n            return _this2.setState({\n              teamAdminInvite: text\n            });\n          },\n          value: this.state.teamAdminInvite,\n          underlineColorAndroid: \"transparent\",\n          autoCapitalize: \"none\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 827,\n            columnNumber: 17\n          }\n        }), React.createElement(View, {\n          style: stylesPlayerReg.footerView,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 837,\n            columnNumber: 17\n          }\n        }, React.createElement(TouchableOpacity, {\n          style: stylesPlayerReg.button,\n          onPress: this.LinkAccount,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 838,\n            columnNumber: 21\n          }\n        }, React.createElement(Text, {\n          style: stylesPlayerReg.buttonTitle,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 845,\n            columnNumber: 21\n          }\n        }, \"Sign up!\"))));\n      }\n\n      return React.createElement(ScrollView, {\n        style: stylesPlayerReg.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 963,\n          columnNumber: 17\n        }\n      }, options);\n    }\n  }]);\n\n  return PlayerRegistrationScreen;\n}(Component);\n\nvar stylesPlayerReg = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#252626'\n  },\n  logo: {\n    flex: 1,\n    height: 120,\n    width: 90,\n    alignSelf: \"center\",\n    margin: 30\n  },\n  input: {\n    height: 48,\n    borderRadius: 5,\n    overflow: 'hidden',\n    backgroundColor: 'white',\n    marginTop: 10,\n    marginBottom: 10,\n    marginLeft: 30,\n    marginRight: 30,\n    paddingLeft: 16\n  },\n  button: {\n    backgroundColor: '#C30000',\n    marginLeft: 30,\n    marginRight: 30,\n    marginTop: 20,\n    height: 48,\n    borderRadius: 5,\n    borderWidth: 2,\n    borderColor: '#000000',\n    alignItems: \"center\",\n    justifyContent: 'center'\n  },\n  buttonTitle: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: \"bold\"\n  },\n  footerView: {\n    flex: 1,\n    alignItems: \"center\",\n    marginTop: 20\n  },\n  footerText: {\n    fontSize: 18,\n    height: 30,\n    marginTop: 15,\n    marginBottom: 5,\n    marginLeft: 20,\n    marginRight: 30,\n    paddingLeft: 10,\n    color: 'white',\n    fontWeight: \"bold\"\n  },\n  footerLink: {\n    color: \"#788eec\",\n    fontWeight: \"bold\",\n    fontSize: 16\n  }\n});\nexport default PlayerRegistrationScreen;","map":{"version":3,"sources":["D:/StatsAppNative/MyApp/screens/PlayerRegistrationScreen/PlayerRegistrationScreen.js"],"names":["React","useEffect","useState","Component","firebase","PlayerRegistrationScreen","props","NewAccountSignUp","state","fullName","email","password","inviteCode","sportType","length","alert","confirmPassword","auth","createUserWithEmailAndPassword","then","response","uid","user","userType","data","id","totalGoals","totalPoints","totalPasses","totalShots","totalShotsOnTarget","totalTackles","totalWonTheBall","totalLostTheBall","totalYellowCards","totalRedCards","totalAssists","usersRef","database","ref","set","navigation","navigate","LinkAccount","teamAdminInvite","reg","test","userteaminvitecode","orderByChild","equalTo","once","snapshot","exists","forEach","childSnapshot","value","val","HA_ID","CreatedByUserID","find","child","snapshot1","childSnapshot1","value1","dd","Verified","hasATeam","update","UserID","text","onPress","cancelable","SignUpOptionExistingAcccount","setState","displayOptions","displayExistingSignup","displayNewAccountSignup","SignUpOptionNewAccount","ExistingPlayerRegistration","AccountCreationStatus","options","stylesPlayerReg","container","footerText","button","buttonTitle","input","footerView","StyleSheet","create","flex","backgroundColor","logo","height","width","alignSelf","margin","borderRadius","overflow","marginTop","marginBottom","marginLeft","marginRight","paddingLeft","borderWidth","borderColor","alignItems","justifyContent","color","fontSize","fontWeight","footerLink"],"mappings":"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","sourcesContent":["\r\nimport React, { useEffect, useState , Component  } from 'react'\r\nimport {FlatList, Keyboard,  StyleSheet, Text, ScrollView ,View , TouchableOpacity,TextInput ,Picker, Button , Alert} from 'react-native'\r\n\r\nimport firebase from 'firebase/app'\r\n import 'firebase/auth';\r\nimport 'firebase/database';\r\n\r\n\r\nclass PlayerRegistrationScreen extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n         this.state = {\r\n            fullName: '',\r\n             email: '', \r\n             password: '',\r\n             confirmPassword:'',\r\n             inviteCode:'',\r\n             sportType:'',\r\n             teamAdminInvite:'',\r\n          \r\n             displayOptions: true,\r\n             displayExistingSignup: false,\r\n             displayNewAccountSignup:false,\r\n             HA_ID:'',\r\n             AccountCreationStatus:false\r\n            \r\n\r\n        \r\n        }\r\n\r\n\r\n    \r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    \r\n\r\n  \r\n\r\n// //                 // console.log('User Found');\r\n// //         //When someone creates account using the same Teaminvitecode and playercode which has already been created before/ used? \r\n// //             //What should be prompt\r\n// //             //What is the current process looking like , are they able to join a team or are they added to the team??\r\n\r\n\r\n// //         // const { fullName, email, password , inviteCode , sportType , teamAdminInvite  } = this.state;\r\n\r\n\r\n// //             // var AccountCreationStatus = this.state.AccountCreationStatus;\r\n    \r\n// //           var fullName = this.state.fullName;\r\n// //           var email = this.state.email;\r\n// //           var password = this.state.password;\r\n// //           var inviteCode = this.state.inviteCode;\r\n// //           var sportType = this.state.sportType;\r\n// //           var teamAdminInvite = this.state.teamAdminInvite;\r\n      \r\n\r\n// //             //  if (fullName.length > 0) {\r\n                \r\n                     \r\n// //             //  }\r\n// //             //  else\r\n// //             //  {\r\n// //             //     return alert(\"Please enter your full name.\")\r\n// //             //  }\r\n\r\n       \r\n// //             //  //  Password confirmation Check\r\n// //             //  if (this.state.password !== this.state.confirmPassword) {\r\n// //             //     return alert(\"Passwords don't match.\")\r\n                \r\n// //             //  }\r\n\r\n\r\n// //             //  if(sportType == '')\r\n// //             //  {\r\n// //             //     return alert(\"Please select a sport\")\r\n               \r\n// //             //  }\r\n\r\n// //             //  if(email == '')\r\n// //             //  {\r\n// //             //     return alert(\"Please enter your email\")\r\n                \r\n// //             //  }\r\n\r\n\r\n           \r\n       \r\n// //             //  let reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n// //             //  if (reg.test(email) === false) \r\n// //             //  {\r\n// //             //    return alert(\"Email is Not Correct\");\r\n               \r\n\r\n\r\n// //             //  }\r\n                     \r\n               \r\n                \r\n             \r\n\r\n// //             //  if(teamAdminInvite == '')\r\n// //             //  {\r\n// //             //     return alert(\"Please enter your team invite code\");\r\n            \r\n// //             //  }\r\n\r\n// //             //  if(inviteCode == '')\r\n// //             //  {\r\n// //             //     return alert(\"Please enter your player invite code\");\r\n               \r\n// //             //  }\r\n\r\n\r\n// //         // GET team An UID by have a matching Team Invite code entered by the user\r\n \r\n\r\n// //         //This Function is if the a Team Admin has created a temporary player account for this user and now the user would like to activate a proper User/Player Account\r\n\r\n\r\n\r\n// //             //First Find the Team \r\n// //             //find the player matching team record with invitecode \r\n// //                 //IF success - Update UserID with new ID \r\n// //                 //ELSE - Fail , already in use or activated\r\n\r\n\r\n// //         //Find the Team \r\n// //             const findTeam = firebase.database().ref('/teams').orderByChild(\"teamAdminInvite\").equalTo(teamAdminInvite)\r\n// //             .once('value').then(function(snapshot) {\r\n// //                 //IF TEAM INVITE CODE EXISTS\r\n// //                 if(snapshot.exists()) {\r\n                    \r\n// //                         snapshot.forEach(function (childSnapshot) {\r\n\r\n// //                         var value = childSnapshot.val();\r\n\r\n\r\n// //                         //obtain the TEAM id\r\n// //                         var HA_ID = value.CreatedByUserID;\r\n   \r\n// //                         var TeamRecordSportType = value.SportType; \r\n   \r\n   \r\n   \r\n                   \r\n\r\n// //                     // Find matching team player record \r\n// //                     const find = firebase.database().ref('teams').child(HA_ID).child('players').orderByChild('inviteCode').equalTo(inviteCode)\r\n// //                          .once('value').then(function(snapshot1)  {\r\n\r\n// //                         if(snapshot.exists()) {\r\n                            \r\n// //                             snapshot1.forEach(function (childSnapshot1) {\r\n\r\n// //                                 var value1 = childSnapshot1.val();\r\n\r\n// //                                 var VerifiedVariable = value1.Verified;\r\n\r\n                                \r\n// //                                 //Check that SportType matches temp Player Record\r\n\r\n// //                                 if(TeamRecordSportType == sportType)\r\n// //                                 {\r\n\r\n// //                                     //Account Verification check\r\n// //                                     if(value1.Verified == false)\r\n// //                                     {\r\n// //                                             // Create User Account\r\n// //                                             firebase\r\n// //                                             .auth()\r\n// //                                             .createUserWithEmailAndPassword(email, password)\r\n// //                                             .then((response) => {\r\n// //                                                 const uid = response.user.uid\r\n// //                                                 const userType = \"Player\"\r\n\r\n\r\n// //                                                 if(sportType == 'GAA')\r\n// //                                                 {\r\n\r\n// // //Try set state here\r\n// // //Rewrite it\r\n\r\n// //                                                     // this.setState()\r\n\r\n// //                                                     const data = {\r\n// //                                                             id: uid,\r\n// //                                                             teamID: HA_ID,\r\n// //                                                             email: email,\r\n// //                                                             fullName: fullName,\r\n// //                                                             userType:  userType,\r\n// //                                                             totalPoints:0,\r\n// //                                                             totalPasses: 0,\r\n// //                                                             totalShots:0,\r\n// //                                                             totalShotsOnTarget:0,\r\n// //                                                             totalTackles:0,\r\n// //                                                             totalWonTheBall:0,\r\n// //                                                             totalLostTheBall:0,\r\n// //                                                             totalYellowCards:0,\r\n// //                                                             totalRedCards:0,\r\n// //                                                             totalAssists:0\r\n// //                                                     };\r\n\r\n\r\n// //                                                     const usersRef = firebase.database().ref('users/' + uid)\r\n// //                                                     usersRef\r\n// //                                                         .set(data)\r\n// //                                                          .then(() => {\r\n                                                     \r\n\r\n// //                                                             childSnapshot1.ref.update({UserID: data.id , Verified: true, inviteCode:''});\r\n// //                                                             // return alert(\"Account Created\", this.props.navigation.navigate('Login'));\r\n// //                                                             function1();\r\n\r\n\r\n                                          \r\n// //                                                             // this.handleAuthorChange();\r\n                                                          \r\n                                        \r\n                                                          \r\n                                    \r\n                                                             \r\n                                                    \r\n                                                \r\n\r\n                                                    \r\n// //                                                         });\r\n\r\n                                                    \r\n                                                        \r\n                                                \r\n\r\n// //                                                 }\r\n// //                                                 else if(sportType == 'Soccer')\r\n// //                                                 {\r\n// //                                                     const data = {\r\n// //                                                         id: uid,\r\n// //                                                         teamID: HA_ID,\r\n// //                                                         email: email,\r\n// //                                                         fullName: fullName,\r\n// //                                                         userType:   userType,\r\n// //                                                         totalPasses: 0,\r\n// //                                                         totalShots:0,\r\n// //                                                         totalShotsOnTarget:0,\r\n// //                                                         totalTackles:0,\r\n// //                                                         totalWonTheBall:0,\r\n// //                                                         totalLostTheBall:0,\r\n// //                                                         totalYellowCards:0,\r\n// //                                                         totalRedCards:0,\r\n// //                                                         totalAssists:0\r\n// //                                                     };\r\n                                                   \r\n                                                   \r\n// //                                                     const usersRef = firebase.database().ref('users/' + uid)\r\n// //                                                     usersRef\r\n// //                                                         .set(data)\r\n// //                                                         // .then(() => {\r\n// //                                                             then(res => {\r\n                                                            \r\n// //                                                             // useState({AccountCreationStatus:true});\r\n                                                            \r\n// //                                                             childSnapshot1.ref.update({UserID: data.id , Verified: true, inviteCode:''});\r\n                                                         \r\n                                                       \r\n// //                                                             return alert(\"Account Created\", this.props.navigation.navigate('Login'));\r\n                                      \r\n\r\n                                                              \r\n        \r\n\r\n// //                                                         });\r\n\r\n\r\n                                         \r\n// //                                                 }\r\n    \r\n\r\n// //                                             });\r\n\r\n// //                                         }\r\n                                       \r\n                                    \r\n\r\n// //                                     }\r\n// //                                     else\r\n// //                                     {\r\n                                      \r\n// //                                         return alert('Sport type does not match existing account - Please Try Again');\r\n                                      \r\n// //                                     }\r\n                                \r\n\r\n// //                             });\r\n\r\n// //                         }\r\n// //                         else{\r\n                            \r\n                           \r\n// //                             return alert('Unable to find Player record - Please enter a valid Player invite code');\r\n                            \r\n// //                         }\r\n                  \r\n// //                         });\r\n\r\n\r\n// //                     });\r\n                \r\n// //                 }\r\n// //                 else{\r\n// //                         //INVALID TEAM INVITE CODE\r\n// //                         alert('Please provide a valid team invite code');\r\n// //                         return;\r\n// //                 }\r\n// //             }) // END SNAPSHOT - FindTeam\r\n\r\n// //     }\r\n    \r\n  \r\n   \r\n    NewAccountSignUp = () => {\r\n        \r\n        const { fullName, email, password , inviteCode, sportType} = this.state\r\n\r\n\r\n\r\n        if (fullName.length > 0) \r\n        {\r\n            \r\n                 \r\n        }\r\n        else\r\n        {\r\n            alert(\"Please enter your full name.\")\r\n        }\r\n     \r\n        //  Password confirmation Check\r\n        if (this.state.password !== this.state.confirmPassword) {\r\n            alert(\"Passwords don't match.\")\r\n            return\r\n        }\r\n\r\n        \r\n        if(sportType == '')\r\n        {\r\n            alert(\"Please select a sport\")\r\n        }\r\n\r\n\r\n\r\n\r\n                // Create user\r\n                            firebase\r\n                            .auth()\r\n                            .createUserWithEmailAndPassword(email, password)\r\n                                .then((response) => {\r\n                                     const uid = response.user.uid\r\n                                        \r\n                                        const userType = \"Player\"\r\n                                        const data = {\r\n                                            id: uid,\r\n                                            email: email,\r\n                                            fullName: fullName,\r\n                                            userType:  userType,\r\n                                            sportType: sportType,\r\n                                            totalGoals:0,\r\n                                            totalPoints:0,\r\n                                            totalPasses: 0,\r\n                                            totalShots:0,\r\n                                            totalShotsOnTarget:0,\r\n                                            totalTackles:0,\r\n                                            totalWonTheBall:0,\r\n                                            totalLostTheBall:0,\r\n                                            totalYellowCards:0,\r\n                                            totalRedCards:0,\r\n                                            totalAssists:0\r\n\r\n                                        };\r\n                                \r\n\r\n                                        const usersRef = firebase.database().ref('users/' + uid)\r\n                                            usersRef\r\n                                                .set(data)\r\n                                                    .then(() => {\r\n                                                        \r\n                                                         return alert(\"Account Created\", this.props.navigation.navigate('Login'));\r\n                                    \r\n                                                    });\r\n                                    \r\n                                        });\r\n\r\n    }\r\n\r\n\r\n//     SignUpOptionExistingAcccount = () => {\r\n\r\n//         this.setState({displayOptions: false});\r\n//         this.setState({displayExistingSignup: true});\r\n//         this.setState({displayNewAccountSignup: false});\r\n//     }\r\n\r\n\r\n\r\n//     SignUpOptionNewAccount = () => {\r\n\r\n//         this.setState({displayOptions: false});\r\n//         this.setState({displayExistingSignup: false});\r\n//         this.setState({displayNewAccountSignup: true});\r\n//     }\r\n\r\n\r\n\r\n\r\n    LinkAccount = () => {\r\n\r\n\r\n      \r\n        const { fullName, email, password , inviteCode , sportType , teamAdminInvite} = this.state;\r\n\r\n        //   FullName Check\r\n        if (this.state.fullName.length > 0) {\r\n                            \r\n                                \r\n        }  \r\n        else\r\n        {\r\n             alert(\"Please enter your full name.\");\r\n             return;\r\n        }    \r\n\r\n\r\n        //   Password confirmation Check\r\n        if (this.state.password.length > 6) {\r\n                            \r\n                                \r\n        }  \r\n        else\r\n        {\r\n             alert(\"Password must be greater than 6 characters.\");\r\n             return;\r\n        }    \r\n\r\n\r\n     //   Password confirmation Check\r\n         if (this.state.password !== this.state.confirmPassword) \r\n         {\r\n             alert(\"Passwords don't match.\");\r\n             return;\r\n         }\r\n\r\n     //  Sport Type check\r\n         if(this.state.sportType == '')\r\n         {\r\n             alert(\"Please select a sport\");\r\n             return;\r\n         }\r\n     \r\n         if(this.state.email == '')\r\n         {\r\n                  alert(\"Please enter your email\")\r\n                  return;\r\n                         \r\n         }\r\n       \r\n\r\n                     let reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n                     if (reg.test(this.state.email) === false) \r\n                     {\r\n                          alert(\"Email is Not Correct\");\r\n                          return;\r\n                     }\r\n                            \r\n\r\n                     if(this.state.teamAdminInvite == '')\r\n                     {\r\n                         alert(\"Please enter your team invite code\");\r\n                         return;\r\n                   \r\n                     }\r\n       \r\n                     if(this.state.inviteCode == '')\r\n                     {\r\n                         alert(\"Please enter your player invite code\");\r\n                         return;\r\n                      \r\n                     }\r\n\r\n\r\n\r\n\r\n        //GET team An UID by have a matching Team Invite code entered by the user\r\n    \r\n\r\n     \r\n\r\n        const userteaminvitecode = firebase.database().ref('/teams').orderByChild(\"teamAdminInvite\").equalTo(teamAdminInvite)\r\n             .once('value').then(function(snapshot) {\r\n               \r\n                if(snapshot.exists())\r\n                {\r\n                    \r\n                    snapshot.forEach(function (childSnapshot) {\r\n\r\n                    var value = childSnapshot.val();\r\n                    var HA_ID = value.CreatedByUserID;\r\n\r\n                        //Find matching team player record \r\n                        const find = firebase.database().ref('teams').child(HA_ID).child('players').orderByChild('inviteCode').equalTo(inviteCode)\r\n                            .once('value').then(function(snapshot1)  {\r\n\r\n                                //Check if Exists\r\n\r\n                                    if(snapshot1.exists()) \r\n                                    {\r\n                                            snapshot1.forEach(function (childSnapshot1) {\r\n                                        \r\n                                                var value1 = childSnapshot1.val();\r\n\r\n                                                var dd = value1.Verified;\r\n\r\n                                                if(value1.Verified == false)\r\n                                                {\r\n                                                // Create user\r\n                                                        firebase\r\n                                                        .auth()\r\n                                                        .createUserWithEmailAndPassword(email, password)\r\n                                                        .then((response) => {\r\n                                                            const uid = response.user.uid\r\n                                                            const userType = \"Player\"\r\n                                                            const data = {\r\n                                                                id: uid,\r\n                                                                email: email,\r\n                                                                fullName: fullName,\r\n                                                                userType:   userType,\r\n                                                                sportType: sportType,\r\n                                                                inviteCode: inviteCode,\r\n                                                                hasATeam:true,\r\n                                                                totalGoals:0,\r\n                                                                totalPoints:0,\r\n                                                                totalPasses: 0,\r\n                                                                totalShots:0,\r\n                                                                totalShotsOnTarget:0,\r\n                                                                totalTackles:0,\r\n                                                                totalWonTheBall:0,\r\n                                                                totalLostTheBall:0,\r\n                                                                totalYellowCards:0,\r\n                                                                totalRedCards:0,\r\n                                                                totalAssists:0\r\n                                                            };\r\n                                                \r\n\r\n                                                        const usersRef = firebase.database().ref('users/' + uid)\r\n                                                                usersRef\r\n                                                                    .set(data)\r\n                                                                    .then(() => {\r\n                                                                    \r\n                                                                    \r\n\r\n                                                    \r\n                                                                    });\r\n\r\n                                                                    \r\n                                                                    childSnapshot1.ref.update({UserID: data.id , Verified: true, inviteCode:''});\r\n                                                        \r\n                                                                \r\n                                                                \r\n                                                                    alert('Account Created Successfully. Try to logging in' ,  \r\n                                                                [\r\n                                                                   \r\n                                                                    {text: 'Proceed to Login', onPress:  () => navigation.navigate('Login')},\r\n                                                                ],\r\n                                                                { cancelable: false }\r\n                                                                );\r\n                                    \r\n                                                                \r\n                                                                \r\n                                                                \r\n                                                                \r\n                                                                \r\n                                                                //   , this.props.navigation.navigate('Login'));\r\n                                                                    //Send user to Login screen \r\n\r\n\r\n\r\n                                                        })\r\n\r\n\r\n                                                        \r\n                                                }\r\n                                                else{\r\n                                                    alert('This player account has already been activated. Please contact you team admin.');\r\n                                                }\r\n                                            \r\n                                            })\r\n                                        }\r\n                                        else\r\n                                        {\r\n                                            alert('Invalid player invite code- Please try again.');\r\n                                        }\r\n\r\n                                    })\r\n                       \r\n\r\n                                })\r\n                            }\r\n                            else\r\n                            {\r\n                                alert('Invalid team invite code- Please try again.');\r\n                            }\r\n                            \r\n                                \r\n                       \r\n    \r\n                        });\r\n\r\n                \r\n            \r\n\r\n    }\r\n\r\nSignUpOptionExistingAcccount = () => {\r\n\r\n        this.setState({displayOptions: false});\r\n        this.setState({displayExistingSignup: true});\r\n        this.setState({displayNewAccountSignup: false});\r\n}\r\n\r\n\r\n\r\nSignUpOptionNewAccount = () => {\r\n\r\n        this.setState({displayOptions: false});\r\n        this.setState({displayExistingSignup: false});\r\n        this.setState({displayNewAccountSignup: true});\r\n}\r\n\r\n\r\n\r\nExistingPlayerRegistration = async() => {\r\n\r\n    this.setState({AccountCreationStatus:true});\r\n \r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n     render(){\r\n\r\n        var options; \r\n\r\n        var displayOptions = this.state.displayOptions;\r\n\r\n        var displayExistingSignup = this.state.displayExistingSignup;\r\n\r\n        var AccountCreationStatus = this.state.AccountCreationStatus;\r\n\r\n\r\n\r\n\r\n\r\n        if(AccountCreationStatus == true)\r\n        {\r\n    \r\n            // if(fullName === \"\"){\r\n            //     options = (\r\n            \r\n        \r\n            //         alert(\r\n            //                 \"Alert Title\",\r\n            //                 \"My Alert Msg\",\r\n            //                 [\r\n            //                 {\r\n            //                     text: \"Ask me later\",\r\n            //                     onPress: () => console.log(\"Ask me later pressed\")\r\n            //                 },\r\n            //                 {\r\n            //                     text: \"Cancel\",\r\n            //                     onPress: () => console.log(\"Cancel Pressed\"),\r\n            //                     style: \"cancel\"\r\n            //                 },\r\n            //                 { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\r\n            //                 ]\r\n            //             )\r\n        \r\n            //         );\r\n            // }\r\n\r\n\r\n        }\r\n\r\n\r\n        if(displayOptions == true)\r\n        {\r\n             options = (\r\n                 <ScrollView style={stylesPlayerReg.container}>\r\n                  \r\n                   <Text style={stylesPlayerReg.footerText}>Has your team already created a temporary player account for you? If so click the below!</Text>\r\n\r\n                  \r\n                             <TouchableOpacity style={stylesPlayerReg.button} onPress={this.SignUpOptionExistingAcccount}>\r\n                                 <Text style={stylesPlayerReg.buttonTitle}>Existing Player account</Text>\r\n                             </TouchableOpacity>\r\n                   \r\n\r\n        \r\n                            <Text style={stylesPlayerReg.footerText}>Click below if you want to create a new player account!</Text>\r\n\r\n               \r\n                             <TouchableOpacity style={stylesPlayerReg.button} onPress={this.SignUpOptionNewAccount}>\r\n                                 <Text style={stylesPlayerReg.buttonTitle}>New Player Account</Text>\r\n                             </TouchableOpacity>\r\n                   \r\n\r\n\r\n                 </ScrollView>\r\n\r\n             )\r\n        }\r\n\r\n\r\n\r\n        if(displayExistingSignup == true)\r\n        {\r\n            options = (\r\n                <ScrollView style={stylesPlayerReg.container}>\r\n                <Text style={stylesPlayerReg.footerText}> Please enter your full name:</Text>\r\n                <TextInput\r\n                    style={stylesPlayerReg.input}\r\n                    placeholderTextColor=\"#aaaaaa\"\r\n                    placeholder='Please enter your full name'\r\n                    // onChangeText={(text) => setFullName(text)}\r\n                    onChangeText={(text) => this.setState({fullName:text})}\r\n                    value={this.state.fullName}\r\n                    underlineColorAndroid=\"transparent\"\r\n                    autoCapitalize=\"none\"\r\n                />\r\n\r\n                <Text style={stylesPlayerReg.footerText}> Please enter your email:</Text>\r\n                <TextInput\r\n                    style={stylesPlayerReg.input}\r\n                    placeholderTextColor=\"#aaaaaa\"\r\n                    placeholder='Please enter your email'\r\n                    // onChangeText={(text) => setEmail(text)}\r\n                    onChangeText={(text) => this.setState({email:text})}\r\n                    value={this.state.email}\r\n                    underlineColorAndroid=\"transparent\"\r\n                    autoCapitalize=\"none\"\r\n                />\r\n\r\n                <Text style={stylesPlayerReg.footerText}> Please enter your password:</Text>\r\n                <TextInput\r\n                    style={stylesPlayerReg.input}\r\n                    placeholderTextColor=\"#aaaaaa\"\r\n                    secureTextEntry\r\n                    placeholder='Password'\r\n                    // onChangeText={(text) => setPassword(text)}\r\n                    onChangeText={(text) => this.setState({password:text})}\r\n                    value={this.state.password}\r\n                    underlineColorAndroid=\"transparent\"\r\n                    autoCapitalize=\"none\"\r\n                />\r\n                 <Text style={stylesPlayerReg.footerText}> Please confirm your password:</Text>\r\n                <TextInput\r\n                    style={stylesPlayerReg.input}\r\n                    placeholderTextColor=\"#aaaaaa\"\r\n                    secureTextEntry\r\n                    placeholder='Confirm Password'\r\n                    // onChangeText={(text) => setConfirmPassword(text)}\r\n                    onChangeText={(text) => this.setState({confirmPassword:text})}\r\n                    value={this.state.confirmPassword}\r\n                    underlineColorAndroid=\"transparent\"\r\n                    autoCapitalize=\"none\"\r\n                />\r\n\r\n\r\n                <Text style={stylesPlayerReg.footerText}> Please confirm your sport:</Text>\r\n              \r\n                <Picker\r\n                        selectedValue={this.state.sportType}\r\n                        style={stylesPlayerReg.input}\r\n                        onValueChange={(text) => this.setState({sportType:text})}\r\n                        >\r\n\r\n                            <Picker.Item label=\"Select a sport\" value=\"\" />\r\n                            <Picker.Item label=\"GAA\" value=\"GAA\" />\r\n                            <Picker.Item label=\"Soccer\" value=\"Soccer\"/>\r\n\r\n\r\n                </Picker>\r\n\r\n                <Text style={stylesPlayerReg.footerText}>Please enter your \"PLAYER\" invite code. This can be obtained from your Team Analyst:</Text>\r\n                <TextInput\r\n                    style={stylesPlayerReg.input}\r\n                    placeholderTextColor=\"#aaaaaa\"\r\n                    placeholder='Please enter your Player invite code'\r\n                    onChangeText={(text) => this.setState({inviteCode:text})}\r\n                    value={this.state.inviteCode}\r\n                    underlineColorAndroid=\"transparent\"\r\n                    autoCapitalize=\"none\"\r\n                />\r\n\r\n\r\n                <Text style={stylesPlayerReg.footerText}>Please enter your \"TEAM\" invite code. This can be obtained from your Team Analyst:</Text>\r\n                <TextInput\r\n                    style={stylesPlayerReg.input}\r\n                    placeholderTextColor=\"#aaaaaa\"\r\n                    placeholder='Please enter your Team invite code'\r\n                    onChangeText={(text) => this.setState({teamAdminInvite:text})}\r\n                    value={this.state.teamAdminInvite}\r\n                    underlineColorAndroid=\"transparent\"\r\n                    autoCapitalize=\"none\"\r\n                />\r\n\r\n                <View style={stylesPlayerReg.footerView}>\r\n                    <TouchableOpacity style={stylesPlayerReg.button}  \r\n                    onPress={this.LinkAccount}>\r\n                     \r\n                     \r\n                \r\n                   \r\n                    \r\n                    <Text style={stylesPlayerReg.buttonTitle}>Sign up!</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n\r\n                {/* onPress={ () => { this.ExistingSignUp(), this.props.navigation.navigate('Login'); }}> */}\r\n        </ScrollView>\r\n\r\n            );\r\n        }\r\n\r\n//         if(this.state.displayNewAccountSignup == true)\r\n//         {\r\n//             options = (\r\n//                 <ScrollView style={stylesPlayerReg.container}>\r\n                \r\n//                 <Text style={stylesPlayerReg.footerText}> New Account</Text>\r\n//                 <Text style={stylesPlayerReg.footerText}> Please enter your full name:</Text>\r\n//                 <TextInput\r\n//                     style={stylesPlayerReg.input}\r\n//                     placeholderTextColor=\"#aaaaaa\"\r\n//                     placeholder='Please enter your full name'\r\n//                     // onChangeText={(text) => setFullName(text)}\r\n//                     onChangeText={(text) => this.setState({fullName:text})}\r\n//                     value={this.state.fullName}\r\n//                     underlineColorAndroid=\"transparent\"\r\n//                     autoCapitalize=\"none\"\r\n//                 />\r\n\r\n//                 <Text style={stylesPlayerReg.footerText}> Please enter your email:</Text>\r\n//                 <TextInput\r\n//                     style={stylesPlayerReg.input}\r\n//                     placeholderTextColor=\"#aaaaaa\"\r\n//                     placeholder='Please enter your email'\r\n//                     // onChangeText={(text) => setEmail(text)}\r\n//                     onChangeText={(text) => this.setState({email:text})}\r\n//                     value={this.state.email}\r\n//                     underlineColorAndroid=\"transparent\"\r\n//                     autoCapitalize=\"none\"\r\n//                 />\r\n\r\n//                 <Text style={stylesPlayerReg.footerText}> Please enter your password:</Text>\r\n//                 <TextInput\r\n//                     style={stylesPlayerReg.input}\r\n//                     placeholderTextColor=\"#aaaaaa\"\r\n//                     secureTextEntry\r\n//                     placeholder='Password'\r\n//                     // onChangeText={(text) => setPassword(text)}\r\n//                     onChangeText={(text) => this.setState({password:text})}\r\n//                     value={this.state.password}\r\n//                     underlineColorAndroid=\"transparent\"\r\n//                     autoCapitalize=\"none\"\r\n//                 />\r\n//                  <Text style={stylesPlayerReg.footerText}> Please confirm your password:</Text>\r\n//                 <TextInput\r\n//                     style={stylesPlayerReg.input}\r\n//                     placeholderTextColor=\"#aaaaaa\"\r\n//                     secureTextEntry\r\n//                     placeholder='Confirm Password'\r\n//                     // onChangeText={(text) => setConfirmPassword(text)}\r\n//                     onChangeText={(text) => this.setState({confirmPassword:text})}\r\n//                     value={this.state.confirmPassword}\r\n//                     underlineColorAndroid=\"transparent\"\r\n//                     autoCapitalize=\"none\"\r\n//                 />\r\n\r\n//                 <Text style={stylesPlayerReg.footerText}> Please confirm your sport:</Text>\r\n                \r\n//                 <Picker\r\n//                         selectedValue={this.state.sportType}\r\n//                         style={stylesPlayerReg.input}\r\n//                         onValueChange={(text) => this.setState({sportType:text})}\r\n//                         >\r\n\r\n//                             <Picker.Item label=\"Select a sport\" value=\"\" />\r\n//                             <Picker.Item label=\"GAA\" value=\"GAA\" />\r\n//                             <Picker.Item label=\"Soccer\" value=\"Soccer\"/>\r\n\r\n\r\n//                 </Picker>\r\n              \r\n//                 <View style={stylesPlayerReg.footerView}>\r\n//                     <TouchableOpacity style={stylesPlayerReg.button} \r\n//                     onPress={ () => { this.NewAccountSignUp, this.props.navigation.navigate('PlayerRegistrationScreen')} }>\r\n//                         <Text style={stylesPlayerReg.buttonTitle}>Sign up!</Text>\r\n//                     </TouchableOpacity>\r\n//                 </View>\r\n\r\n\r\n//         </ScrollView>\r\n\r\n//             );\r\n//         }\r\n\r\n\r\n//         if(this.state.AccountCreationStatus == true)\r\n//         {\r\n\r\n//             options = (\r\n//             <ScrollView>\r\n//                <Text style={stylesPlayerReg.footerText}> Account Created:</Text>\r\n\r\n\r\n\r\n//                <View style={stylesPlayerReg.footerView}>\r\n//                     <TouchableOpacity style={stylesPlayerReg.button} \r\n//                     onPress={ () => { this.props.navigation.navigate('Login')}}>\r\n//                         <Text style={stylesPlayerReg.buttonTitle}>Lets Go</Text>\r\n//                     </TouchableOpacity>\r\n//                 </View>\r\n//             </ScrollView>\r\n\r\n//             );\r\n//         }\r\n\r\n\r\n            \r\n  \r\n            return (\r\n                <ScrollView style={stylesPlayerReg.container}>\r\n                        {options}\r\n                </ScrollView>\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    \r\n\r\n \r\n\r\n\r\n const stylesPlayerReg = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#252626',\r\n    },\r\n   \r\n    logo: {\r\n        flex: 1,\r\n        height: 120,\r\n        width: 90,\r\n        alignSelf: \"center\",\r\n        margin: 30\r\n    },\r\n    input: {\r\n        height: 48,\r\n\r\n        borderRadius: 5,\r\n        overflow: 'hidden',\r\n        backgroundColor: 'white',\r\n        marginTop: 10,\r\n        marginBottom: 10,\r\n        marginLeft: 30,\r\n        marginRight: 30,\r\n        paddingLeft: 16\r\n    },\r\n    button: {\r\n        backgroundColor: '#C30000',\r\n        marginLeft: 30,\r\n        marginRight: 30,\r\n        marginTop: 20,\r\n        height: 48,\r\n        borderRadius: 5,\r\n        borderWidth: 2,\r\n        borderColor:'#000000',\r\n        alignItems: \"center\",\r\n        justifyContent: 'center'\r\n    },\r\n    buttonTitle: {\r\n        color: 'white',\r\n        fontSize: 16,\r\n        fontWeight: \"bold\"\r\n    },\r\n    footerView: {\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        marginTop: 20\r\n    },\r\n    footerText: {\r\n        fontSize:18,\r\n        height: 30,\r\n        marginTop: 15,\r\n        marginBottom: 5,\r\n        marginLeft: 20,\r\n        marginRight: 30,\r\n        paddingLeft: 10,\r\n        color: 'white',\r\n        fontWeight: \"bold\",\r\n    },\r\n    footerLink: {\r\n        color: \"#788eec\",\r\n        fontWeight: \"bold\",\r\n        fontSize: 16\r\n    }\r\n});\r\n\r\n\r\n export default PlayerRegistrationScreen;"]},"metadata":{},"sourceType":"module"}