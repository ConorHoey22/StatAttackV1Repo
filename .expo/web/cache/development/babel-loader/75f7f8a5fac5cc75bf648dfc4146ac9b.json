{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\StatsAppNative\\\\MyApp\\\\screens\\\\ViewGame\\\\ViewGame.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useEffect, useState, Component } from 'react';\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { useNavigation } from '@react-navigation/native';\nimport { createAppContainer } from 'react-navigation';\nimport { createStackNavigator } from 'react-navigation-stack';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport { createKeyboardAwareNavigator, ThemeColors } from 'react-navigation';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\nimport { Picker } from '@react-native-community/picker';\nimport { TapGestureHandler } from 'react-native-gesture-handler';\nvar screenWidth = Dimensions.get('window').width;\nvar screenHeight = Dimensions.get('window').height;\nvar win = Dimensions.get('window');\nvar ratioGaaView = win.width / 590;\nvar ratioSoccerView = win.width / 700;\n\nvar ViewGame = function (_Component) {\n  _inherits(ViewGame, _Component);\n\n  var _super = _createSuper(ViewGame);\n\n  function ViewGame(props) {\n    var _this;\n\n    _classCallCheck(this, ViewGame);\n\n    _this = _super.call(this, props);\n\n    _this.filterGameData = function _callee() {\n      var totalTeamGoals, myUserId, _this$props$navigatio, state, setParams, navigate, params, tempArr, tempArrOpponents, playerArr, OpponentsplayerArr;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              totalTeamGoals = _this.state.totalTeamGoals;\n              myUserId = firebase.auth().currentUser.uid;\n              _this$props$navigatio = _this.props.navigation, state = _this$props$navigatio.state, setParams = _this$props$navigatio.setParams, navigate = _this$props$navigatio.navigate;\n              params = state.params || {};\n              tempArr = [];\n              tempArrOpponents = [];\n\n              try {\n                firebase.database().ref('/teams').child(myUserId).child('games').child(params.GameRecordKey).child('YourTeamStats').child(params.StatsRecordKey).on('value', function (snapshot) {\n                  var gameObj = snapshot.val();\n                  var screenWidth = gameObj.screenWidth;\n\n                  _this.setState({\n                    StatsStoredUsingScreenWidth: screenWidth\n                  });\n\n                  var screenHeight = gameObj.screenHeight;\n\n                  _this.setState({\n                    StatsStoredUsingScreenHeight: screenHeight\n                  });\n\n                  var totalTeamGoals = gameObj.totalTeamGoals;\n\n                  _this.setState({\n                    totalTeamGoals: totalTeamGoals\n                  });\n\n                  var totalTeamShots = gameObj.totalTeamShots;\n\n                  _this.setState({\n                    totalTeamShots: totalTeamShots\n                  });\n\n                  var totalTeamShotsOnTarget = gameObj.totalTeamShotsOnTarget;\n\n                  _this.setState({\n                    totalTeamShotsOnTarget: totalTeamShotsOnTarget\n                  });\n\n                  var OpponentsName = gameObj.OpponentsName;\n\n                  _this.setState({\n                    OpponentsName: OpponentsName\n                  });\n\n                  var totalOpponentsTeamGoals = gameObj.totalOpponentsTeamGoals;\n\n                  _this.setState({\n                    totalOpponentsTeamGoals: totalOpponentsTeamGoals\n                  });\n\n                  var totalOpponentsTeamShots = gameObj.totalOpponentsTeamShots;\n\n                  _this.setState({\n                    totalOpponentsTeamShots: totalOpponentsTeamShots\n                  });\n\n                  var totalOpponentsTeamShotsOnTarget = gameObj.totalOpponentsTeamShotsOnTarget;\n\n                  _this.setState({\n                    totalOpponentsTeamShotsOnTarget: totalOpponentsTeamShotsOnTarget\n                  });\n                });\n                firebase.database().ref('/teams').child(myUserId).child('/games').child(params.GameRecordKey).child('EventFieldPositions').on('value', function (snapshot) {\n                  tempArr = _this.snapshotToArray(snapshot);\n\n                  _this.setState({\n                    EventFieldLocations: tempArr\n                  });\n                });\n                firebase.database().ref('/teams').child(myUserId).child('/games').child(params.GameRecordKey).child('OpponentsEventFieldPositions').on('value', function (snapshot) {\n                  tempArrOpponents = _this.snapshotToArray(snapshot);\n\n                  _this.setState({\n                    OpponentsEventFieldLocations: tempArrOpponents\n                  });\n                });\n                myUserId = firebase.auth().currentUser.uid;\n                playerArr = [];\n                firebase.database().ref('/teams').child(myUserId).child('/games').child(params.GameRecordKey).child('YourTeam').child('players').on('value', function (snapshot) {\n                  playerArr = _this.snapshotToArray(snapshot);\n\n                  _this.setState({\n                    PlayerData: playerArr\n                  });\n                });\n                OpponentsplayerArr = [];\n                firebase.database().ref('/teams').child(myUserId).child('/games').child(params.GameRecordKey).child('Opponents').child('players').on('value', function (snapshot) {\n                  OpponentsplayerArr = _this.snapshotToArray(snapshot);\n\n                  _this.setState({\n                    OpponentsPlayerData: OpponentsplayerArr\n                  });\n                });\n              } catch (err) {}\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.GetSelectedYourTeamPlayerStats = function (value) {\n      return function () {\n        var _this$props$navigatio2 = _this.props.navigation,\n            state = _this$props$navigatio2.state,\n            setParams = _this$props$navigatio2.setParams,\n            navigate = _this$props$navigatio2.navigate;\n        var params = state.params || {};\n        var myUserId = firebase.auth().currentUser.uid;\n        var tempArrYourTeam = [];\n        firebase.database().ref('/teams').child(myUserId).child('/games').child(params.key).child('YourTeam').child('players').on('value', function (snapshot) {\n          tempArrYourTeam = _this.snapshotToArray(snapshot);\n\n          _this.setState({\n            YourTeamPlayerData: tempArrYourTeam\n          });\n        });\n      };\n    };\n\n    _this.GoToMainMenu = function _callee2() {\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _this.props.navigation.navigate('Home');\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.GoToViewGameMenu = function _callee3() {\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _this.setState({\n                displayReviewSelection: true\n              });\n\n              _this.setState({\n                YourTeamSpecificStatFieldEvents: false\n              });\n\n              _this.setState({\n                OpponentsSpecificStatFieldEvents: false\n              });\n\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.GetSelectedOpponentsPlayerStats = function (value) {\n      return function () {\n        var _this$props$navigatio3 = _this.props.navigation,\n            state = _this$props$navigatio3.state,\n            setParams = _this$props$navigatio3.setParams,\n            navigate = _this$props$navigatio3.navigate;\n        var params = state.params || {};\n        var myUserId = firebase.auth().currentUser.uid;\n        var tempArrOpponents = [];\n        firebase.database().ref('/teams').child(myUserId).child('/games').child(params.key).child('Opponents').child('players').on('value', function (snapshot) {\n          tempArrOpponents = _this.snapshotToArray(snapshot);\n\n          _this.setState({\n            OpponentsPlayerData: tempArrOpponents\n          });\n        });\n      };\n    };\n\n    _this.ReviewPlayerStats = function (itemKey) {\n      var selectedTeamPlayer = _this.state.selectedTeamPlayer;\n      var YourTeamEventSelection = _this.state.YourTeamEventSelection;\n      var myUserId = firebase.auth().currentUser.uid;\n      var _this$props$navigatio4 = _this.props.navigation,\n          state = _this$props$navigatio4.state,\n          setParams = _this$props$navigatio4.setParams,\n          navigate = _this$props$navigatio4.navigate;\n      var params = state.params || {};\n      var tempArr = _this.state.tempArr;\n\n      if (selectedTeamPlayer == '') {\n        return alert(\"Please select a player\");\n      } else {\n        _this.setState({\n          displayReviewGameStats: false\n        });\n\n        _this.setState({\n          displaySelectedPlayerStats: true\n        });\n\n        firebase.database().ref('/teams').child(myUserId).child('/games').child(params.GameRecordKey).child('YourTeam').child('players').orderByChild(\"PlayerID\").equalTo(selectedTeamPlayer).on('value', function (snapshot) {\n          var playerObj = snapshot.val();\n          tempArr = _this.snapshotToArray(snapshot);\n\n          for (var i = 0; i < tempArr.length; i++) {\n            var Goals = tempArr[i].Goals;\n\n            _this.setState({\n              Goals: Goals\n            });\n\n            var Points = tempArr[i].Points;\n\n            _this.setState({\n              Points: Points\n            });\n\n            var Passes = tempArr[i].Passes;\n\n            _this.setState({\n              Passes: Passes\n            });\n\n            var PlayerKitNumber = tempArr[i].PlayerKitNumber;\n\n            _this.setState({\n              PlayerKitNumber: PlayerKitNumber\n            });\n\n            var PlayerName = tempArr[i].PlayerName;\n\n            _this.setState({\n              PlayerName: PlayerName\n            });\n\n            var PlayerPosition = tempArr[i].PlayerPosition;\n\n            _this.setState({\n              PlayerPosition: PlayerPosition\n            });\n\n            var Shots = tempArr[i].Shots;\n\n            _this.setState({\n              Shots: Shots\n            });\n\n            var ShotsOnTarget = tempArr[i].ShotsOnTarget;\n\n            _this.setState({\n              ShotsOnTarget: ShotsOnTarget\n            });\n          }\n        });\n      }\n    };\n\n    _this.ReviewOpponentsPlayerStats = function (itemKey) {\n      var myUserId = firebase.auth().currentUser.uid;\n      var _this$props$navigatio5 = _this.props.navigation,\n          state = _this$props$navigatio5.state,\n          setParams = _this$props$navigatio5.setParams,\n          navigate = _this$props$navigatio5.navigate;\n      var params = state.params || {};\n      var tempArr = _this.state.tempArr;\n      var selectedOpponentsPlayer = _this.state.selectedOpponentsPlayer;\n\n      if (selectedOpponentsPlayer == '') {\n        return alert(\"Please select a player\");\n      } else {\n        _this.setState({\n          displayReviewGameStats: false\n        });\n\n        _this.setState({\n          displayOpponentsSelectedPlayerStats: true\n        });\n\n        firebase.database().ref('/teams').child(myUserId).child('/games').child(params.GameRecordKey).child('Opponents').child('players').orderByChild(\"PlayerID\").equalTo(selectedOpponentsPlayer).on('value', function (snapshot) {\n          var playerObj = snapshot.val();\n          tempArr = _this.snapshotToArray(snapshot);\n\n          for (var i = 0; i < tempArr.length; i++) {\n            var Goals = tempArr[i].Goals;\n\n            _this.setState({\n              Goals: Goals\n            });\n\n            var Points = tempArr[i].Points;\n\n            _this.setState({\n              Points: Points\n            });\n\n            var Passes = tempArr[i].Passes;\n\n            _this.setState({\n              Passes: Passes\n            });\n\n            var PlayerKitNumber = tempArr[i].PlayerKitNumber;\n\n            _this.setState({\n              PlayerKitNumber: PlayerKitNumber\n            });\n\n            var PlayerName = tempArr[i].PlayerName;\n\n            _this.setState({\n              PlayerName: PlayerName\n            });\n\n            var PlayerPosition = tempArr[i].PlayerPosition;\n\n            _this.setState({\n              PlayerPosition: PlayerPosition\n            });\n\n            var Shots = tempArr[i].Shots;\n\n            _this.setState({\n              Shots: Shots\n            });\n\n            var ShotsOnTarget = tempArr[i].ShotsOnTarget;\n\n            _this.setState({\n              ShotsOnTarget: ShotsOnTarget\n            });\n          }\n        });\n      }\n    };\n\n    _this.GetSpecificPlayerEventLocations = function _callee4() {\n      var EventFieldLocations, YourTeamEventSelection, selectedTeamPlayer, myUserId, tempEventFieldLocations, _this$props$navigatio6, state, setParams, navigate, params, i, data;\n\n      return _regeneratorRuntime.async(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              EventFieldLocations = _this.state.EventFieldLocations;\n              YourTeamEventSelection = _this.state.YourTeamEventSelection;\n              selectedTeamPlayer = _this.state.selectedTeamPlayer;\n              myUserId = firebase.auth().currentUser.uid;\n              tempEventFieldLocations = _this.state.tempEventFieldLocations;\n\n              if (!(selectedTeamPlayer != '')) {\n                _context4.next = 18;\n                break;\n              }\n\n              if (!(YourTeamEventSelection == '')) {\n                _context4.next = 10;\n                break;\n              }\n\n              return _context4.abrupt(\"return\", alert(\"Please select an event\"));\n\n            case 10:\n              _this$props$navigatio6 = _this.props.navigation, state = _this$props$navigatio6.state, setParams = _this$props$navigatio6.setParams, navigate = _this$props$navigatio6.navigate;\n              params = state.params || {};\n              tempEventFieldLocations.splice(0, tempEventFieldLocations.length);\n\n              for (i = 0; i < EventFieldLocations.length; i++) {\n                if (EventFieldLocations[i].EventType == YourTeamEventSelection) {\n                  if (EventFieldLocations[i].UserID == selectedTeamPlayer) {\n                    data = {\n                      x: EventFieldLocations[i].x,\n                      y: EventFieldLocations[i].y,\n                      id: EventFieldLocations[i].UserID\n                    };\n\n                    _this.state.tempEventFieldLocations.push(data);\n                  }\n                }\n              }\n\n              _this.setState({\n                YourTeamSpecificStatFieldEvents: true\n              });\n\n              _this.setState({\n                SelectAnEvent_ReviewGameStats_YourTeamPlayer: false\n              });\n\n            case 16:\n              _context4.next = 19;\n              break;\n\n            case 18:\n              return _context4.abrupt(\"return\", alert(\"Please select a player\"));\n\n            case 19:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.GetSpecificOpponentsPlayerEventLocations = function _callee5() {\n      var OpponentsEventFieldLocations, OpponentsEventSelection, selectedOpponentsPlayer, tempEventFieldLocations, _this$props$navigatio7, state, setParams, navigate, params, i, data;\n\n      return _regeneratorRuntime.async(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              OpponentsEventFieldLocations = _this.state.OpponentsEventFieldLocations;\n              OpponentsEventSelection = _this.state.OpponentsEventSelection;\n              selectedOpponentsPlayer = _this.state.selectedOpponentsPlayer;\n              tempEventFieldLocations = _this.state.tempEventFieldLocations;\n\n              if (!(selectedOpponentsPlayer != '')) {\n                _context5.next = 17;\n                break;\n              }\n\n              if (!(OpponentsEventSelection == '')) {\n                _context5.next = 9;\n                break;\n              }\n\n              return _context5.abrupt(\"return\", alert(\"Please select an event\"));\n\n            case 9:\n              _this$props$navigatio7 = _this.props.navigation, state = _this$props$navigatio7.state, setParams = _this$props$navigatio7.setParams, navigate = _this$props$navigatio7.navigate;\n              params = state.params || {};\n              tempEventFieldLocations.splice(0, tempEventFieldLocations.length);\n\n              for (i = 0; i < OpponentsEventFieldLocations.length; i++) {\n                if (OpponentsEventFieldLocations[i].EventType == OpponentsEventSelection) {\n                  if (OpponentsEventFieldLocations[i].UserID == selectedOpponentsPlayer) {\n                    data = {\n                      x: OpponentsEventFieldLocations[i].x,\n                      y: OpponentsEventFieldLocations[i].y,\n                      id: OpponentsEventFieldLocations[i].UserID\n                    };\n\n                    _this.state.tempEventFieldLocations.push(data);\n                  }\n                }\n              }\n\n              _this.setState({\n                OpponentsSpecificStatFieldEvents: true\n              });\n\n              _this.setState({\n                SelectAnEvent_ReviewGameStats_Opponents_TeamPlayer: false\n              });\n\n            case 15:\n              _context5.next = 18;\n              break;\n\n            case 17:\n              return _context5.abrupt(\"return\", alert(\"Please select a player\"));\n\n            case 18:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.ReviewGameStats = function _callee6() {\n      return _regeneratorRuntime.async(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _this.setState({\n                displayReviewSelection: false\n              });\n\n              _this.setState({\n                displayReviewGameStats: true\n              });\n\n            case 2:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.TeamSpecificStat = function _callee7() {\n      return _regeneratorRuntime.async(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _this.setState({\n                SelectAnEvent_ReviewGameStats_YourTeam: true\n              });\n\n              _this.setState({\n                displayReviewSelection: false\n              });\n\n              _this.setState({\n                displayReviewGameStats: false\n              });\n\n            case 3:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.OpponentsSpecificStat = function _callee8() {\n      return _regeneratorRuntime.async(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _this.setState({\n                SelectAnEvent_ReviewGameStats_Opponents: true\n              });\n\n              _this.setState({\n                displayReviewGameStats: false\n              });\n\n              _this.setState({\n                displayReviewSelection: false\n              });\n\n            case 3:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.ExecuteYourTeamEventAnaylsis = function _callee9() {\n      var YourTeamEventSelection, EventFieldLocations, myUserId, tempEventFieldLocations, _this$props$navigatio8, state, setParams, navigate, params, i, data;\n\n      return _regeneratorRuntime.async(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              YourTeamEventSelection = _this.state.YourTeamEventSelection;\n              EventFieldLocations = _this.state.EventFieldLocations;\n              myUserId = firebase.auth().currentUser.uid;\n              tempEventFieldLocations = _this.state.tempEventFieldLocations;\n              _this$props$navigatio8 = _this.props.navigation, state = _this$props$navigatio8.state, setParams = _this$props$navigatio8.setParams, navigate = _this$props$navigatio8.navigate;\n              params = state.params || {};\n              tempEventFieldLocations.splice(0, tempEventFieldLocations.length);\n\n              for (i = 0; i < EventFieldLocations.length; i++) {\n                if (EventFieldLocations[i].EventType == YourTeamEventSelection) {\n                  data = {\n                    x: EventFieldLocations[i].x,\n                    y: EventFieldLocations[i].y\n                  };\n\n                  _this.state.tempEventFieldLocations.push(data);\n                }\n              }\n\n              _this.setState({\n                SelectAnEvent_ReviewGameStats_YourTeam: false\n              });\n\n              _this.setState({\n                YourTeamSpecificStatFieldEvents: true\n              });\n\n            case 10:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.ExecuteOpponentsPlayerEventAnaylsis = function _callee10() {\n      var OpponentEventSelection, OpponentsEventFieldLocations, myUserId, tempEventFieldLocations, SportType, _this$props$navigatio9, state, setParams, navigate, params, i, data;\n\n      return _regeneratorRuntime.async(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              OpponentEventSelection = _this.state.OpponentEventSelection;\n              OpponentsEventFieldLocations = _this.state.OpponentsEventFieldLocations;\n              myUserId = firebase.auth().currentUser.uid;\n              tempEventFieldLocations = _this.state.tempEventFieldLocations;\n              SportType = _this.state.SportType;\n              _this$props$navigatio9 = _this.props.navigation, state = _this$props$navigatio9.state, setParams = _this$props$navigatio9.setParams, navigate = _this$props$navigatio9.navigate;\n              params = state.params || {};\n              tempEventFieldLocations.splice(0, tempEventFieldLocations.length);\n\n              for (i = 0; i < OpponentsEventFieldLocations.length; i++) {\n                if (OpponentsEventFieldLocations[i].EventType == OpponentEventSelection) {\n                  data = {\n                    x: OpponentsEventFieldLocations[i].x,\n                    y: OpponentsEventFieldLocations[i].y\n                  };\n\n                  _this.state.tempEventFieldLocations.push(data);\n                }\n              }\n\n              _this.setState({\n                SelectAnEvent_ReviewGameStats_Opponents: false\n              });\n\n              _this.setState({\n                OpponentsSpecificStatFieldEvents: true\n              });\n\n            case 11:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.snapshotToArray = function (snapshot) {\n      var retArr = [];\n      snapshot.forEach(function (childSnapshot) {\n        var item = childSnapshot.val();\n        item.key = childSnapshot.key;\n        retArr.push(item);\n      });\n      return retArr;\n    };\n\n    _this.YourTeamSelected = function _callee11() {\n      var _this$props$navigatio10, state, setParams, navigate, params, myUserId, tempArr;\n\n      return _regeneratorRuntime.async(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              _this.setState({\n                displayReviewOpponentsPlayer: false\n              });\n\n              _this.setState({\n                displayReviewSelection: false\n              });\n\n              _this.setState({\n                displayReviewYourTeamPlayer: true\n              });\n\n              _this.setState({\n                displayTeamOption: false\n              });\n\n              _this$props$navigatio10 = _this.props.navigation, state = _this$props$navigatio10.state, setParams = _this$props$navigatio10.setParams, navigate = _this$props$navigatio10.navigate;\n              params = state.params || {};\n              myUserId = firebase.auth().currentUser.uid;\n              tempArr = [];\n              firebase.database().ref('/teams').child(myUserId).child('/games').child(params.GameRecordKey).child('YourTeam').child('players').on('value', function (snapshot) {\n                console.log(snapshot.val());\n                tempArr = _this.snapshotToArray(snapshot);\n\n                _this.setState({\n                  PlayerData: tempArr\n                });\n              });\n\n            case 9:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.OpponentsSelected = function _callee12() {\n      var _this$props$navigatio11, state, setParams, navigate, params, myUserId, tempArr;\n\n      return _regeneratorRuntime.async(function _callee12$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              _this.setState({\n                displayReviewSelection: false\n              });\n\n              _this.setState({\n                displayReviewOpponentsPlayer: true\n              });\n\n              _this.setState({\n                displayTeamOption: false\n              });\n\n              _this$props$navigatio11 = _this.props.navigation, state = _this$props$navigatio11.state, setParams = _this$props$navigatio11.setParams, navigate = _this$props$navigatio11.navigate;\n              params = state.params || {};\n              myUserId = firebase.auth().currentUser.uid;\n              tempArr = [];\n              firebase.database().ref('/teams').child(myUserId).child('/games').child(params.GameRecordKey).child('Opponents').child('players').on('value', function (snapshot) {\n                console.log(snapshot.val());\n                tempArr = _this.snapshotToArray(snapshot);\n\n                _this.setState({\n                  OpponentsPlayerData: tempArr\n                });\n              });\n\n            case 8:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.SelectPlayerSelection = function _callee13() {\n      return _regeneratorRuntime.async(function _callee13$(_context13) {\n        while (1) {\n          switch (_context13.prev = _context13.next) {\n            case 0:\n              _this.setState({\n                displayReviewGameStats: false\n              });\n\n              _this.setState({\n                displayReviewSelection: false\n              });\n\n              _this.setState({\n                SelectAnEvent_ReviewGameStats_YourTeamPlayer: true\n              });\n\n            case 3:\n            case \"end\":\n              return _context13.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.SelectOpponentsPlayerSelection = function _callee14() {\n      return _regeneratorRuntime.async(function _callee14$(_context14) {\n        while (1) {\n          switch (_context14.prev = _context14.next) {\n            case 0:\n              _this.setState({\n                displayReviewGameStats: false\n              });\n\n              _this.setState({\n                displayReviewSelection: false\n              });\n\n              _this.setState({\n                SelectAnEvent_ReviewGameStats_Opponents_TeamPlayer: true\n              });\n\n            case 3:\n            case \"end\":\n              return _context14.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      TeamName: '',\n      OpponentsName: '',\n      SportType: '',\n      inviteCode: '',\n      hasATeam: false,\n      userType: [],\n      GameList: [],\n      GameViewList: [],\n      UsersScreenHeight: 0,\n      UsersScreenWidth: 0,\n      statRecord: '',\n      gameStatsRecordsArray: [],\n      selectedTeamPlayer: '',\n      selectedOpponentsPlayer: '',\n      PlayerData: [],\n      OpponentsPlayerData: [],\n      YourTeamPlayerData: [],\n      tempArr: [],\n      tempArrOpponents: [],\n      tempArrYourTeam: [],\n      playerArr: [],\n      OpponentsplayerArr: [],\n      totalTeamGoals: 0,\n      totalTeamPoints: 0,\n      totalTeamPasses: 0,\n      totalTeamShots: 0,\n      totalTeamShotsOnTarget: 0,\n      totalOpponentsTeamGoals: 0,\n      totalOpponentsTeamPoints: 0,\n      totalOpponentsTeamShots: 0,\n      totalOpponentsTeamShotsOnTarget: 0,\n      totalOpponentsTeamPasses: 0,\n      GameRecordKey: '',\n      StatsRecordKey: '',\n      tempEventFieldLocations: [],\n      YourTeamFieldEventsView: false,\n      OpponentsFieldEventsView: false,\n      YourTeamEventSelection: '',\n      OpponentsEventSelection: '',\n      EventFieldLocations: [],\n      OpponentsEventFieldLocations: [],\n      displayTeamSpecificEventSelection: false,\n      displayOpponentsSpecificEventSelection: false,\n      YourTeamSpecificStatFieldEvents: false,\n      OpponentsSpecificStatFieldEventsSoccerView: false,\n      displayReviewSelection: true,\n      displayReviewGameStats: false,\n      displayReviewYourTeamPlayer: false,\n      displayReviewOpponentsPlayer: false,\n      displaySelectedPlayerStats: false,\n      SelectAnEvent_ReviewGameStats_YourTeam: false,\n      SelectAnEvent_ReviewGameStats_Opponents: false,\n      SelectAnEvent_ReviewGameStats_YourTeamPlayer: false,\n      SelectAnEvent_ReviewGameStats_Opponents_TeamPlayer: false,\n      YourTeamSpecificStatFieldEvents: false,\n      OpponentsSpecificStatFieldEvents: false,\n      PlayerKitNumber: 0,\n      PlayerName: '',\n      PlayerPosition: '',\n      Goals: 0,\n      Points: 0,\n      Passes: 0,\n      Shots: 0,\n      ShotsOnTarget: 0\n    };\n    return _this;\n  }\n\n  _createClass(ViewGame, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var _this$props$navigatio12 = this.props.navigation,\n          state = _this$props$navigatio12.state,\n          setParams = _this$props$navigatio12.setParams,\n          navigate = _this$props$navigatio12.navigate;\n      var params = state.params || {};\n      console.log(params);\n      this.setState({\n        GameRecordKey: params.GameRecordKey\n      });\n      this.setState({\n        StatsRecordKey: params.StatsRecordKey\n      });\n      var myUserId = firebase.auth().currentUser.uid;\n      var GameRecordKey = this.state.GameRecordKey;\n      var gameStatsRecordsArray = this.state.gameStatsRecordsArray;\n      firebase.database().ref('/teams').child(myUserId).on('value', function (snapshot) {\n        var userObj = snapshot.val();\n        var SportType = userObj.SportType;\n\n        _this2.setState({\n          SportType: SportType\n        });\n\n        var TeamName = userObj.TeamName;\n\n        _this2.setState({\n          TeamName: TeamName\n        });\n      });\n      console.log(this.state.SportType);\n      this.setState({\n        SelectAnEvent_ReviewGameStats_Opponents_TeamPlayer: false\n      });\n      this.filterGameData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var ReviewGameStats;\n      var ReviewPlayerStats;\n      var ReviewSelection;\n      var TeamOption;\n      var PlayerStats;\n      var FieldWithPlots;\n      var SportType = this.state.SportType;\n      var displayReviewSelection = this.state.displayReviewSelection;\n      var displayReviewGameStats = this.state.displayReviewGameStats;\n      var SelectAnEvent_ReviewGameStats_YourTeam = this.state.SelectAnEvent_ReviewGameStats_YourTeam;\n      var SelectAnEvent_ReviewGameStats_Opponents = this.state.SelectAnEvent_ReviewGameStats_Opponents;\n      var SelectAnEvent_ReviewGameStats_YourTeamPlayer = this.state.SelectAnEvent_ReviewGameStats_YourTeamPlayer;\n      var SelectAnEvent_ReviewGameStats_Opponents_TeamPlayer = this.state.SelectAnEvent_ReviewGameStats_Opponents_TeamPlayer;\n      var YourTeamSpecificStatFieldEvents = this.state.YourTeamSpecificStatFieldEvents;\n      var OpponentsSpecificStatFieldEvents = this.state.OpponentsSpecificStatFieldEvents;\n\n      if (displayReviewSelection == true) {\n        ReviewSelection = React.createElement(ScrollView, {\n          style: stylesViewGame.container,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 973,\n            columnNumber: 33\n          }\n        }, React.createElement(TouchableOpacity, {\n          style: stylesViewGame.button,\n          onPress: this.ReviewGameStats,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 975,\n            columnNumber: 37\n          }\n        }, React.createElement(Text, {\n          style: stylesViewGame.Text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 976,\n            columnNumber: 41\n          }\n        }, \"Review Games Stats\")), React.createElement(TouchableOpacity, {\n          style: stylesViewGame.button,\n          onPress: this.SelectPlayerSelection,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 979,\n            columnNumber: 37\n          }\n        }, React.createElement(Text, {\n          style: stylesViewGame.Text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 980,\n            columnNumber: 41\n          }\n        }, \"Review a specific players stats from \", this.state.TeamName)), React.createElement(TouchableOpacity, {\n          style: stylesViewGame.button,\n          onPress: this.SelectOpponentsPlayerSelection,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 983,\n            columnNumber: 37\n          }\n        }, React.createElement(Text, {\n          style: stylesViewGame.Text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 984,\n            columnNumber: 41\n          }\n        }, \"Review a specific players stats from \", this.state.OpponentsName)), React.createElement(TouchableOpacity, {\n          style: stylesViewGame.button,\n          onPress: this.GoToMainMenu,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 987,\n            columnNumber: 37\n          }\n        }, React.createElement(Text, {\n          style: stylesViewGame.Text,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 988,\n            columnNumber: 41\n          }\n        }, \"Back to Main Menu\")));\n      }\n\n      if (displayReviewGameStats == true) {\n        if (SportType == 'GAA') {\n          ReviewGameStats = React.createElement(ScrollView, {\n            style: stylesViewGame.container,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1008,\n              columnNumber: 33\n            }\n          }, React.createElement(View, {\n            style: stylesViewGame.headerContainer,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1009,\n              columnNumber: 37\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.Text,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1010,\n              columnNumber: 41\n            }\n          }, this.state.TeamName)), React.createElement(View, {\n            style: stylesViewGame.StatRow,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1013,\n              columnNumber: 37\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.Text,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1014,\n              columnNumber: 41\n            }\n          }, \" Goals: \", this.state.totalTeamGoals), React.createElement(Text, {\n            style: stylesViewGame.Text,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1015,\n              columnNumber: 41\n            }\n          }, \" Points: \", this.state.totalTeamPoints), React.createElement(Text, {\n            style: stylesViewGame.Text,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1016,\n              columnNumber: 41\n            }\n          }, \" Shots: \", this.state.totalTeamShots), React.createElement(Text, {\n            style: stylesViewGame.Text,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1017,\n              columnNumber: 41\n            }\n          }, \" Shots on target: \", this.state.totalTeamShotsOnTarget)), React.createElement(TouchableOpacity, {\n            style: stylesViewGame.button,\n            onPress: this.TeamSpecificStat,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1020,\n              columnNumber: 37\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.Text,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1021,\n              columnNumber: 41\n            }\n          }, \"Review a specific stat from \", this.state.TeamName, \" \")), React.createElement(TouchableOpacity, {\n            style: stylesViewGame.button,\n            onPress: this.GoToMainMenu,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1024,\n              columnNumber: 37\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.Text,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1025,\n              columnNumber: 41\n            }\n          }, \"Back to Main Menu\")), React.createElement(View, {\n            style: stylesViewGame.headerContainer,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1029,\n              columnNumber: 37\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.Text,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1030,\n              columnNumber: 41\n            }\n          }, \" Opponents\")), React.createElement(View, {\n            style: stylesViewGame.StatRow,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1033,\n              columnNumber: 37\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.Text,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1034,\n              columnNumber: 41\n            }\n          }, \" Goals: \", this.state.totalOpponentsTeamGoals), React.createElement(Text, {\n            style: stylesViewGame.Text,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1035,\n              columnNumber: 41\n            }\n          }, \" Points: \", this.state.totalOpponentsTeamPoints), React.createElement(Text, {\n            style: stylesViewGame.Text,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1036,\n              columnNumber: 41\n            }\n          }, \" Shots: \", this.state.totalOpponentsTeamShots), React.createElement(Text, {\n            style: stylesViewGame.Text,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1037,\n              columnNumber: 41\n            }\n          }, \" Shots on target: \", this.state.totalOpponentsTeamShotsOnTarget)), React.createElement(TouchableOpacity, {\n            style: stylesViewGame.button,\n            onPress: this.OpponentsSpecificStat,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1040,\n              columnNumber: 37\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.Text,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1041,\n              columnNumber: 41\n            }\n          }, \"Review a specific stat from the Opponents records\")), React.createElement(TouchableOpacity, {\n            style: stylesViewGame.button,\n            onPress: this.GoToMainMenu,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1045,\n              columnNumber: 37\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.Text,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1046,\n              columnNumber: 41\n            }\n          }, \"Back to Main Menu\")));\n        } else if (SportType == 'Soccer') {\n          ReviewGameStats = React.createElement(ScrollView, {\n            style: stylesViewGame.container,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1059,\n              columnNumber: 33\n            }\n          }, React.createElement(View, {\n            style: stylesViewGame.headerContainer,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1060,\n              columnNumber: 37\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.Text,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1061,\n              columnNumber: 41\n            }\n          }, this.state.TeamName)), React.createElement(View, {\n            style: stylesViewGame.StatRow,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1064,\n              columnNumber: 37\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.Text,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1065,\n              columnNumber: 41\n            }\n          }, \" Goals: \", this.state.totalTeamGoals), React.createElement(Text, {\n            style: stylesViewGame.Text,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1066,\n              columnNumber: 41\n            }\n          }, \" Shots: \", this.state.totalTeamShots), React.createElement(Text, {\n            style: stylesViewGame.Text,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1067,\n              columnNumber: 41\n            }\n          }, \" Shots on target: \", this.state.totalTeamShotsOnTarget)), React.createElement(TouchableOpacity, {\n            style: stylesViewGame.button,\n            onPress: this.TeamSpecificStat,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1070,\n              columnNumber: 37\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.Text,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1071,\n              columnNumber: 41\n            }\n          }, \"Review a specific stat from \", this.state.TeamName, \" \")), React.createElement(TouchableOpacity, {\n            style: stylesViewGame.button,\n            onPress: this.GoToMainMenu,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1074,\n              columnNumber: 37\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.Text,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1075,\n              columnNumber: 41\n            }\n          }, \"Back to Main Menu\")), React.createElement(View, {\n            style: stylesViewGame.headerContainer,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1079,\n              columnNumber: 37\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.Text,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1080,\n              columnNumber: 41\n            }\n          }, \" Opponents\")), React.createElement(View, {\n            style: stylesViewGame.StatRow,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1083,\n              columnNumber: 37\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.Text,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1084,\n              columnNumber: 41\n            }\n          }, \" Goals: \", this.state.totalOpponentsTeamGoals), React.createElement(Text, {\n            style: stylesViewGame.Text,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1085,\n              columnNumber: 41\n            }\n          }, \" Shots: \", this.state.totalOpponentsTeamShots), React.createElement(Text, {\n            style: stylesViewGame.Text,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1086,\n              columnNumber: 41\n            }\n          }, \" Shots on target: \", this.state.totalOpponentsTeamShotsOnTarget)), React.createElement(TouchableOpacity, {\n            style: stylesViewGame.button,\n            onPress: this.OpponentsSpecificStat,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1089,\n              columnNumber: 37\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.Text,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1090,\n              columnNumber: 41\n            }\n          }, \"Review a specific stat from the Opponents records\")), React.createElement(TouchableOpacity, {\n            style: stylesViewGame.button,\n            onPress: this.GoToMainMenu,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1093,\n              columnNumber: 37\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.Text,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1094,\n              columnNumber: 41\n            }\n          }, \"Back to Main Menu\")));\n        }\n      }\n\n      if (SelectAnEvent_ReviewGameStats_YourTeam) {\n        if (SportType == 'GAA') {\n          ReviewPlayerStats = React.createElement(ScrollView, {\n            style: stylesViewGame.container,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1113,\n              columnNumber: 33\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.Text,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1115,\n              columnNumber: 41\n            }\n          }, \"Select a stat below\"), React.createElement(Picker, {\n            selectedValue: this.state.YourTeamEventSelection,\n            style: stylesViewGame.input,\n            onValueChange: function onValueChange(text) {\n              return _this3.setState({\n                YourTeamEventSelection: text\n              });\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1117,\n              columnNumber: 41\n            }\n          }, React.createElement(Picker.Item, {\n            label: \"Select a event\",\n            value: \"\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1123,\n              columnNumber: 45\n            }\n          }), React.createElement(Picker.Item, {\n            label: \"Goal\",\n            value: \"Goal\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1124,\n              columnNumber: 45\n            }\n          }), React.createElement(Picker.Item, {\n            label: \"Point\",\n            value: \"Point\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1125,\n              columnNumber: 45\n            }\n          }), React.createElement(Picker.Item, {\n            label: \"Pass\",\n            value: \"Pass\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1126,\n              columnNumber: 45\n            }\n          })), React.createElement(TouchableOpacity, {\n            style: stylesViewGame.button,\n            onPress: this.ExecuteYourTeamEventAnaylsis,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1131,\n              columnNumber: 41\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.Text,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1132,\n              columnNumber: 45\n            }\n          }, \"Review this teams games stats\")), React.createElement(TouchableOpacity, {\n            style: stylesViewGame.button,\n            onPress: this.GoToMainMenu,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1135,\n              columnNumber: 41\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.Text,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1136,\n              columnNumber: 45\n            }\n          }, \"Back to Main Menu\")));\n        } else if (SportType == 'Soccer') {\n          ReviewPlayerStats = React.createElement(ScrollView, {\n            style: stylesViewGame.container,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1149,\n              columnNumber: 33\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.Text,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1151,\n              columnNumber: 41\n            }\n          }, \"Select a stat below\"), React.createElement(Picker, {\n            selectedValue: this.state.YourTeamEventSelection,\n            style: stylesViewGame.input,\n            onValueChange: function onValueChange(text) {\n              return _this3.setState({\n                YourTeamEventSelection: text\n              });\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1153,\n              columnNumber: 41\n            }\n          }, React.createElement(Picker.Item, {\n            label: \"Select a event\",\n            value: \"\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1159,\n              columnNumber: 45\n            }\n          }), React.createElement(Picker.Item, {\n            label: \"Goal\",\n            value: \"Goal\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1160,\n              columnNumber: 45\n            }\n          }), React.createElement(Picker.Item, {\n            label: \"Pass\",\n            value: \"Pass\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1161,\n              columnNumber: 45\n            }\n          })), React.createElement(TouchableOpacity, {\n            style: stylesViewGame.button,\n            onPress: this.ExecuteYourTeamEventAnaylsis,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1166,\n              columnNumber: 41\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.Text,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1167,\n              columnNumber: 45\n            }\n          }, \"Review this teams games stats\")), React.createElement(TouchableOpacity, {\n            style: stylesViewGame.button,\n            onPress: this.GoToMainMenu,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1170,\n              columnNumber: 41\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.Text,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1171,\n              columnNumber: 45\n            }\n          }, \"Back to Main Menu\")));\n        }\n      }\n\n      if (SelectAnEvent_ReviewGameStats_Opponents) {\n        if (SportType == 'GAA') {\n          ReviewPlayerStats = React.createElement(ScrollView, {\n            style: stylesViewGame.container,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1188,\n              columnNumber: 33\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.Text,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1190,\n              columnNumber: 37\n            }\n          }, \"Select a stat below\"), React.createElement(Picker, {\n            selectedValue: this.state.OpponentsEventSelection,\n            style: stylesViewGame.input,\n            onValueChange: function onValueChange(text) {\n              return _this3.setState({\n                OpponentsEventSelection: text\n              });\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1192,\n              columnNumber: 41\n            }\n          }, React.createElement(Picker.Item, {\n            label: \"Select a event\",\n            value: \"\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1198,\n              columnNumber: 45\n            }\n          }), React.createElement(Picker.Item, {\n            label: \"Goal\",\n            value: \"Goal\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1199,\n              columnNumber: 45\n            }\n          }), React.createElement(Picker.Item, {\n            label: \"Point\",\n            value: \"Point\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1200,\n              columnNumber: 45\n            }\n          }), React.createElement(Picker.Item, {\n            label: \"Pass\",\n            value: \"Pass\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1201,\n              columnNumber: 45\n            }\n          })), React.createElement(TouchableOpacity, {\n            style: stylesViewGame.button,\n            onPress: this.ExecuteOpponentsPlayerEventAnaylsis,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1206,\n              columnNumber: 45\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.Text,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1207,\n              columnNumber: 49\n            }\n          }, \"Submit\")), React.createElement(TouchableOpacity, {\n            style: stylesViewGame.button,\n            onPress: this.GoToMainMenu,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1210,\n              columnNumber: 45\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.Text,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1211,\n              columnNumber: 49\n            }\n          }, \"Back to Main Menu\")));\n        } else if (SportType == 'Soccer') {\n          ReviewPlayerStats = React.createElement(ScrollView, {\n            style: stylesViewGame.container,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1223,\n              columnNumber: 33\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.Text,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1225,\n              columnNumber: 37\n            }\n          }, \"Select a stat\"), React.createElement(Picker, {\n            selectedValue: this.state.OpponentsEventSelection,\n            style: stylesViewGame.input,\n            onValueChange: function onValueChange(text) {\n              return _this3.setState({\n                OpponentsEventSelection: text\n              });\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1227,\n              columnNumber: 41\n            }\n          }, React.createElement(Picker.Item, {\n            label: \"Select a event\",\n            value: \"\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1233,\n              columnNumber: 45\n            }\n          }), React.createElement(Picker.Item, {\n            label: \"Goal\",\n            value: \"Goal\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1234,\n              columnNumber: 45\n            }\n          }), React.createElement(Picker.Item, {\n            label: \"Pass\",\n            value: \"Pass\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1235,\n              columnNumber: 45\n            }\n          })), React.createElement(TouchableOpacity, {\n            style: stylesViewGame.button,\n            onPress: this.ExecuteOpponentsPlayerEventAnaylsis,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1240,\n              columnNumber: 45\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.Text,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1241,\n              columnNumber: 49\n            }\n          }, \"Submit\")), React.createElement(TouchableOpacity, {\n            style: stylesViewGame.button,\n            onPress: this.GoToMainMenu,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1244,\n              columnNumber: 45\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.Text,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1245,\n              columnNumber: 49\n            }\n          }, \"Back to Main Menu\")));\n        }\n      }\n\n      if (SelectAnEvent_ReviewGameStats_YourTeamPlayer == true) {\n        if (SportType == 'GAA') {\n          ReviewPlayerStats = React.createElement(ScrollView, {\n            style: stylesViewGame.container,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1264,\n              columnNumber: 29\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.Text,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1266,\n              columnNumber: 33\n            }\n          }, \"Select a player \"), React.createElement(Picker, {\n            selectedValue: this.state.selectedTeamPlayer,\n            style: stylesViewGame.input,\n            onValueChange: function onValueChange(text) {\n              return _this3.setState({\n                selectedTeamPlayer: text\n              });\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1268,\n              columnNumber: 33\n            }\n          }, React.createElement(Picker.Item, {\n            label: \"Select a Player\",\n            value: \"\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1274,\n              columnNumber: 33\n            }\n          }), this.state.PlayerData.map(function (item, index) {\n            return React.createElement(Picker.Item, {\n              label: item.PlayerName,\n              value: item.PlayerID,\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1278,\n                columnNumber: 49\n              }\n            });\n          })), React.createElement(Text, {\n            style: stylesViewGame.Text,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1286,\n              columnNumber: 33\n            }\n          }, \"Select a stat (*Optional*)\"), React.createElement(Picker, {\n            selectedValue: this.state.YourTeamEventSelection,\n            style: stylesViewGame.input,\n            onValueChange: function onValueChange(text) {\n              return _this3.setState({\n                YourTeamEventSelection: text\n              });\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1288,\n              columnNumber: 33\n            }\n          }, React.createElement(Picker.Item, {\n            label: \"Select a event\",\n            value: \"\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1294,\n              columnNumber: 41\n            }\n          }), React.createElement(Picker.Item, {\n            label: \"Goal\",\n            value: \"Goal\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1295,\n              columnNumber: 41\n            }\n          }), React.createElement(Picker.Item, {\n            label: \"Point\",\n            value: \"Point\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1296,\n              columnNumber: 41\n            }\n          }), React.createElement(Picker.Item, {\n            label: \"Pass\",\n            value: \"Pass\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1297,\n              columnNumber: 41\n            }\n          })), React.createElement(TouchableOpacity, {\n            style: stylesViewGame.button,\n            onPress: this.ReviewPlayerStats,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1303,\n              columnNumber: 33\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.Text,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1304,\n              columnNumber: 37\n            }\n          }, \"Review this players games stats\")), React.createElement(TouchableOpacity, {\n            style: stylesViewGame.button,\n            onPress: this.GetSpecificPlayerEventLocations,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1308,\n              columnNumber: 33\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.Text,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1309,\n              columnNumber: 37\n            }\n          }, \"Review this players event locations\")), React.createElement(TouchableOpacity, {\n            style: stylesViewGame.button,\n            onPress: this.GoToMainMenu,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1312,\n              columnNumber: 33\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.Text,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1313,\n              columnNumber: 41\n            }\n          }, \"Back to Main Menu\")));\n        } else if (SportType == 'Soccer') {\n          ReviewPlayerStats = React.createElement(ScrollView, {\n            style: stylesViewGame.container,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1330,\n              columnNumber: 29\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.Text,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1332,\n              columnNumber: 33\n            }\n          }, \"Select a player\"), React.createElement(Picker, {\n            selectedValue: this.state.selectedTeamPlayer,\n            style: stylesViewGame.input,\n            onValueChange: function onValueChange(text) {\n              return _this3.setState({\n                selectedTeamPlayer: text\n              });\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1334,\n              columnNumber: 33\n            }\n          }, React.createElement(Picker.Item, {\n            label: \"Select a Player\",\n            value: \"\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1340,\n              columnNumber: 33\n            }\n          }), this.state.PlayerData.map(function (item, index) {\n            return React.createElement(Picker.Item, {\n              label: item.PlayerName,\n              value: item.PlayerID,\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1344,\n                columnNumber: 49\n              }\n            });\n          })), React.createElement(Text, {\n            style: stylesViewGame.Text,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1352,\n              columnNumber: 33\n            }\n          }, \"Select a stat (*Optional*)\"), React.createElement(Picker, {\n            selectedValue: this.state.YourTeamEventSelection,\n            style: stylesViewGame.input,\n            onValueChange: function onValueChange(text) {\n              return _this3.setState({\n                YourTeamEventSelection: text\n              });\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1354,\n              columnNumber: 33\n            }\n          }, React.createElement(Picker.Item, {\n            label: \"Select a event\",\n            value: \"\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1360,\n              columnNumber: 41\n            }\n          }), React.createElement(Picker.Item, {\n            label: \"Goal\",\n            value: \"Goal\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1361,\n              columnNumber: 41\n            }\n          }), React.createElement(Picker.Item, {\n            label: \"Pass\",\n            value: \"Pass\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1362,\n              columnNumber: 41\n            }\n          })), React.createElement(TouchableOpacity, {\n            style: stylesViewGame.button,\n            onPress: this.ReviewPlayerStats,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1367,\n              columnNumber: 33\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.Text,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1368,\n              columnNumber: 37\n            }\n          }, \"Review this players games stats\")), React.createElement(TouchableOpacity, {\n            style: stylesViewGame.button,\n            onPress: this.GetSpecificPlayerEventLocations,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1372,\n              columnNumber: 33\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.Text,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1373,\n              columnNumber: 37\n            }\n          }, \"Review this players event locations\")), React.createElement(TouchableOpacity, {\n            style: stylesViewGame.button,\n            onPress: this.GoToMainMenu,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1376,\n              columnNumber: 33\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.Text,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1377,\n              columnNumber: 41\n            }\n          }, \"Back to Main Menu\")));\n        }\n      }\n\n      if (SelectAnEvent_ReviewGameStats_Opponents_TeamPlayer == true) {\n        if (SportType == 'GAA') {\n          ReviewPlayerStats = React.createElement(ScrollView, {\n            style: stylesViewGame.container,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1401,\n              columnNumber: 33\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.Text,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1403,\n              columnNumber: 37\n            }\n          }, \"Select a player\"), React.createElement(Picker, {\n            selectedValue: this.state.selectedOpponentsPlayer,\n            style: stylesViewGame.input,\n            onValueChange: function onValueChange(text) {\n              return _this3.setState({\n                selectedOpponentsPlayer: text\n              });\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1405,\n              columnNumber: 37\n            }\n          }, React.createElement(Picker.Item, {\n            label: \"Select a Player\",\n            value: \"\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1411,\n              columnNumber: 37\n            }\n          }), this.state.OpponentsPlayerData.map(function (item, index) {\n            return React.createElement(Picker.Item, {\n              label: item.PlayerName,\n              value: item.PlayerID,\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1415,\n                columnNumber: 53\n              }\n            });\n          })), React.createElement(Text, {\n            style: stylesViewGame.Text,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1423,\n              columnNumber: 37\n            }\n          }, \"Select a stat (*Optional*)\"), React.createElement(Picker, {\n            selectedValue: this.state.OpponentsEventSelection,\n            style: stylesViewGame.input,\n            onValueChange: function onValueChange(text) {\n              return _this3.setState({\n                OpponentsEventSelection: text\n              });\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1425,\n              columnNumber: 37\n            }\n          }, React.createElement(Picker.Item, {\n            label: \"Select a event\",\n            value: \"\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1431,\n              columnNumber: 45\n            }\n          }), React.createElement(Picker.Item, {\n            label: \"Goal\",\n            value: \"Goal\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1432,\n              columnNumber: 45\n            }\n          }), React.createElement(Picker.Item, {\n            label: \"Point\",\n            value: \"Point\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1433,\n              columnNumber: 45\n            }\n          }), React.createElement(Picker.Item, {\n            label: \"Pass\",\n            value: \"Pass\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1434,\n              columnNumber: 45\n            }\n          })), React.createElement(TouchableOpacity, {\n            style: stylesViewGame.button,\n            onPress: this.ReviewPlayerStats,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1439,\n              columnNumber: 37\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.Text,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1440,\n              columnNumber: 41\n            }\n          }, \"Review this players games stats\")), React.createElement(TouchableOpacity, {\n            style: stylesViewGame.button,\n            onPress: this.GetSpecificOpponentsPlayerEventLocations,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1444,\n              columnNumber: 37\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.Text,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1445,\n              columnNumber: 41\n            }\n          }, \"Review this players event locations\")), React.createElement(TouchableOpacity, {\n            style: stylesViewGame.button,\n            onPress: this.GoToMainMenu,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1448,\n              columnNumber: 37\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.Text,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1449,\n              columnNumber: 45\n            }\n          }, \"Back to Main Menu\")));\n        }\n\n        if (SportType == 'Soccer') {\n          ReviewPlayerStats = React.createElement(ScrollView, {\n            style: stylesViewGame.container,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1469,\n              columnNumber: 29\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.Text,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1471,\n              columnNumber: 33\n            }\n          }, \"Select a player\"), React.createElement(Picker, {\n            selectedValue: this.state.selectedOpponentsPlayer,\n            style: stylesViewGame.input,\n            onValueChange: function onValueChange(text) {\n              return _this3.setState({\n                selectedOpponentsPlayer: text\n              });\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1473,\n              columnNumber: 33\n            }\n          }, React.createElement(Picker.Item, {\n            label: \"Select a Player\",\n            value: \"\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1479,\n              columnNumber: 33\n            }\n          }), this.state.OpponentsPlayerData.map(function (item, index) {\n            return React.createElement(Picker.Item, {\n              label: item.PlayerName,\n              value: item.PlayerID,\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1483,\n                columnNumber: 49\n              }\n            });\n          })), React.createElement(Text, {\n            style: stylesViewGame.Text,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1491,\n              columnNumber: 33\n            }\n          }, \"Select a stat (*Optional*)\"), React.createElement(Picker, {\n            selectedValue: this.state.OpponentsEventSelection,\n            style: stylesViewGame.input,\n            onValueChange: function onValueChange(text) {\n              return _this3.setState({\n                OpponentsEventSelection: text\n              });\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1493,\n              columnNumber: 33\n            }\n          }, React.createElement(Picker.Item, {\n            label: \"Select a event\",\n            value: \"\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1499,\n              columnNumber: 41\n            }\n          }), React.createElement(Picker.Item, {\n            label: \"Goal\",\n            value: \"Goal\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1500,\n              columnNumber: 41\n            }\n          }), React.createElement(Picker.Item, {\n            label: \"Pass\",\n            value: \"Pass\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1501,\n              columnNumber: 41\n            }\n          })), React.createElement(TouchableOpacity, {\n            style: stylesViewGame.button,\n            onPress: this.ReviewPlayerStats,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1506,\n              columnNumber: 33\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.Text,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1507,\n              columnNumber: 37\n            }\n          }, \"Review this players games stats\")), React.createElement(TouchableOpacity, {\n            style: stylesViewGame.button,\n            onPress: this.GetSpecificOpponentsPlayerEventLocations,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1511,\n              columnNumber: 33\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.Text,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1512,\n              columnNumber: 37\n            }\n          }, \"Review this players event locations\")), React.createElement(TouchableOpacity, {\n            style: stylesViewGame.button,\n            onPress: this.GoToMainMenu,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1515,\n              columnNumber: 33\n            }\n          }, React.createElement(Text, {\n            style: stylesViewGame.Text,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1516,\n              columnNumber: 41\n            }\n          }, \"Back to Main Menu\")));\n        }\n      }\n\n      if (YourTeamSpecificStatFieldEvents == true) {\n        if (SportType == 'GAA') {\n          if (screenWidth != this.state.StatsStoredUsingScreenWidth && screenHeight != this.state.StatsStoredUsingScreenHeight) {\n            if (screenWidth < 600 || screenHeight < 376) {\n              alert('Warning - This device is too small to display the full image. Please swipe left to view the field location or use a larger device screen size.');\n              FieldWithPlots = React.createElement(ScrollView, {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1556,\n                  columnNumber: 41\n                }\n              }, React.createElement(ScrollView, {\n                horizontal: true,\n                style: stylesViewGame.imagePlotContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1558,\n                  columnNumber: 45\n                }\n              }, React.createElement(TouchableOpacity, {\n                style: stylesViewGame.button,\n                onPress: this.GoToMainMenu,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1560,\n                  columnNumber: 49\n                }\n              }, React.createElement(Text, {\n                style: stylesViewGame.Text,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1561,\n                  columnNumber: 53\n                }\n              }, \"Back to Main Menu\")), React.createElement(TouchableOpacity, {\n                style: stylesViewGame.button,\n                onPress: this.GoToViewGameMenu,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1564,\n                  columnNumber: 49\n                }\n              }, React.createElement(Text, {\n                style: stylesViewGame.Text,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1565,\n                  columnNumber: 53\n                }\n              }, \"Back to View Game Menu\")), React.createElement(ScrollView, {\n                horizontal: true,\n                style: stylesViewGame.imagePlotContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1568,\n                  columnNumber: 49\n                }\n              }, React.createElement(ScrollView, {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1570,\n                  columnNumber: 53\n                }\n              }, React.createElement(Image, {\n                style: stylesViewGame.imagePxGAA,\n                source: require(\"./GAApitch1.png\"),\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1572,\n                  columnNumber: 57\n                }\n              }), this.state.tempEventFieldLocations.map(function (data) {\n                return React.createElement(View, {\n                  style: {\n                    position: 'absolute',\n                    left: data.x,\n                    top: data.y,\n                    backgroundColor: '#242424',\n                    width: 10,\n                    height: 10,\n                    borderRadius: 50\n                  },\n                  __self: _this3,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1577,\n                    columnNumber: 73\n                  }\n                });\n              })))));\n            } else {\n              FieldWithPlots = React.createElement(ScrollView, {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1610,\n                  columnNumber: 45\n                }\n              }, React.createElement(ScrollView, {\n                horizontal: true,\n                style: stylesViewGame.imagePlotContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1612,\n                  columnNumber: 49\n                }\n              }, React.createElement(TouchableOpacity, {\n                style: stylesViewGame.button,\n                onPress: this.GoToMainMenu,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1614,\n                  columnNumber: 57\n                }\n              }, React.createElement(Text, {\n                style: stylesViewGame.Text,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1615,\n                  columnNumber: 61\n                }\n              }, \"Back to Main Menu\")), React.createElement(TouchableOpacity, {\n                style: stylesViewGame.button,\n                onPress: this.GoToViewGameMenu,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1618,\n                  columnNumber: 57\n                }\n              }, React.createElement(Text, {\n                style: stylesViewGame.Text,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1619,\n                  columnNumber: 61\n                }\n              }, \"Back to View Game Menu\")), React.createElement(ScrollView, {\n                horizontal: true,\n                style: stylesViewGame.imagePlotContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1622,\n                  columnNumber: 57\n                }\n              }, React.createElement(ScrollView, {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1624,\n                  columnNumber: 61\n                }\n              }, React.createElement(Image, {\n                style: stylesViewGame.imagePxGAA,\n                source: require(\"./GAApitch1.png\"),\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1626,\n                  columnNumber: 73\n                }\n              }), this.state.tempEventFieldLocations.map(function (data) {\n                return React.createElement(View, {\n                  style: {\n                    position: 'absolute',\n                    left: data.x,\n                    top: data.y,\n                    backgroundColor: '#242424',\n                    width: 10,\n                    height: 10,\n                    borderRadius: 50\n                  },\n                  __self: _this3,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1630,\n                    columnNumber: 77\n                  }\n                });\n              })))));\n            }\n          } else {\n            if (screenWidth < 600 || screenHeight < 376) {\n              alert('Warning - This device is too small to display the full image. Please swipe left to view the field location or use a larger device screen size.');\n              FieldWithPlots = React.createElement(ScrollView, {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1675,\n                  columnNumber: 37\n                }\n              }, React.createElement(ScrollView, {\n                horizontal: true,\n                style: stylesViewGame.imagePlotContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1677,\n                  columnNumber: 41\n                }\n              }, React.createElement(TouchableOpacity, {\n                style: stylesViewGame.button,\n                onPress: this.GoToMainMenu,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1679,\n                  columnNumber: 45\n                }\n              }, React.createElement(Text, {\n                style: stylesViewGame.Text,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1680,\n                  columnNumber: 49\n                }\n              }, \"Back to Main Menu\")), React.createElement(TouchableOpacity, {\n                style: stylesViewGame.button,\n                onPress: this.GoToViewGameMenu,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1683,\n                  columnNumber: 45\n                }\n              }, React.createElement(Text, {\n                style: stylesViewGame.Text,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1684,\n                  columnNumber: 49\n                }\n              }, \"Back to View Game Menu\")), React.createElement(ScrollView, {\n                horizontal: true,\n                style: stylesViewGame.imagePlotContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1688,\n                  columnNumber: 45\n                }\n              }, React.createElement(ScrollView, {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1690,\n                  columnNumber: 49\n                }\n              }, React.createElement(Image, {\n                style: stylesViewGame.imagePxGAA,\n                source: require(\"./GAApitch1.png\"),\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1693,\n                  columnNumber: 53\n                }\n              }), this.state.tempEventFieldLocations.map(function (data) {\n                return React.createElement(View, {\n                  style: {\n                    position: 'absolute',\n                    left: data.x,\n                    top: data.y,\n                    backgroundColor: '#242424',\n                    width: 10,\n                    height: 10,\n                    borderRadius: 50\n                  },\n                  __self: _this3,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1697,\n                    columnNumber: 61\n                  }\n                });\n              })))));\n            }\n\n            FieldWithPlots = React.createElement(ScrollView, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1724,\n                columnNumber: 33\n              }\n            }, React.createElement(ScrollView, {\n              horizontal: true,\n              style: stylesViewGame.imagePlotContainer,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1726,\n                columnNumber: 37\n              }\n            }, React.createElement(TouchableOpacity, {\n              style: stylesViewGame.button,\n              onPress: this.GoToMainMenu,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1728,\n                columnNumber: 41\n              }\n            }, React.createElement(Text, {\n              style: stylesViewGame.Text,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1729,\n                columnNumber: 45\n              }\n            }, \"Back to Main Menu\")), React.createElement(TouchableOpacity, {\n              style: stylesViewGame.button,\n              onPress: this.GoToViewGameMenu,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1732,\n                columnNumber: 41\n              }\n            }, React.createElement(Text, {\n              style: stylesViewGame.Text,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1733,\n                columnNumber: 45\n              }\n            }, \"Back to View Game Menu\")), React.createElement(ScrollView, {\n              horizontal: true,\n              style: stylesViewGame.imagePlotContainer,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1736,\n                columnNumber: 49\n              }\n            }, React.createElement(ScrollView, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1738,\n                columnNumber: 53\n              }\n            }, React.createElement(Image, {\n              style: stylesViewGame.imagePxGAA,\n              source: require(\"./GAApitch1.png\"),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1740,\n                columnNumber: 57\n              }\n            }), this.state.tempEventFieldLocations.map(function (data) {\n              return React.createElement(View, {\n                style: {\n                  position: 'absolute',\n                  left: data.x,\n                  top: data.y,\n                  backgroundColor: '#242424',\n                  width: 10,\n                  height: 10,\n                  borderRadius: 50\n                },\n                __self: _this3,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1744,\n                  columnNumber: 65\n                }\n              });\n            })))));\n          }\n        } else if (SportType == 'Soccer') {\n          if (screenWidth != this.state.StatsStoredUsingScreenWidth && screenHeight != this.state.StatsStoredUsingScreenHeight) {\n            if (screenWidth < 600 || screenHeight < 376) {\n              alert('Warning - This device is too small to display the full image. Please swipe left to view the field location or use a larger device screen size.');\n              FieldWithPlots = React.createElement(ScrollView, {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1783,\n                  columnNumber: 41\n                }\n              }, React.createElement(ScrollView, {\n                horizontal: true,\n                style: stylesViewGame.imagePlotContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1785,\n                  columnNumber: 45\n                }\n              }, React.createElement(TouchableOpacity, {\n                style: stylesViewGame.button,\n                onPress: this.GoToMainMenu,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1787,\n                  columnNumber: 49\n                }\n              }, React.createElement(Text, {\n                style: stylesViewGame.Text,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1788,\n                  columnNumber: 53\n                }\n              }, \"Back to Main Menu\")), React.createElement(TouchableOpacity, {\n                style: stylesViewGame.button,\n                onPress: this.GoToViewGameMenu,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1791,\n                  columnNumber: 49\n                }\n              }, React.createElement(Text, {\n                style: stylesViewGame.Text,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1792,\n                  columnNumber: 53\n                }\n              }, \"Back to View Game Menu\")), React.createElement(ScrollView, {\n                horizontal: true,\n                style: stylesViewGame.imagePlotContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1795,\n                  columnNumber: 57\n                }\n              }, React.createElement(ScrollView, {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1797,\n                  columnNumber: 65\n                }\n              }, React.createElement(Image, {\n                style: stylesViewGame.imageSoccerMobile,\n                source: require(\"./SoccerField.png\"),\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1799,\n                  columnNumber: 69\n                }\n              }), this.state.tempEventFieldLocations.map(function (data) {\n                return React.createElement(View, {\n                  style: {\n                    position: 'absolute',\n                    left: data.x,\n                    top: data.y,\n                    backgroundColor: '#242424',\n                    width: 10,\n                    height: 10,\n                    borderRadius: 50\n                  },\n                  __self: _this3,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1803,\n                    columnNumber: 77\n                  }\n                });\n              })))));\n            } else {\n              FieldWithPlots = React.createElement(ScrollView, {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1833,\n                  columnNumber: 41\n                }\n              }, React.createElement(ScrollView, {\n                horizontal: true,\n                style: stylesViewGame.imagePlotContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1835,\n                  columnNumber: 49\n                }\n              }, React.createElement(TouchableOpacity, {\n                style: stylesViewGame.button,\n                onPress: this.GoToMainMenu,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1837,\n                  columnNumber: 53\n                }\n              }, React.createElement(Text, {\n                style: stylesViewGame.Text,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1838,\n                  columnNumber: 57\n                }\n              }, \"Back to Main Menu\")), React.createElement(TouchableOpacity, {\n                style: stylesViewGame.button,\n                onPress: this.GoToViewGameMenu,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1841,\n                  columnNumber: 53\n                }\n              }, React.createElement(Text, {\n                style: stylesViewGame.Text,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1842,\n                  columnNumber: 69\n                }\n              }, \"Back to View Game Menu\")), React.createElement(ScrollView, {\n                horizontal: true,\n                style: stylesViewGame.imagePlotContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1846,\n                  columnNumber: 57\n                }\n              }, React.createElement(ScrollView, {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1848,\n                  columnNumber: 61\n                }\n              }, React.createElement(Image, {\n                style: stylesViewGame.imagePxSoccer,\n                source: require(\"./SoccerField.png\"),\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1850,\n                  columnNumber: 65\n                }\n              }), this.state.tempEventFieldLocations.map(function (data) {\n                return React.createElement(View, {\n                  style: {\n                    position: 'absolute',\n                    left: data.x,\n                    top: data.y,\n                    backgroundColor: '#242424',\n                    width: 10,\n                    height: 10,\n                    borderRadius: 50\n                  },\n                  __self: _this3,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1854,\n                    columnNumber: 73\n                  }\n                });\n              })))));\n            }\n          } else {\n            if (screenWidth < 600 || screenHeight < 376) {\n              alert('Warning - This device is too small to display the full image. Please swipe left to view the field location or use a larger device screen size.');\n              FieldWithPlots = React.createElement(ScrollView, {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1892,\n                  columnNumber: 41\n                }\n              }, React.createElement(ScrollView, {\n                horizontal: true,\n                style: stylesViewGame.imagePlotContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1894,\n                  columnNumber: 45\n                }\n              }, React.createElement(TouchableOpacity, {\n                style: stylesViewGame.button,\n                onPress: this.GoToMainMenu,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1895,\n                  columnNumber: 49\n                }\n              }, React.createElement(Text, {\n                style: stylesViewGame.Text,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1896,\n                  columnNumber: 53\n                }\n              }, \"Back to Main Menu\")), React.createElement(TouchableOpacity, {\n                style: stylesViewGame.button,\n                onPress: this.GoToViewGameMenu,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1899,\n                  columnNumber: 49\n                }\n              }, React.createElement(Text, {\n                style: stylesViewGame.Text,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1900,\n                  columnNumber: 53\n                }\n              }, \"Back to View Game Menu\")), React.createElement(ScrollView, {\n                horizontal: true,\n                style: stylesViewGame.imagePlotContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1905,\n                  columnNumber: 49\n                }\n              }, React.createElement(ScrollView, {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1908,\n                  columnNumber: 53\n                }\n              }, React.createElement(Image, {\n                style: stylesViewGame.imageSoccerMobile,\n                source: require(\"./SoccerField.png\"),\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1910,\n                  columnNumber: 57\n                }\n              }), this.state.tempEventFieldLocations.map(function (data) {\n                return React.createElement(View, {\n                  style: {\n                    position: 'absolute',\n                    left: data.x,\n                    top: data.y,\n                    backgroundColor: '#242424',\n                    width: 10,\n                    height: 10,\n                    borderRadius: 50\n                  },\n                  __self: _this3,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1914,\n                    columnNumber: 77\n                  }\n                });\n              })))));\n            }\n\n            FieldWithPlots = React.createElement(ScrollView, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1945,\n                columnNumber: 37\n              }\n            }, React.createElement(ScrollView, {\n              horizontal: true,\n              style: stylesViewGame.imagePlotContainer,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1947,\n                columnNumber: 41\n              }\n            }, React.createElement(TouchableOpacity, {\n              style: stylesViewGame.button,\n              onPress: this.GoToMainMenu,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1949,\n                columnNumber: 45\n              }\n            }, React.createElement(Text, {\n              style: stylesViewGame.Text,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1950,\n                columnNumber: 49\n              }\n            }, \"Back to Main Menu\")), React.createElement(TouchableOpacity, {\n              style: stylesViewGame.button,\n              onPress: this.GoToViewGameMenu,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1953,\n                columnNumber: 45\n              }\n            }, React.createElement(Text, {\n              style: stylesViewGame.Text,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1954,\n                columnNumber: 49\n              }\n            }, \"Back to View Game Menu\")), React.createElement(ScrollView, {\n              horizontal: true,\n              style: stylesViewGame.imagePlotContainer,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1957,\n                columnNumber: 49\n              }\n            }, React.createElement(ScrollView, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1959,\n                columnNumber: 57\n              }\n            }, React.createElement(Image, {\n              style: stylesViewGame.imagePxSoccer,\n              source: require(\"./SoccerField.png\"),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1961,\n                columnNumber: 61\n              }\n            }), this.state.tempEventFieldLocations.map(function (data) {\n              return React.createElement(View, {\n                style: {\n                  position: 'absolute',\n                  left: data.x,\n                  top: data.y,\n                  backgroundColor: '#242424',\n                  width: 10,\n                  height: 10,\n                  borderRadius: 50\n                },\n                __self: _this3,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1965,\n                  columnNumber: 69\n                }\n              });\n            })))));\n          }\n        }\n      }\n\n      if (OpponentsSpecificStatFieldEvents == true) {\n        if (SportType == 'GAA') {\n          if (screenWidth != this.state.StatsStoredUsingScreenWidth && screenHeight != this.state.StatsStoredUsingScreenHeight) {\n            if (screenWidth < 600 || screenHeight < 376) {\n              alert('Warning - This device is too small to display the full image. Please swipe left to view the field location or use a larger device screen size.');\n              FieldWithPlots = React.createElement(ScrollView, {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2023,\n                  columnNumber: 53\n                }\n              }, React.createElement(ScrollView, {\n                horizontal: true,\n                style: stylesViewGame.imagePlotContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2025,\n                  columnNumber: 53\n                }\n              }, React.createElement(TouchableOpacity, {\n                style: stylesViewGame.button,\n                onPress: this.GoToMainMenu,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2027,\n                  columnNumber: 57\n                }\n              }, React.createElement(Text, {\n                style: stylesViewGame.Text,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2028,\n                  columnNumber: 61\n                }\n              }, \"Back to Main Menu\")), React.createElement(TouchableOpacity, {\n                style: stylesViewGame.button,\n                onPress: this.GoToViewGameMenu,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2031,\n                  columnNumber: 57\n                }\n              }, React.createElement(Text, {\n                style: stylesViewGame.Text,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2032,\n                  columnNumber: 61\n                }\n              }, \"Back to View Game Menu\")), React.createElement(ScrollView, {\n                horizontal: true,\n                style: stylesViewGame.imagePlotContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2036,\n                  columnNumber: 57\n                }\n              }, React.createElement(ScrollView, {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2038,\n                  columnNumber: 61\n                }\n              }, React.createElement(Image, {\n                style: stylesViewGame.imagePxGAA,\n                source: require(\"./GAApitch1.png\"),\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2041,\n                  columnNumber: 61\n                }\n              }), this.state.tempEventFieldLocations.map(function (data) {\n                return React.createElement(View, {\n                  style: {\n                    position: 'absolute',\n                    left: data.x,\n                    top: data.y,\n                    backgroundColor: '#242424',\n                    width: 10,\n                    height: 10,\n                    borderRadius: 50\n                  },\n                  __self: _this3,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 2046,\n                    columnNumber: 77\n                  }\n                });\n              })))));\n            } else {\n              FieldWithPlots = React.createElement(ScrollView, {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2084,\n                  columnNumber: 53\n                }\n              }, React.createElement(ScrollView, {\n                horizontal: true,\n                style: stylesViewGame.imagePlotContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2086,\n                  columnNumber: 53\n                }\n              }, React.createElement(TouchableOpacity, {\n                style: stylesViewGame.button,\n                onPress: this.GoToMainMenu,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2087,\n                  columnNumber: 57\n                }\n              }, React.createElement(Text, {\n                style: stylesViewGame.Text,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2088,\n                  columnNumber: 61\n                }\n              }, \"Back to Main Menu\")), React.createElement(TouchableOpacity, {\n                style: stylesViewGame.button,\n                onPress: this.GoToViewGameMenu,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2091,\n                  columnNumber: 57\n                }\n              }, React.createElement(Text, {\n                style: stylesViewGame.Text,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2092,\n                  columnNumber: 61\n                }\n              }, \"Back to View Game Menu\")), React.createElement(ScrollView, {\n                horizontal: true,\n                style: stylesViewGame.imagePlotContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2096,\n                  columnNumber: 53\n                }\n              }, React.createElement(ScrollView, {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2098,\n                  columnNumber: 61\n                }\n              }, React.createElement(Image, {\n                style: stylesViewGame.imagePxGAA,\n                source: require(\"./GAApitch1.png\"),\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2100,\n                  columnNumber: 73\n                }\n              }), this.state.tempEventFieldLocations.map(function (data) {\n                return React.createElement(View, {\n                  style: {\n                    position: 'absolute',\n                    left: data.x,\n                    top: data.y,\n                    backgroundColor: '#242424',\n                    width: 10,\n                    height: 10,\n                    borderRadius: 50\n                  },\n                  __self: _this3,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 2104,\n                    columnNumber: 77\n                  }\n                });\n              })))));\n            }\n          } else {\n            if (screenWidth < 600 || screenHeight < 376) {\n              alert('Warning - This device is too small to display the full image. Please swipe left to view the field location or use a larger device screen size.');\n              FieldWithPlots = React.createElement(ScrollView, {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2149,\n                  columnNumber: 49\n                }\n              }, React.createElement(ScrollView, {\n                horizontal: true,\n                style: stylesViewGame.imagePlotContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2150,\n                  columnNumber: 49\n                }\n              }, React.createElement(TouchableOpacity, {\n                style: stylesViewGame.button,\n                onPress: this.GoToMainMenu,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2151,\n                  columnNumber: 53\n                }\n              }, React.createElement(Text, {\n                style: stylesViewGame.Text,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2152,\n                  columnNumber: 57\n                }\n              }, \"Back to Main Menu\")), React.createElement(TouchableOpacity, {\n                style: stylesViewGame.button,\n                onPress: this.GoToViewGameMenu,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2155,\n                  columnNumber: 53\n                }\n              }, React.createElement(Text, {\n                style: stylesViewGame.Text,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2156,\n                  columnNumber: 57\n                }\n              }, \"Back to View Game Menu\")), React.createElement(ScrollView, {\n                horizontal: true,\n                style: stylesViewGame.imagePlotContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2160,\n                  columnNumber: 49\n                }\n              }, React.createElement(ScrollView, {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2162,\n                  columnNumber: 53\n                }\n              }, React.createElement(Image, {\n                style: stylesViewGame.imagePxGAA,\n                source: require(\"./GAApitch1.png\"),\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2165,\n                  columnNumber: 57\n                }\n              }), this.state.tempEventFieldLocations.map(function (data) {\n                return React.createElement(View, {\n                  style: {\n                    position: 'absolute',\n                    left: data.x,\n                    top: data.y,\n                    backgroundColor: '#242424',\n                    width: 10,\n                    height: 10,\n                    borderRadius: 50\n                  },\n                  __self: _this3,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 2169,\n                    columnNumber: 65\n                  }\n                });\n              })))));\n            }\n\n            FieldWithPlots = React.createElement(ScrollView, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2197,\n                columnNumber: 45\n              }\n            }, React.createElement(ScrollView, {\n              horizontal: true,\n              style: stylesViewGame.imagePlotContainer,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2198,\n                columnNumber: 45\n              }\n            }, React.createElement(TouchableOpacity, {\n              style: stylesViewGame.button,\n              onPress: this.GoToMainMenu,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2199,\n                columnNumber: 49\n              }\n            }, React.createElement(Text, {\n              style: stylesViewGame.Text,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2200,\n                columnNumber: 53\n              }\n            }, \"Back to Main Menu\")), React.createElement(TouchableOpacity, {\n              style: stylesViewGame.button,\n              onPress: this.GoToViewGameMenu,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2203,\n                columnNumber: 49\n              }\n            }, React.createElement(Text, {\n              style: stylesViewGame.Text,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2204,\n                columnNumber: 53\n              }\n            }, \"Back to View Game Menu\")), React.createElement(ScrollView, {\n              horizontal: true,\n              style: stylesViewGame.imagePlotContainer,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2209,\n                columnNumber: 45\n              }\n            }, React.createElement(ScrollView, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2211,\n                columnNumber: 49\n              }\n            }, React.createElement(Image, {\n              style: stylesViewGame.imagePxGAA,\n              source: require(\"./GAApitch1.png\"),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2214,\n                columnNumber: 53\n              }\n            }), this.state.tempEventFieldLocations.map(function (data) {\n              return React.createElement(View, {\n                style: {\n                  position: 'absolute',\n                  left: data.x,\n                  top: data.y,\n                  backgroundColor: '#242424',\n                  width: 10,\n                  height: 10,\n                  borderRadius: 50\n                },\n                __self: _this3,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2218,\n                  columnNumber: 61\n                }\n              });\n            })))));\n          }\n        } else if (SportType == 'Soccer') {\n          if (screenWidth != this.state.StatsStoredUsingScreenWidth && screenHeight != this.state.StatsStoredUsingScreenHeight) {\n            if (screenWidth < 600 || screenHeight < 376) {\n              alert('Warning - This device is too small to display the full image. Please swipe left to view the field location or use a larger device screen size.');\n              FieldWithPlots = React.createElement(ScrollView, {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2257,\n                  columnNumber: 53\n                }\n              }, React.createElement(ScrollView, {\n                horizontal: true,\n                style: stylesViewGame.imagePlotContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2258,\n                  columnNumber: 49\n                }\n              }, React.createElement(TouchableOpacity, {\n                style: stylesViewGame.button,\n                onPress: this.GoToMainMenu,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2260,\n                  columnNumber: 53\n                }\n              }, React.createElement(Text, {\n                style: stylesViewGame.Text,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2261,\n                  columnNumber: 57\n                }\n              }, \"Back to Main Menu\")), React.createElement(TouchableOpacity, {\n                style: stylesViewGame.button,\n                onPress: this.GoToViewGameMenu,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2264,\n                  columnNumber: 53\n                }\n              }, React.createElement(Text, {\n                style: stylesViewGame.Text,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2265,\n                  columnNumber: 57\n                }\n              }, \"Back to View Game Menu\")), React.createElement(ScrollView, {\n                horizontal: true,\n                style: stylesViewGame.imagePlotContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2269,\n                  columnNumber: 53\n                }\n              }, React.createElement(ScrollView, {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2270,\n                  columnNumber: 61\n                }\n              }, React.createElement(Image, {\n                style: stylesViewGame.imageSoccerMobile,\n                source: require(\"./SoccerField.png\"),\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2274,\n                  columnNumber: 65\n                }\n              }), this.state.tempEventFieldLocations.map(function (data) {\n                return React.createElement(View, {\n                  style: {\n                    position: 'absolute',\n                    left: data.x,\n                    top: data.y,\n                    backgroundColor: '#242424',\n                    width: 10,\n                    height: 10,\n                    borderRadius: 50\n                  },\n                  __self: _this3,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 2278,\n                    columnNumber: 73\n                  }\n                });\n              })))));\n            } else {\n              FieldWithPlots = React.createElement(ScrollView, {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2311,\n                  columnNumber: 53\n                }\n              }, React.createElement(ScrollView, {\n                horizontal: true,\n                style: stylesViewGame.imagePlotContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2312,\n                  columnNumber: 49\n                }\n              }, React.createElement(TouchableOpacity, {\n                style: stylesViewGame.button,\n                onPress: this.GoToMainMenu,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2313,\n                  columnNumber: 53\n                }\n              }, React.createElement(Text, {\n                style: stylesViewGame.Text,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2314,\n                  columnNumber: 57\n                }\n              }, \"Back to Main Menu\")), React.createElement(TouchableOpacity, {\n                style: stylesViewGame.button,\n                onPress: this.GoToViewGameMenu,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2317,\n                  columnNumber: 53\n                }\n              }, React.createElement(Text, {\n                style: stylesViewGame.Text,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2318,\n                  columnNumber: 57\n                }\n              }, \"Back to View Game Menu\")), React.createElement(ScrollView, {\n                horizontal: true,\n                style: stylesViewGame.imagePlotContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2323,\n                  columnNumber: 53\n                }\n              }, React.createElement(ScrollView, {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2324,\n                  columnNumber: 57\n                }\n              }, React.createElement(Image, {\n                style: stylesViewGame.imagePxSoccer,\n                source: require(\"./SoccerField.png\"),\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2327,\n                  columnNumber: 57\n                }\n              }), this.state.tempEventFieldLocations.map(function (data) {\n                return React.createElement(View, {\n                  style: {\n                    position: 'absolute',\n                    left: data.x,\n                    top: data.y,\n                    backgroundColor: '#242424',\n                    width: 10,\n                    height: 10,\n                    borderRadius: 50\n                  },\n                  __self: _this3,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 2331,\n                    columnNumber: 65\n                  }\n                });\n              })))));\n            }\n          } else {\n            if (screenWidth < 600 || screenHeight < 376) {\n              alert('Warning - This device is too small to display the full image. Please swipe left to view the field location or use a larger device screen size.');\n              FieldWithPlots = React.createElement(ScrollView, {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2368,\n                  columnNumber: 53\n                }\n              }, React.createElement(ScrollView, {\n                horizontal: true,\n                style: stylesViewGame.imagePlotContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2369,\n                  columnNumber: 49\n                }\n              }, React.createElement(TouchableOpacity, {\n                style: stylesViewGame.button,\n                onPress: this.GoToMainMenu,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2370,\n                  columnNumber: 53\n                }\n              }, React.createElement(Text, {\n                style: stylesViewGame.Text,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2371,\n                  columnNumber: 57\n                }\n              }, \"Back to Main Menu\")), React.createElement(TouchableOpacity, {\n                style: stylesViewGame.button,\n                onPress: this.GoToViewGameMenu,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2374,\n                  columnNumber: 53\n                }\n              }, React.createElement(Text, {\n                style: stylesViewGame.Text,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2375,\n                  columnNumber: 57\n                }\n              }, \"Back to View Game Menu\")), React.createElement(ScrollView, {\n                horizontal: true,\n                style: stylesViewGame.imagePlotContainer,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2380,\n                  columnNumber: 53\n                }\n              }, React.createElement(ScrollView, {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2381,\n                  columnNumber: 53\n                }\n              }, React.createElement(Image, {\n                style: stylesViewGame.imageSoccerMobile,\n                source: require(\"./SoccerField.png\"),\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2386,\n                  columnNumber: 53\n                }\n              }), this.state.tempEventFieldLocations.map(function (data) {\n                return React.createElement(View, {\n                  style: {\n                    position: 'absolute',\n                    left: data.x,\n                    top: data.y,\n                    backgroundColor: '#242424',\n                    width: 10,\n                    height: 10,\n                    borderRadius: 50\n                  },\n                  __self: _this3,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 2390,\n                    columnNumber: 73\n                  }\n                });\n              })))));\n            }\n\n            FieldWithPlots = React.createElement(ScrollView, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2419,\n                columnNumber: 49\n              }\n            }, React.createElement(ScrollView, {\n              horizontal: true,\n              style: stylesViewGame.imagePlotContainer,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2420,\n                columnNumber: 49\n              }\n            }, React.createElement(TouchableOpacity, {\n              style: stylesViewGame.button,\n              onPress: this.GoToMainMenu,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2422,\n                columnNumber: 53\n              }\n            }, React.createElement(Text, {\n              style: stylesViewGame.Text,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2423,\n                columnNumber: 57\n              }\n            }, \"Back to Main Menu\")), React.createElement(TouchableOpacity, {\n              style: stylesViewGame.button,\n              onPress: this.GoToViewGameMenu,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2426,\n                columnNumber: 53\n              }\n            }, React.createElement(Text, {\n              style: stylesViewGame.Text,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2427,\n                columnNumber: 57\n              }\n            }, \"Back to View Game Menu\")), React.createElement(ScrollView, {\n              horizontal: true,\n              style: stylesViewGame.imagePlotContainer,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2431,\n                columnNumber: 49\n              }\n            }, React.createElement(ScrollView, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2432,\n                columnNumber: 49\n              }\n            }, React.createElement(Image, {\n              style: stylesViewGame.imagePxSoccer,\n              source: require(\"./SoccerField.png\"),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2434,\n                columnNumber: 57\n              }\n            }), this.state.tempEventFieldLocations.map(function (data) {\n              return React.createElement(View, {\n                style: {\n                  position: 'absolute',\n                  left: data.x,\n                  top: data.y,\n                  backgroundColor: '#242424',\n                  width: 10,\n                  height: 10,\n                  borderRadius: 50\n                },\n                __self: _this3,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2438,\n                  columnNumber: 65\n                }\n              });\n            })))));\n          }\n        }\n      }\n\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          backgroundColor: '#252626'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2473,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2476,\n          columnNumber: 25\n        }\n      }, ReviewSelection), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2479,\n          columnNumber: 25\n        }\n      }, FieldWithPlots), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2482,\n          columnNumber: 25\n        }\n      }, ReviewGameStats), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2486,\n          columnNumber: 25\n        }\n      }, ReviewPlayerStats), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2491,\n          columnNumber: 25\n        }\n      }, PlayerStats));\n    }\n  }]);\n\n  return ViewGame;\n}(Component);\n\nvar stylesViewGame = StyleSheet.create({\n  container: {\n    backgroundColor: '#242424',\n    marginTop: 50,\n    marginBottom: 5,\n    marginLeft: 5,\n    marginRight: 5,\n    paddingLeft: 5\n  },\n  Text: {\n    color: \"white\",\n    fontSize: 18,\n    justifyContent: 'center'\n  },\n  headerContainer: {\n    backgroundColor: '#FF6D01',\n    alignItems: \"center\",\n    borderWidth: 4,\n    borderColor: '#ffffff',\n    alignItems: 'center',\n    width: wp('50%'),\n    marginTop: 30,\n    padding: 4\n  },\n  StatRow: {\n    flex: 1,\n    alignItems: \"center\",\n    marginBottom: 10,\n    borderWidth: 4,\n    borderColor: '#ffffff'\n  },\n  dataContainer: {\n    backgroundColor: '#ffffff',\n    alignItems: 'center'\n  },\n  container2: {\n    backgroundColor: '#ffffff',\n    alignItems: 'center'\n  },\n  input: {\n    height: 48,\n    borderRadius: 5,\n    overflow: 'hidden',\n    backgroundColor: 'white',\n    marginTop: 10,\n    marginBottom: 10,\n    marginLeft: 30,\n    marginRight: 30,\n    paddingLeft: 16\n  },\n  button: {\n    backgroundColor: '#FF6D01',\n    marginLeft: 30,\n    marginRight: 30,\n    marginTop: 20,\n    height: 48,\n    borderRadius: 5,\n    alignItems: \"center\",\n    justifyContent: 'center'\n  },\n  imagePxGAA: {\n    height: 376,\n    width: 700\n  },\n  imagePxGAAmobile: {\n    height: 300,\n    width: 590\n  },\n  imagePxSoccer: {\n    height: 400,\n    width: 700\n  },\n  imageSoccerMobile: {\n    height: 280,\n    width: 480\n  },\n  imagePlotContainer: {\n    flexWrap: 'wrap',\n    flexDirection: \"row\"\n  },\n  imageGAA: {\n    width: win.width,\n    height: 300 * ratioGaaView\n  },\n  imageSoccer: {\n    width: win.width,\n    height: 376 * ratioSoccerView,\n    top: '20%'\n  }\n});\nexport default ViewGame;","map":{"version":3,"sources":["D:/StatsAppNative/MyApp/screens/ViewGame/ViewGame.js"],"names":["React","useEffect","useState","Component","useNavigation","createAppContainer","createStackNavigator","firebase","createKeyboardAwareNavigator","ThemeColors","widthPercentageToDP","wp","heightPercentageToDP","hp","Picker","TapGestureHandler","screenWidth","Dimensions","get","width","screenHeight","height","win","ratioGaaView","ratioSoccerView","ViewGame","props","filterGameData","totalTeamGoals","state","myUserId","auth","currentUser","uid","navigation","setParams","navigate","params","tempArr","tempArrOpponents","database","ref","child","GameRecordKey","StatsRecordKey","on","snapshot","gameObj","val","setState","StatsStoredUsingScreenWidth","StatsStoredUsingScreenHeight","totalTeamShots","totalTeamShotsOnTarget","OpponentsName","totalOpponentsTeamGoals","totalOpponentsTeamShots","totalOpponentsTeamShotsOnTarget","snapshotToArray","EventFieldLocations","OpponentsEventFieldLocations","playerArr","PlayerData","OpponentsplayerArr","OpponentsPlayerData","err","GetSelectedYourTeamPlayerStats","value","tempArrYourTeam","key","YourTeamPlayerData","GoToMainMenu","GoToViewGameMenu","displayReviewSelection","YourTeamSpecificStatFieldEvents","OpponentsSpecificStatFieldEvents","GetSelectedOpponentsPlayerStats","ReviewPlayerStats","itemKey","selectedTeamPlayer","YourTeamEventSelection","alert","displayReviewGameStats","displaySelectedPlayerStats","orderByChild","equalTo","playerObj","i","length","Goals","Points","Passes","PlayerKitNumber","PlayerName","PlayerPosition","Shots","ShotsOnTarget","ReviewOpponentsPlayerStats","selectedOpponentsPlayer","displayOpponentsSelectedPlayerStats","GetSpecificPlayerEventLocations","tempEventFieldLocations","splice","EventType","UserID","data","x","y","id","push","SelectAnEvent_ReviewGameStats_YourTeamPlayer","GetSpecificOpponentsPlayerEventLocations","OpponentsEventSelection","SelectAnEvent_ReviewGameStats_Opponents_TeamPlayer","ReviewGameStats","TeamSpecificStat","SelectAnEvent_ReviewGameStats_YourTeam","OpponentsSpecificStat","SelectAnEvent_ReviewGameStats_Opponents","ExecuteYourTeamEventAnaylsis","ExecuteOpponentsPlayerEventAnaylsis","OpponentEventSelection","SportType","retArr","forEach","childSnapshot","item","YourTeamSelected","displayReviewOpponentsPlayer","displayReviewYourTeamPlayer","displayTeamOption","console","log","OpponentsSelected","SelectPlayerSelection","SelectOpponentsPlayerSelection","TeamName","inviteCode","hasATeam","userType","GameList","GameViewList","UsersScreenHeight","UsersScreenWidth","statRecord","gameStatsRecordsArray","totalTeamPoints","totalTeamPasses","totalOpponentsTeamPoints","totalOpponentsTeamPasses","YourTeamFieldEventsView","OpponentsFieldEventsView","displayTeamSpecificEventSelection","displayOpponentsSpecificEventSelection","OpponentsSpecificStatFieldEventsSoccerView","userObj","ReviewSelection","TeamOption","PlayerStats","FieldWithPlots","stylesViewGame","container","button","Text","headerContainer","StatRow","input","text","map","index","PlayerID","imagePlotContainer","imagePxGAA","require","position","left","top","backgroundColor","borderRadius","imageSoccerMobile","imagePxSoccer","flex","StyleSheet","create","marginTop","marginBottom","marginLeft","marginRight","paddingLeft","color","fontSize","justifyContent","alignItems","borderWidth","borderColor","padding","dataContainer","container2","overflow","imagePxGAAmobile","flexWrap","flexDirection","imageGAA","imageSoccer"],"mappings":"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","sourcesContent":["import React, { useEffect, useState , Component  } from 'react'\r\nimport {ImageBackground, Dimensions,StatusBar,FlatList, Keyboard,  StyleSheet, Image, Text, View , ScrollView, TouchableOpacity,TextInput , Button , Alert} from 'react-native'\r\n\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { createAppContainer } from 'react-navigation';\r\nimport { createStackNavigator } from 'react-navigation-stack';\r\n\r\n\r\n\r\n\r\n\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\nimport { createKeyboardAwareNavigator, ThemeColors } from 'react-navigation';\r\n\r\nimport {widthPercentageToDP as wp, heightPercentageToDP as hp} from 'react-native-responsive-screen';\r\n\r\n\r\nimport {Picker} from '@react-native-community/picker';\r\nimport { TapGestureHandler } from 'react-native-gesture-handler';\r\n\r\nconst screenWidth = Dimensions.get('window').width;\r\n\r\nconst screenHeight = Dimensions.get('window').height;\r\n\r\n\r\nconst win = Dimensions.get('window');\r\n\r\n\r\nconst ratioGaaView = win.width/590;\r\n\r\n\r\nconst ratioSoccerView = win.width/700;\r\n\r\nclass ViewGame extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            TeamName: '',\r\n            OpponentsName:'',\r\n            SportType: '',\r\n            inviteCode:'',\r\n            hasATeam: false,\r\n            userType: [],\r\n            GameList:[],\r\n            GameViewList:[],\r\n\r\n\r\n            UsersScreenHeight:0,\r\n            UsersScreenWidth:0,\r\n            statRecord:'',\r\n            gameStatsRecordsArray:[],\r\n\r\n            selectedTeamPlayer:'',\r\n            selectedOpponentsPlayer:'',\r\n\r\n            PlayerData:[],\r\n            OpponentsPlayerData:[],\r\n            YourTeamPlayerData:[],\r\n            tempArr:[],\r\n            tempArrOpponents:[],\r\n            tempArrYourTeam:[],\r\n\r\n            playerArr:[],\r\n            OpponentsplayerArr:[],\r\n\r\n       \r\n       \r\n\r\n            totalTeamGoals: 0,\r\n            totalTeamPoints:0,\r\n            totalTeamPasses: 0,\r\n            totalTeamShots:0,\r\n            totalTeamShotsOnTarget:0,\r\n                     \r\n            totalOpponentsTeamGoals:0,\r\n            totalOpponentsTeamPoints:0,\r\n            totalOpponentsTeamShots: 0,\r\n            totalOpponentsTeamShotsOnTarget:0,\r\n            totalOpponentsTeamPasses: 0,\r\n\r\n            GameRecordKey:'',\r\n            StatsRecordKey: '',\r\n\r\n            //Detailed Analysis - Player Specific\r\n            tempEventFieldLocations:[],\r\n            YourTeamFieldEventsView: false,\r\n            OpponentsFieldEventsView:false,\r\n\r\n\r\n            YourTeamEventSelection: '',\r\n            OpponentsEventSelection:'',\r\n\r\n            EventFieldLocations:[],\r\n            OpponentsEventFieldLocations:[],\r\n\r\n            //Detailed Analysis - Tean event Specific\r\n            displayTeamSpecificEventSelection:false,\r\n            displayOpponentsSpecificEventSelection:false,\r\n\r\n        \r\n            //Field Location views - Overall Team/Opponent Team Events\r\n            YourTeamSpecificStatFieldEvents: false,\r\n            OpponentsSpecificStatFieldEventsSoccerView:false,\r\n\r\n            //frontend end toggles\r\n            displayReviewSelection:true,\r\n            displayReviewGameStats:false,\r\n            displayReviewYourTeamPlayer:false,\r\n            displayReviewOpponentsPlayer:false,\r\n            displaySelectedPlayerStats:false,\r\n\r\n            //Event Selection - Overall Team/Opponent Team Events\r\n            SelectAnEvent_ReviewGameStats_YourTeam:false,\r\n            SelectAnEvent_ReviewGameStats_Opponents:false,\r\n\r\n            //Event Selection - Player Specific Event Selection  \r\n            SelectAnEvent_ReviewGameStats_YourTeamPlayer:false,\r\n            SelectAnEvent_ReviewGameStats_Opponents_TeamPlayer:false,\r\n\r\n            //Field Location views - Overall Team/Opponent Team Events (GAA + Soccer)\r\n            YourTeamSpecificStatFieldEvents:false,\r\n            OpponentsSpecificStatFieldEvents:false,\r\n\r\n            //Individual Player Stats\r\n            PlayerKitNumber: 0,\r\n            PlayerName:'',\r\n            PlayerPosition:'',\r\n            Goals:0,\r\n            Points:0,\r\n            Passes:0,\r\n            Shots:0,\r\n            ShotsOnTarget:0,\r\n\r\n        };\r\n\r\n     \r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        //Obtain SelectedStarting11 Array of players\r\n        const { state, setParams, navigate } = this.props.navigation;\r\n        const params = state.params || {};\r\n\r\n\r\n        console.log(params);\r\n     \r\n        \r\n        // Firebase Key for the Game record\r\n        this.setState({GameRecordKey: params.GameRecordKey});\r\n\r\n        //Firebase Key for the Game Stats Record\r\n        this.setState({StatsRecordKey: params.StatsRecordKey});\r\n\r\n\r\n        var myUserId = firebase.auth().currentUser.uid;\r\n        var GameRecordKey = this.state.GameRecordKey;\r\n        var gameStatsRecordsArray = this.state.gameStatsRecordsArray;\r\n\r\n\r\n        // GET Team SportType\r\n        firebase.database().ref('/teams').child(myUserId)\r\n        .on('value', snapshot => {\r\n            const userObj = snapshot.val();\r\n\r\n            let SportType = userObj.SportType;\r\n            this.setState({SportType:SportType});\r\n\r\n            let TeamName = userObj.TeamName;\r\n            this.setState({TeamName:TeamName});\r\n\r\n        });\r\n\r\n\r\n            console.log(this.state.SportType);\r\n\r\n            this.setState({SelectAnEvent_ReviewGameStats_Opponents_TeamPlayer:false});\r\n     \r\n            this.filterGameData();\r\n\r\n        }\r\n\r\n            \r\n \r\n  filterGameData = async() => {\r\n\r\n    var totalTeamGoals = this.state.totalTeamGoals;\r\n\r\n    var myUserId = firebase.auth().currentUser.uid;\r\n\r\n        //Obtain SelectedStarting11 Array of players\r\n        const { state, setParams, navigate } = this.props.navigation;\r\n        const params = state.params || {};\r\n        \r\n\r\n        var tempArr = [];\r\n        var tempArrOpponents = [];\r\n        \r\n   try{\r\n\r\n   \r\n        \r\n\r\n    //GET Game records and put them all into an array \r\n    firebase.database().ref('/teams').child(myUserId).child('games').child(params.GameRecordKey).child('YourTeamStats').child(params.StatsRecordKey)\r\n    .on('value', snapshot => {\r\n   \r\n\r\n        const gameObj = snapshot.val();\r\n\r\n\r\n        let screenWidth = gameObj.screenWidth;\r\n        this.setState({StatsStoredUsingScreenWidth: screenWidth});\r\n\r\n        let screenHeight = gameObj.screenHeight;\r\n        this.setState({StatsStoredUsingScreenHeight: screenHeight});\r\n\r\n\r\n        let totalTeamGoals = gameObj.totalTeamGoals;\r\n        this.setState({totalTeamGoals: totalTeamGoals});\r\n\r\n        // let totalTeamPasses = gameObj.totalTeamPasses;\r\n        // this.setState({totalTeamPasses:totalTeamPasses});\r\n\r\n        let totalTeamShots = gameObj.totalTeamShots;\r\n        this.setState({totalTeamShots:totalTeamShots});\r\n\r\n        let totalTeamShotsOnTarget = gameObj.totalTeamShotsOnTarget;\r\n        this.setState({totalTeamShotsOnTarget:totalTeamShotsOnTarget});\r\n\r\n        let OpponentsName = gameObj.OpponentsName;\r\n        this.setState({OpponentsName: OpponentsName});\r\n\r\n        let totalOpponentsTeamGoals = gameObj.totalOpponentsTeamGoals;\r\n        this.setState({totalOpponentsTeamGoals: totalOpponentsTeamGoals});\r\n\r\n        // let totalOpponentsTeamPasses = gameObj.totalOpponentsTeamPasses;\r\n        // this.setState({totalOpponentsTeamPasses:totalOpponentsTeamPasses});\r\n\r\n        let totalOpponentsTeamShots = gameObj.totalOpponentsTeamShots;\r\n        this.setState({totalOpponentsTeamShots:totalOpponentsTeamShots});\r\n\r\n        let totalOpponentsTeamShotsOnTarget = gameObj.totalOpponentsTeamShotsOnTarget;\r\n        this.setState({totalOpponentsTeamShotsOnTarget:totalOpponentsTeamShotsOnTarget});\r\n\r\n\r\n\r\n        });\r\n\r\n\r\n          //Get data from DB - Your Team Event Locations \r\n          firebase.database().ref('/teams').child(myUserId).child('/games').child(params.GameRecordKey).child('EventFieldPositions')\r\n          .on('value', snapshot => {\r\n    \r\n             tempArr = this.snapshotToArray(snapshot);\r\n\r\n              this.setState({\r\n                  EventFieldLocations: tempArr\r\n              });\r\n  \r\n       \r\n          });\r\n\r\n\r\n        \r\n\r\n        //Get data from DB  - Opponents Event Locations \r\n        firebase.database().ref('/teams').child(myUserId).child('/games').child(params.GameRecordKey).child('OpponentsEventFieldPositions')\r\n        .on('value', snapshot => {\r\n\r\n            tempArrOpponents = this.snapshotToArray(snapshot);\r\n\r\n            this.setState({\r\n                OpponentsEventFieldLocations:  tempArrOpponents\r\n            });\r\n        });\r\n\r\n\r\n\r\n        var myUserId = firebase.auth().currentUser.uid;\r\n        var playerArr = [];\r\n\r\n        firebase.database().ref('/teams').child(myUserId).child('/games').child(params.GameRecordKey).child('YourTeam').child('players')\r\n            .on('value', snapshot => {\r\n\r\n            \r\n              \r\n                playerArr = this.snapshotToArray(snapshot);\r\n\r\n                this.setState({\r\n                    PlayerData: playerArr\r\n                });\r\n\r\n        });\r\n\r\n\r\n        var OpponentsplayerArr = [];\r\n        firebase.database().ref('/teams').child(myUserId).child('/games').child(params.GameRecordKey).child('Opponents').child('players')\r\n        .on('value', snapshot => {\r\n\r\n       \r\n          \r\n            OpponentsplayerArr = this.snapshotToArray(snapshot);\r\n\r\n            this.setState({\r\n                OpponentsPlayerData: OpponentsplayerArr\r\n            });\r\n\r\n        });\r\n\r\n   \r\n        }\r\n        catch(err){\r\n            \r\n        }\r\n      }\r\n\r\n\r\n\r\n\r\n\r\n    //Your Team - Player Lists\r\n    GetSelectedYourTeamPlayerStats = value => () => {\r\n\r\n        //Obtain Array of players\r\n        const { state, setParams, navigate } = this.props.navigation;\r\n        const params = state.params || {};\r\n\r\n        var myUserId = firebase.auth().currentUser.uid;\r\n        var tempArrYourTeam = [];\r\n\r\n        firebase.database().ref('/teams').child(myUserId).child('/games').child(params.key).child('YourTeam').child('players')\r\n            .on('value', snapshot => {\r\n              \r\n                tempArrYourTeam = this.snapshotToArray(snapshot);\r\n                this.setState({\r\n                    YourTeamPlayerData: tempArrYourTeam\r\n                });\r\n\r\n        });\r\n\r\n   \r\n\r\n\r\n    }\r\n\r\n\r\n    GoToMainMenu = async() => {\r\n        this.props.navigation.navigate('Home');\r\n    }\r\n\r\n \r\n\r\n    GoToViewGameMenu = async() => {\r\n        \r\n        //Make View game menu appear\r\n        this.setState({displayReviewSelection:true});\r\n\r\n        //Make field disappear \r\n        this.setState({YourTeamSpecificStatFieldEvents: false});\r\n        this.setState({OpponentsSpecificStatFieldEvents: false});\r\n\r\n    };\r\n\r\n\r\n\r\n       \r\n     \r\n\r\n\r\n    //Opponents - Player Lists\r\n    GetSelectedOpponentsPlayerStats = value => () => {\r\n\r\n        //Obtain Array of players\r\n        const { state, setParams, navigate } = this.props.navigation;\r\n        const params = state.params || {};\r\n\r\n        var myUserId = firebase.auth().currentUser.uid;\r\n        var tempArrOpponents = [];\r\n\r\n        firebase.database().ref('/teams').child(myUserId).child('/games').child(params.key).child('Opponents').child('players')\r\n            .on('value', snapshot => {\r\n              \r\n                tempArrOpponents = this.snapshotToArray(snapshot);\r\n                this.setState({\r\n                    OpponentsPlayerData: tempArrOpponents\r\n                });\r\n\r\n        });\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    //GET a specifc YOUR TEAM player\r\n    ReviewPlayerStats = ( itemKey ) => {\r\n        \r\n        var selectedTeamPlayer = this.state.selectedTeamPlayer;\r\n        var YourTeamEventSelection = this.state.YourTeamEventSelection;\r\n\r\n        var myUserId = firebase.auth().currentUser.uid;\r\n\r\n\r\n       const { state, setParams, navigate } = this.props.navigation;\r\n       const params = state.params || {};\r\n       var tempArr = this.state.tempArr;\r\n\r\n        if(selectedTeamPlayer == '' )\r\n        {\r\n            return alert(\"Please select a player\");\r\n        }\r\n        else\r\n        {\r\n            this.setState({displayReviewGameStats: false});\r\n            this.setState({displaySelectedPlayerStats:true});\r\n            \r\n\r\n            //WE ARE HERE - finish orderby ID \r\n            firebase.database().ref('/teams').child(myUserId).child('/games').child(params.GameRecordKey).child('YourTeam').child('players').orderByChild(\"PlayerID\").equalTo(selectedTeamPlayer)\r\n            .on('value', snapshot => {\r\n\r\n                const playerObj = snapshot.val();\r\n\r\n\r\n     \r\n                tempArr = this.snapshotToArray(snapshot);\r\n         \r\n\r\n                for(var i = 0; i < tempArr.length; i++)\r\n                {\r\n                    \r\n                    let Goals = tempArr[i].Goals;\r\n                    this.setState({Goals:Goals});\r\n\r\n                    let Points = tempArr[i].Points;\r\n                    this.setState({Points:Points});\r\n                    \r\n                    let Passes = tempArr[i].Passes;\r\n                    this.setState({Passes:Passes});\r\n\r\n                    let PlayerKitNumber = tempArr[i].PlayerKitNumber;\r\n                    this.setState({PlayerKitNumber:PlayerKitNumber});\r\n\r\n                    let PlayerName = tempArr[i].PlayerName;\r\n                    this.setState({PlayerName:PlayerName});\r\n\r\n                    let PlayerPosition = tempArr[i].PlayerPosition;\r\n                    this.setState({PlayerPosition:PlayerPosition});\r\n\r\n                    let Shots = tempArr[i].Shots;\r\n                    this.setState({Shots:Shots});\r\n\r\n                    let ShotsOnTarget = tempArr[i].ShotsOnTarget;\r\n                    this.setState({ShotsOnTarget: ShotsOnTarget});\r\n\r\n                }\r\n            \r\n            \r\n        \r\n           \r\n            });\r\n\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n   \r\n\r\n    }\r\n\r\n\r\n    //GET a specific OPPONENTS player\r\n    ReviewOpponentsPlayerStats = ( itemKey ) => {\r\n\r\n    \r\n        var myUserId = firebase.auth().currentUser.uid;\r\n\r\n        const { state, setParams, navigate } = this.props.navigation;\r\n        const params = state.params || {};\r\n        var tempArr = this.state.tempArr;\r\n             \r\n\r\n        var selectedOpponentsPlayer = this.state.selectedOpponentsPlayer;\r\n\r\n        if(selectedOpponentsPlayer == '' )\r\n        {\r\n            return alert(\"Please select a player\");\r\n        }\r\n        else\r\n        {\r\n            \r\n            this.setState({displayReviewGameStats: false});\r\n            this.setState({displayOpponentsSelectedPlayerStats:true});\r\n  \r\n         \r\n              firebase.database().ref('/teams').child(myUserId).child('/games').child(params.GameRecordKey).child('Opponents').child('players').orderByChild(\"PlayerID\").equalTo(selectedOpponentsPlayer)\r\n              .on('value', snapshot => {\r\n  \r\n                  const playerObj = snapshot.val();\r\n  \r\n                  tempArr = this.snapshotToArray(snapshot);\r\n           \r\n  \r\n                  for(var i = 0; i < tempArr.length; i++)\r\n                  {\r\n                      \r\n                      let Goals = tempArr[i].Goals;\r\n                      this.setState({Goals:Goals});\r\n  \r\n                      let Points = tempArr[i].Points;\r\n                      this.setState({Points:Points});\r\n                      \r\n                      let Passes = tempArr[i].Passes;\r\n                      this.setState({Passes:Passes});\r\n  \r\n                      let PlayerKitNumber = tempArr[i].PlayerKitNumber;\r\n                      this.setState({PlayerKitNumber:PlayerKitNumber});\r\n  \r\n                      let PlayerName = tempArr[i].PlayerName;\r\n                      this.setState({PlayerName:PlayerName});\r\n  \r\n                      let PlayerPosition = tempArr[i].PlayerPosition;\r\n                      this.setState({PlayerPosition:PlayerPosition});\r\n  \r\n                      let Shots = tempArr[i].Shots;\r\n                      this.setState({Shots:Shots});\r\n  \r\n                      let ShotsOnTarget = tempArr[i].ShotsOnTarget;\r\n                      this.setState({ShotsOnTarget: ShotsOnTarget});\r\n  \r\n                  }\r\n              \r\n                      \r\n              });\r\n  \r\n  \r\n  \r\n          }\r\n  \r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n        }\r\n\r\n\r\n    GetSpecificPlayerEventLocations = async() => {\r\n        \r\n        //Array to store event Locations\r\n        var EventFieldLocations = this.state.EventFieldLocations;   \r\n\r\n        var YourTeamEventSelection = this.state.YourTeamEventSelection;\r\n\r\n        var selectedTeamPlayer = this.state.selectedTeamPlayer;\r\n\r\n    \r\n        var myUserId = firebase.auth().currentUser.uid;\r\n        var tempEventFieldLocations = this.state.tempEventFieldLocations;\r\n\r\n      \r\n        if(selectedTeamPlayer != '')\r\n        {\r\n\r\n            if(YourTeamEventSelection == '')\r\n            {\r\n                return alert(\"Please select an event\");\r\n            }\r\n            else\r\n            {\r\n                //get Event locations using SelectedTeamPlayer + YourTeamEventSelection\r\n                const { state, setParams, navigate } = this.props.navigation;\r\n                const params = state.params || {};\r\n               \r\n                //empty tempEventFieldLocations as this is only a temp array\r\n                tempEventFieldLocations.splice(0,tempEventFieldLocations.length);\r\n        \r\n                //filter array to get the specific player and event locations\r\n                for (var i = 0; i < EventFieldLocations.length; i++) \r\n                {\r\n        \r\n                    if(EventFieldLocations[i].EventType == YourTeamEventSelection)\r\n                    {\r\n                        if(EventFieldLocations[i].UserID == selectedTeamPlayer)\r\n                        {\r\n\r\n                            var data = {\r\n                                x:EventFieldLocations[i].x, \r\n                                y:EventFieldLocations[i].y,\r\n                                id:EventFieldLocations[i].UserID\r\n                            };\r\n            \r\n            \r\n                            //Push to new temp EventFieldLocations\r\n                            this.state.tempEventFieldLocations.push(data);\r\n\r\n                        }\r\n        \r\n                    }\r\n                }\r\n        \r\n        \r\n\r\n                    //Make Field Image appear\r\n                    this.setState({YourTeamSpecificStatFieldEvents:true});\r\n                    \r\n                    this.setState({SelectAnEvent_ReviewGameStats_YourTeamPlayer:false});\r\n\r\n            }\r\n\r\n\r\n        }\r\n        else\r\n        {\r\n            return alert(\"Please select a player\");\r\n        }\r\n\r\n    }\r\n\r\n    //Opponents\r\n    GetSpecificOpponentsPlayerEventLocations = async() => {\r\n        \r\n        //Array to store event Locations\r\n        var OpponentsEventFieldLocations = this.state.OpponentsEventFieldLocations;   \r\n    \r\n        var OpponentsEventSelection = this.state.OpponentsEventSelection;\r\n    \r\n        var selectedOpponentsPlayer = this.state.selectedOpponentsPlayer;\r\n    \r\n   \r\n        var tempEventFieldLocations = this.state.tempEventFieldLocations;\r\n    \r\n            \r\n            if(selectedOpponentsPlayer != '')\r\n            {\r\n    \r\n                if(OpponentsEventSelection == '')\r\n                {\r\n                    return alert(\"Please select an event\");\r\n                }\r\n                else\r\n                {\r\n                    //get Event locations using SelectedTeamPlayer + YourTeamEventSelection\r\n                    const { state, setParams, navigate } = this.props.navigation;\r\n                    const params = state.params || {};\r\n                   \r\n                    //empty tempEventFieldLocations as this is only a temp array\r\n                    tempEventFieldLocations.splice(0,tempEventFieldLocations.length);\r\n            \r\n                    //filter array to get the specific player and event locations\r\n                    for (var i = 0; i < OpponentsEventFieldLocations.length; i++) \r\n                    {\r\n            \r\n                   \r\n                        //Bug here- we are not  hitting this if statement\r\n                        if(OpponentsEventFieldLocations[i].EventType == OpponentsEventSelection)\r\n                        {\r\n                         \r\n                            if(OpponentsEventFieldLocations[i].UserID == selectedOpponentsPlayer)\r\n                            {\r\n                    \r\n                                var data = {\r\n                                    x:OpponentsEventFieldLocations[i].x, \r\n                                    y:OpponentsEventFieldLocations[i].y,\r\n                                    id:OpponentsEventFieldLocations[i].UserID\r\n                                };\r\n                \r\n                \r\n                                //Push to new temp EventFieldLocations\r\n                                this.state.tempEventFieldLocations.push(data);\r\n                \r\n\r\n                            }\r\n\r\n                          \r\n                        }\r\n                    }\r\n            \r\n                        //Make Field Image appear\r\n                        this.setState({OpponentsSpecificStatFieldEvents:true});\r\n\r\n                        this.setState({SelectAnEvent_ReviewGameStats_Opponents_TeamPlayer: false});\r\n\r\n                    \r\n                }\r\n    \r\n    \r\n            }\r\n            else\r\n            {\r\n                return alert(\"Please select a player\");\r\n            }\r\n    \r\n        }\r\n    \r\n    \r\n\r\n\r\n\r\n    //Toggles frontend - View overall game stats\r\n    ReviewGameStats = async() => { \r\n\r\n        this.setState({ displayReviewSelection:false});\r\n\r\n        this.setState({ displayReviewGameStats: true});\r\n    }\r\n\r\n    //Toggles frontend - Event Selection will appear\r\n    TeamSpecificStat = async() => {\r\n    \r\n        this.setState({ SelectAnEvent_ReviewGameStats_YourTeam: true });\r\n\r\n        this.setState({ displayReviewSelection: false});\r\n\r\n        \r\n        this.setState({ displayReviewGameStats: false});\r\n\r\n\r\n\r\n    }\r\n\r\n    //Toggles frontend - Event Selection will appear\r\n    OpponentsSpecificStat = async() => {\r\n        \r\n        this.setState({ SelectAnEvent_ReviewGameStats_Opponents: true});\r\n\r\n        this.setState({ displayReviewGameStats: false});\r\n\r\n        this.setState({ displayReviewSelection: false});\r\n    }\r\n\r\n    ExecuteYourTeamEventAnaylsis = async() => {\r\n\r\n          //Users Event selection\r\n          var YourTeamEventSelection = this.state.YourTeamEventSelection;\r\n  \r\n          //Array to store event Locations\r\n          var EventFieldLocations = this.state.EventFieldLocations;\r\n  \r\n          var myUserId = firebase.auth().currentUser.uid;\r\n          var tempEventFieldLocations = this.state.tempEventFieldLocations;\r\n\r\n          const { state, setParams, navigate } = this.props.navigation;\r\n          const params = state.params || {};\r\n         \r\n          //empty tempEventFieldLocations as this is only a temp array\r\n          tempEventFieldLocations.splice(0,tempEventFieldLocations.length);\r\n  \r\n          //filter array to get the specific player and event locations\r\n          for (var i = 0; i < EventFieldLocations.length; i++) \r\n          {\r\n  \r\n              if(EventFieldLocations[i].EventType == YourTeamEventSelection)\r\n              {\r\n  \r\n                  var data = {\r\n                      x:EventFieldLocations[i].x, \r\n                      y:EventFieldLocations[i].y \r\n                  };\r\n  \r\n  \r\n                  //Push to new temp EventFieldLocations\r\n                  this.state.tempEventFieldLocations.push(data);\r\n  \r\n              }\r\n          }\r\n  \r\n\r\n          this.setState({SelectAnEvent_ReviewGameStats_YourTeam:false});\r\n\r\n          //Make Field Image appear\r\n          this.setState({YourTeamSpecificStatFieldEvents:true});\r\n   \r\n    }\r\n\r\n    ExecuteOpponentsPlayerEventAnaylsis = async() => {\r\n\r\n        //Users Event selection\r\n        var OpponentEventSelection = this.state.OpponentEventSelection;\r\n        \r\n        //Array to store event Locations\r\n        var OpponentsEventFieldLocations = this.state.OpponentsEventFieldLocations;\r\n\r\n        var myUserId = firebase.auth().currentUser.uid;\r\n        var tempEventFieldLocations = this.state.tempEventFieldLocations;\r\n\r\n        var SportType = this.state.SportType;\r\n\r\n\r\n        const { state, setParams, navigate } = this.props.navigation;\r\n        const params = state.params || {};\r\n\r\n        //empty tempEventFieldLocations as this is only a temp array\r\n        tempEventFieldLocations.splice(0,tempEventFieldLocations.length);\r\n\r\n        //filter array to get the specific player and event locations\r\n        for (var i = 0; i < OpponentsEventFieldLocations.length; i++) \r\n        {\r\n\r\n            if(OpponentsEventFieldLocations[i].EventType == OpponentEventSelection)\r\n            {\r\n\r\n                var data = {\r\n                    x:OpponentsEventFieldLocations[i].x, \r\n                    y:OpponentsEventFieldLocations[i].y \r\n                };\r\n\r\n\r\n                //Push to new temp EventFieldLocations\r\n                this.state.tempEventFieldLocations.push(data);\r\n\r\n\r\n             \r\n            }\r\n        }\r\n\r\n\r\n        this.setState({SelectAnEvent_ReviewGameStats_Opponents:false});\r\n\r\n       \r\n        //Make Field Image appear\r\n        this.setState({OpponentsSpecificStatFieldEvents:true});\r\n\r\n     \r\n    }\r\n\r\n    snapshotToArray = snapshot => {\r\n        var retArr = [];\r\n        snapshot.forEach(childSnapshot => {\r\n            var item = childSnapshot.val();\r\n            item.key = childSnapshot.key;\r\n            retArr.push(item);\r\n        });\r\n        return retArr;\r\n    }\r\n\r\n    //The users Team player selection will appear\r\n    YourTeamSelected = async() => {\r\n\r\n        this.setState({ displayReviewOpponentsPlayer:false });\r\n        this.setState({ displayReviewSelection:false});\r\n        this.setState({ displayReviewYourTeamPlayer:true });\r\n        this.setState({ displayTeamOption: false}); \r\n\r\n        \r\n    //Your Team - Player List\r\n\r\n        //Obtain SelectedStarting11 Array of players\r\n        const { state, setParams, navigate } = this.props.navigation;\r\n        const params = state.params || {};\r\n\r\n        var myUserId = firebase.auth().currentUser.uid;\r\n        var tempArr = [];\r\n\r\n        firebase.database().ref('/teams').child(myUserId).child('/games').child(params.GameRecordKey).child('YourTeam').child('players')\r\n            .on('value', snapshot => {\r\n\r\n                console.log(snapshot.val());\r\n              \r\n                tempArr = this.snapshotToArray(snapshot);\r\n\r\n                this.setState({\r\n                    PlayerData: tempArr\r\n                });\r\n\r\n        });\r\n\r\n\r\n    \r\n    }\r\n\r\n    //Opponents player selection will appear\r\n    OpponentsSelected = async() => {\r\n\r\n        this.setState({ displayReviewSelection:false});\r\n        this.setState({ displayReviewOpponentsPlayer:true });\r\n        this.setState({ displayTeamOption: false}); \r\n\r\n\r\n\r\n        //Your Team - Player List\r\n\r\n        //Obtain SelectedStarting11 Array of players\r\n        const { state, setParams, navigate } = this.props.navigation;\r\n        const params = state.params || {};\r\n\r\n        var myUserId = firebase.auth().currentUser.uid;\r\n        var tempArr = [];\r\n\r\n        firebase.database().ref('/teams').child(myUserId).child('/games').child(params.GameRecordKey).child('Opponents').child('players')\r\n            .on('value', snapshot => {\r\n\r\n                console.log(snapshot.val());\r\n              \r\n                tempArr = this.snapshotToArray(snapshot);\r\n\r\n\r\n                // console.log(this.snapshotToArray(snapshot));\r\n                this.setState({\r\n                    OpponentsPlayerData: tempArr\r\n                });\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n    //This will trigger a selection on the frontend , where the user selects to review their Team players\r\n    SelectPlayerSelection = async() => {\r\n\r\n        this.setState({displayReviewGameStats: false});\r\n        this.setState({displayReviewSelection:false});\r\n\r\n        this.setState({SelectAnEvent_ReviewGameStats_YourTeamPlayer:true});\r\n\r\n    }\r\n\r\n    \r\n    //This will trigger a selection on the frontend , where the user selects to review the Opponents players\r\n    SelectOpponentsPlayerSelection = async() => {\r\n\r\n        this.setState({displayReviewGameStats: false});\r\n        this.setState({displayReviewSelection:false});\r\n\r\n        this.setState({SelectAnEvent_ReviewGameStats_Opponents_TeamPlayer:true});\r\n\r\n    }\r\n\r\n   \r\n        render(){\r\n            \r\n            var ReviewGameStats;\r\n            var ReviewPlayerStats;\r\n            var ReviewSelection;\r\n            var TeamOption;\r\n            var PlayerStats;\r\n            \r\n            var FieldWithPlots;\r\n        \r\n            var SportType = this.state.SportType;\r\n           \r\n\r\n            var displayReviewSelection = this.state.displayReviewSelection;\r\n            var displayReviewGameStats = this.state.displayReviewGameStats;\r\n\r\n            //Event Selection - Overall Team/Opponent Team Events\r\n            var SelectAnEvent_ReviewGameStats_YourTeam  = this.state.SelectAnEvent_ReviewGameStats_YourTeam;\r\n            var SelectAnEvent_ReviewGameStats_Opponents = this.state.SelectAnEvent_ReviewGameStats_Opponents;\r\n\r\n            //Event Selection - Player Specific Event Selection  \r\n            var SelectAnEvent_ReviewGameStats_YourTeamPlayer = this.state.SelectAnEvent_ReviewGameStats_YourTeamPlayer;\r\n            var SelectAnEvent_ReviewGameStats_Opponents_TeamPlayer = this.state.SelectAnEvent_ReviewGameStats_Opponents_TeamPlayer;\r\n\r\n            //Field Location views - Overall Team/Opponent Team Events (GAA + Soccer)\r\n            var YourTeamSpecificStatFieldEvents = this.state.YourTeamSpecificStatFieldEvents;\r\n            var OpponentsSpecificStatFieldEvents = this.state.OpponentsSpecificStatFieldEvents;\r\n\r\n          \r\n\r\n\r\n                    if(displayReviewSelection == true)\r\n                    {\r\n\r\n                            ReviewSelection = (\r\n                                <ScrollView style={stylesViewGame.container}>\r\n            \r\n                                    <TouchableOpacity style={stylesViewGame.button} onPress = {this.ReviewGameStats}>\r\n                                        <Text style={stylesViewGame.Text}>Review Games Stats</Text>\r\n                                    </TouchableOpacity>\r\n                                    \r\n                                    <TouchableOpacity style={stylesViewGame.button} onPress = {this.SelectPlayerSelection}>\r\n                                        <Text style={stylesViewGame.Text}>Review a specific players stats from {this.state.TeamName}</Text>\r\n                                    </TouchableOpacity>\r\n\r\n                                    <TouchableOpacity style={stylesViewGame.button} onPress = {this.SelectOpponentsPlayerSelection}>\r\n                                        <Text style={stylesViewGame.Text}>Review a specific players stats from {this.state.OpponentsName}</Text>\r\n                                    </TouchableOpacity>\r\n\r\n                                    <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToMainMenu}>\r\n                                        <Text style={stylesViewGame.Text}>Back to Main Menu</Text>\r\n                                    </TouchableOpacity>\r\n                                \r\n                                </ScrollView>\r\n                                \r\n                                \r\n                            );\r\n        \r\n                    }\r\n\r\n\r\n\r\n                    if(displayReviewGameStats == true)\r\n                    {\r\n\r\n                        if(SportType == 'GAA')\r\n                        {\r\n\r\n                            ReviewGameStats= (\r\n\r\n                                <ScrollView style={stylesViewGame.container}>\r\n                                    <View style={stylesViewGame.headerContainer}>\r\n                                        <Text style={stylesViewGame.Text}>{this.state.TeamName}</Text>\r\n                                    </View>\r\n\r\n                                    <View style={stylesViewGame.StatRow}>\r\n                                        <Text style={stylesViewGame.Text}> Goals: {this.state.totalTeamGoals}</Text>\r\n                                        <Text style={stylesViewGame.Text}> Points: {this.state.totalTeamPoints}</Text>\r\n                                        <Text style={stylesViewGame.Text}> Shots: {this.state.totalTeamShots}</Text>\r\n                                        <Text style={stylesViewGame.Text}> Shots on target: {this.state.totalTeamShotsOnTarget}</Text>\r\n                                    </View>\r\n\r\n                                    <TouchableOpacity style={stylesViewGame.button} onPress = {this.TeamSpecificStat}>\r\n                                        <Text style={stylesViewGame.Text}>Review a specific stat from {this.state.TeamName} </Text>\r\n                                    </TouchableOpacity>\r\n                                    \r\n                                    <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToMainMenu}>\r\n                                        <Text style={stylesViewGame.Text}>Back to Main Menu</Text>\r\n                                    </TouchableOpacity>\r\n\r\n\r\n                                    <View style={stylesViewGame.headerContainer}>\r\n                                        <Text style={stylesViewGame.Text}> Opponents</Text>\r\n                                    </View>\r\n\r\n                                    <View style={stylesViewGame.StatRow}>\r\n                                        <Text style={stylesViewGame.Text}> Goals: {this.state.totalOpponentsTeamGoals}</Text>\r\n                                        <Text style={stylesViewGame.Text}> Points: {this.state.totalOpponentsTeamPoints}</Text>\r\n                                        <Text style={stylesViewGame.Text}> Shots: {this.state.totalOpponentsTeamShots}</Text>\r\n                                        <Text style={stylesViewGame.Text}> Shots on target: {this.state.totalOpponentsTeamShotsOnTarget}</Text>\r\n                                    </View>\r\n\r\n                                    <TouchableOpacity style={stylesViewGame.button} onPress = {this.OpponentsSpecificStat}>\r\n                                        <Text style={stylesViewGame.Text}>Review a specific stat from the Opponents records</Text>\r\n                                    </TouchableOpacity>\r\n\r\n                                    \r\n                                    <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToMainMenu}>\r\n                                        <Text style={stylesViewGame.Text}>Back to Main Menu</Text>\r\n                                    </TouchableOpacity>\r\n\r\n\r\n                                </ScrollView>\r\n                            );\r\n\r\n                        }\r\n                        else if(SportType == 'Soccer')\r\n                        {\r\n\r\n                            ReviewGameStats= (\r\n\r\n                                <ScrollView style={stylesViewGame.container}>\r\n                                    <View style={stylesViewGame.headerContainer}>\r\n                                        <Text style={stylesViewGame.Text}>{this.state.TeamName}</Text>\r\n                                    </View>\r\n\r\n                                    <View style={stylesViewGame.StatRow}>\r\n                                        <Text style={stylesViewGame.Text}> Goals: {this.state.totalTeamGoals}</Text>\r\n                                        <Text style={stylesViewGame.Text}> Shots: {this.state.totalTeamShots}</Text>\r\n                                        <Text style={stylesViewGame.Text}> Shots on target: {this.state.totalTeamShotsOnTarget}</Text>\r\n                                    </View>\r\n\r\n                                    <TouchableOpacity style={stylesViewGame.button} onPress = {this.TeamSpecificStat}>\r\n                                        <Text style={stylesViewGame.Text}>Review a specific stat from {this.state.TeamName} </Text>\r\n                                    </TouchableOpacity>\r\n\r\n                                    <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToMainMenu}>\r\n                                        <Text style={stylesViewGame.Text}>Back to Main Menu</Text>\r\n                                    </TouchableOpacity>\r\n\r\n\r\n                                    <View style={stylesViewGame.headerContainer}>\r\n                                        <Text style={stylesViewGame.Text}> Opponents</Text>\r\n                                    </View>\r\n\r\n                                    <View style={stylesViewGame.StatRow}>\r\n                                        <Text style={stylesViewGame.Text}> Goals: {this.state.totalOpponentsTeamGoals}</Text>\r\n                                        <Text style={stylesViewGame.Text}> Shots: {this.state.totalOpponentsTeamShots}</Text>\r\n                                        <Text style={stylesViewGame.Text}> Shots on target: {this.state.totalOpponentsTeamShotsOnTarget}</Text>\r\n                                    </View>\r\n\r\n                                    <TouchableOpacity style={stylesViewGame.button} onPress = {this.OpponentsSpecificStat}>\r\n                                        <Text style={stylesViewGame.Text}>Review a specific stat from the Opponents records</Text>\r\n                                    </TouchableOpacity>\r\n\r\n                                    <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToMainMenu}>\r\n                                        <Text style={stylesViewGame.Text}>Back to Main Menu</Text>\r\n                                    </TouchableOpacity>\r\n\r\n\r\n                                </ScrollView>\r\n                            );  \r\n                        }\r\n\r\n                    }\r\n\r\n\r\n                    if(SelectAnEvent_ReviewGameStats_YourTeam)\r\n                    {\r\n\r\n                        if(SportType == 'GAA')\r\n                        {\r\n\r\n                            ReviewPlayerStats = (\r\n                                \r\n                                <ScrollView style={stylesViewGame.container}>\r\n            \r\n                                        <Text style={stylesViewGame.Text}>Select a stat below</Text>\r\n            \r\n                                        <Picker\r\n                                            selectedValue={this.state.YourTeamEventSelection}\r\n                                            style={stylesViewGame.input}\r\n                                            onValueChange={(text) => this.setState({YourTeamEventSelection:text})}\r\n                                        >\r\n                                            \r\n                                            <Picker.Item label=\"Select a event\" value=\"\" />\r\n                                            <Picker.Item label=\"Goal\" value=\"Goal\" />\r\n                                            <Picker.Item label=\"Point\" value=\"Point\"/>\r\n                                            <Picker.Item label=\"Pass\" value=\"Pass\"/>\r\n                        \r\n                        \r\n                                        </Picker>\r\n            \r\n                                        <TouchableOpacity style={stylesViewGame.button} onPress = {this.ExecuteYourTeamEventAnaylsis}>\r\n                                            <Text style={stylesViewGame.Text}>Review this teams games stats</Text>\r\n                                        </TouchableOpacity>   \r\n\r\n                                        <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToMainMenu}>\r\n                                            <Text style={stylesViewGame.Text}>Back to Main Menu</Text>\r\n                                        </TouchableOpacity>\r\n\r\n            \r\n                                </ScrollView>\r\n                            );\r\n\r\n                        }\r\n                    \r\n                        else if(SportType == 'Soccer')\r\n                        {\r\n                            ReviewPlayerStats = (\r\n                                \r\n                                <ScrollView style={stylesViewGame.container}>\r\n            \r\n                                        <Text style={stylesViewGame.Text}>Select a stat below</Text>\r\n            \r\n                                        <Picker\r\n                                            selectedValue={this.state.YourTeamEventSelection}\r\n                                            style={stylesViewGame.input}\r\n                                            onValueChange={(text) => this.setState({YourTeamEventSelection:text})}\r\n                                        >\r\n                                            \r\n                                            <Picker.Item label=\"Select a event\" value=\"\" />\r\n                                            <Picker.Item label=\"Goal\" value=\"Goal\" />\r\n                                            <Picker.Item label=\"Pass\" value=\"Pass\"/>\r\n                        \r\n                        \r\n                                        </Picker>\r\n            \r\n                                        <TouchableOpacity style={stylesViewGame.button} onPress = {this.ExecuteYourTeamEventAnaylsis}>\r\n                                            <Text style={stylesViewGame.Text}>Review this teams games stats</Text>\r\n                                        </TouchableOpacity>   \r\n\r\n                                        <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToMainMenu}>\r\n                                            <Text style={stylesViewGame.Text}>Back to Main Menu</Text>\r\n                                        </TouchableOpacity>\r\n\r\n            \r\n                                </ScrollView>\r\n                            );\r\n                        }\r\n                    }\r\n\r\n                    if(SelectAnEvent_ReviewGameStats_Opponents)\r\n                    {\r\n\r\n                        if(SportType == 'GAA')\r\n                        {\r\n\r\n                            ReviewPlayerStats = (\r\n\r\n                                <ScrollView style={stylesViewGame.container}>\r\n                \r\n                                    <Text style={stylesViewGame.Text}>Select a stat below</Text>\r\n                \r\n                                        <Picker\r\n                                            selectedValue={this.state.OpponentsEventSelection}\r\n                                            style={stylesViewGame.input}\r\n                                            onValueChange={(text) => this.setState({OpponentsEventSelection:text})}\r\n                                        >\r\n                                                        \r\n                                            <Picker.Item label=\"Select a event\" value=\"\" />\r\n                                            <Picker.Item label=\"Goal\" value=\"Goal\" />\r\n                                            <Picker.Item label=\"Point\" value=\"Point\"/>\r\n                                            <Picker.Item label=\"Pass\" value=\"Pass\"/>\r\n                                    \r\n                                    \r\n                                            </Picker>\r\n                \r\n                                            <TouchableOpacity style={stylesViewGame.button} onPress = {this.ExecuteOpponentsPlayerEventAnaylsis}>\r\n                                                <Text style={stylesViewGame.Text}>Submit</Text>\r\n                                            </TouchableOpacity>   \r\n\r\n                                            <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToMainMenu}>\r\n                                                <Text style={stylesViewGame.Text}>Back to Main Menu</Text>\r\n                                            </TouchableOpacity>\r\n\r\n                \r\n                                </ScrollView>\r\n                            );\r\n                        }\r\n                        else if(SportType == 'Soccer')\r\n                        {\r\n\r\n                            ReviewPlayerStats = (\r\n\r\n                                <ScrollView style={stylesViewGame.container}>\r\n                \r\n                                    <Text style={stylesViewGame.Text}>Select a stat</Text>\r\n                \r\n                                        <Picker\r\n                                            selectedValue={this.state.OpponentsEventSelection}\r\n                                            style={stylesViewGame.input}\r\n                                            onValueChange={(text) => this.setState({OpponentsEventSelection:text})}\r\n                                        >\r\n                                                        \r\n                                            <Picker.Item label=\"Select a event\" value=\"\" />\r\n                                            <Picker.Item label=\"Goal\" value=\"Goal\" />\r\n                                            <Picker.Item label=\"Pass\" value=\"Pass\"/>\r\n                                    \r\n                                    \r\n                                            </Picker>\r\n                \r\n                                            <TouchableOpacity style={stylesViewGame.button} onPress = {this.ExecuteOpponentsPlayerEventAnaylsis}>\r\n                                                <Text style={stylesViewGame.Text}>Submit</Text>\r\n                                            </TouchableOpacity>   \r\n\r\n                                            <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToMainMenu}>\r\n                                                <Text style={stylesViewGame.Text}>Back to Main Menu</Text>\r\n                                            </TouchableOpacity>\r\n\r\n                \r\n                                </ScrollView>\r\n                            );\r\n                        }\r\n                    }\r\n\r\n\r\n                // YOUR_TEAM SPECIFIC PLAYER  \r\n                \r\n                 if(SelectAnEvent_ReviewGameStats_YourTeamPlayer == true)\r\n                 {\r\n                     if(SportType == 'GAA')\r\n                     {\r\n\r\n                        ReviewPlayerStats = (\r\n\r\n                            <ScrollView style={stylesViewGame.container}>\r\n\r\n                                <Text style={stylesViewGame.Text}>Select a player </Text>\r\n\r\n                                <Picker\r\n                                    selectedValue={this.state.selectedTeamPlayer}\r\n                                    style={stylesViewGame.input}\r\n                                    onValueChange={(text) => this.setState({selectedTeamPlayer:text})}\r\n                                >\r\n\r\n                                <Picker.Item label=\"Select a Player\" value=\"\" />\r\n                                    {this.state.PlayerData.map((item, index) => {\r\n                                        return (\r\n\r\n                                                <Picker.Item label={item.PlayerName} value={item.PlayerID}/>\r\n                                            \r\n                                                )\r\n\r\n                                    })} \r\n\r\n                                </Picker> \r\n\r\n                                <Text style={stylesViewGame.Text}>Select a stat (*Optional*)</Text>\r\n\r\n                                <Picker\r\n                                    selectedValue={this.state.YourTeamEventSelection}\r\n                                    style={stylesViewGame.input}\r\n                                    onValueChange={(text) => this.setState({YourTeamEventSelection:text})}\r\n                                    >\r\n                                                    \r\n                                        <Picker.Item label=\"Select a event\" value=\"\" />\r\n                                        <Picker.Item label=\"Goal\" value=\"Goal\" />\r\n                                        <Picker.Item label=\"Point\" value=\"Point\" />\r\n                                        <Picker.Item label=\"Pass\" value=\"Pass\"/>\r\n\r\n\r\n                                </Picker>  \r\n\r\n\r\n                                <TouchableOpacity style={stylesViewGame.button} onPress = {this.ReviewPlayerStats}>\r\n                                    <Text style={stylesViewGame.Text}>Review this players games stats</Text>\r\n                                </TouchableOpacity> \r\n\r\n                                \r\n                                <TouchableOpacity style={stylesViewGame.button} onPress = {this.GetSpecificPlayerEventLocations}>\r\n                                    <Text style={stylesViewGame.Text}>Review this players event locations</Text>\r\n                                </TouchableOpacity> \r\n\r\n                                <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToMainMenu}>\r\n                                        <Text style={stylesViewGame.Text}>Back to Main Menu</Text>\r\n                                </TouchableOpacity>\r\n\r\n\r\n\r\n\r\n                                \r\n                            </ScrollView>\r\n\r\n                        );\r\n\r\n\r\n                    }\r\n                    else if(SportType == 'Soccer')\r\n                    {\r\n                        ReviewPlayerStats = (\r\n\r\n                            <ScrollView style={stylesViewGame.container}>\r\n\r\n                                <Text style={stylesViewGame.Text}>Select a player</Text>\r\n\r\n                                <Picker\r\n                                    selectedValue={this.state.selectedTeamPlayer}\r\n                                    style={stylesViewGame.input}\r\n                                    onValueChange={(text) => this.setState({selectedTeamPlayer:text})}\r\n                                >\r\n\r\n                                <Picker.Item label=\"Select a Player\" value=\"\" />\r\n                                    {this.state.PlayerData.map((item, index) => {\r\n                                        return (\r\n\r\n                                                <Picker.Item label={item.PlayerName} value={item.PlayerID}/>\r\n                                            \r\n                                                )\r\n\r\n                                    })} \r\n\r\n                                </Picker> \r\n\r\n                                <Text style={stylesViewGame.Text}>Select a stat (*Optional*)</Text>\r\n\r\n                                <Picker\r\n                                    selectedValue={this.state.YourTeamEventSelection}\r\n                                    style={stylesViewGame.input}\r\n                                    onValueChange={(text) => this.setState({YourTeamEventSelection:text})}\r\n                                    >\r\n                                                    \r\n                                        <Picker.Item label=\"Select a event\" value=\"\" />\r\n                                        <Picker.Item label=\"Goal\" value=\"Goal\" /> \r\n                                        <Picker.Item label=\"Pass\" value=\"Pass\"/>\r\n\r\n\r\n                                </Picker>  \r\n\r\n                                <TouchableOpacity style={stylesViewGame.button} onPress = {this.ReviewPlayerStats}>\r\n                                    <Text style={stylesViewGame.Text}>Review this players games stats</Text>\r\n                                </TouchableOpacity> \r\n\r\n                                \r\n                                <TouchableOpacity style={stylesViewGame.button} onPress = {this.GetSpecificPlayerEventLocations}>\r\n                                    <Text style={stylesViewGame.Text}>Review this players event locations</Text>\r\n                                </TouchableOpacity> \r\n\r\n                                <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToMainMenu}>\r\n                                        <Text style={stylesViewGame.Text}>Back to Main Menu</Text>\r\n                                </TouchableOpacity>\r\n\r\n\r\n                                \r\n                            </ScrollView>\r\n\r\n                        );\r\n\r\n                      \r\n\r\n                    }\r\n\r\n                    \r\n                 }\r\n\r\n                 if(SelectAnEvent_ReviewGameStats_Opponents_TeamPlayer == true)\r\n                 {\r\n\r\n                        if(SportType == 'GAA')\r\n                        {\r\n\r\n                            ReviewPlayerStats = (\r\n                                \r\n                                <ScrollView style={stylesViewGame.container}>\r\n\r\n                                    <Text style={stylesViewGame.Text}>Select a player</Text>\r\n\r\n                                    <Picker\r\n                                        selectedValue={this.state.selectedOpponentsPlayer}\r\n                                        style={stylesViewGame.input}\r\n                                        onValueChange={(text) => this.setState({selectedOpponentsPlayer:text})}\r\n                                    >\r\n\r\n                                    <Picker.Item label=\"Select a Player\" value=\"\" />\r\n                                        {this.state.OpponentsPlayerData.map((item, index) => {\r\n                                            return (\r\n\r\n                                                    <Picker.Item label={item.PlayerName} value={item.PlayerID}/>\r\n                                                \r\n                                                    )\r\n\r\n                                        })} \r\n\r\n                                    </Picker> \r\n\r\n                                    <Text style={stylesViewGame.Text}>Select a stat (*Optional*)</Text>\r\n\r\n                                    <Picker\r\n                                        selectedValue={this.state.OpponentsEventSelection}\r\n                                        style={stylesViewGame.input}\r\n                                        onValueChange={(text) => this.setState({OpponentsEventSelection:text})}\r\n                                        >\r\n                                                        \r\n                                            <Picker.Item label=\"Select a event\" value=\"\" />\r\n                                            <Picker.Item label=\"Goal\" value=\"Goal\" /> \r\n                                            <Picker.Item label=\"Point\" value=\"Point\" /> \r\n                                            <Picker.Item label=\"Pass\" value=\"Pass\"/>\r\n\r\n\r\n                                    </Picker>  \r\n\r\n                                    <TouchableOpacity style={stylesViewGame.button} onPress = {this.ReviewPlayerStats}>\r\n                                        <Text style={stylesViewGame.Text}>Review this players games stats</Text>\r\n                                    </TouchableOpacity> \r\n\r\n                                    \r\n                                    <TouchableOpacity style={stylesViewGame.button} onPress = {this.GetSpecificOpponentsPlayerEventLocations}>\r\n                                        <Text style={stylesViewGame.Text}>Review this players event locations</Text>\r\n                                    </TouchableOpacity> \r\n\r\n                                    <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToMainMenu}>\r\n                                            <Text style={stylesViewGame.Text}>Back to Main Menu</Text>\r\n                                    </TouchableOpacity>\r\n\r\n\r\n                                    \r\n                                </ScrollView>\r\n\r\n                            );\r\n\r\n                       \r\n\r\n                        }\r\n   \r\n                    \r\n                    \r\n                    if(SportType =='Soccer')\r\n                    {\r\n\r\n                        ReviewPlayerStats = (\r\n                            \r\n                            <ScrollView style={stylesViewGame.container}>\r\n\r\n                                <Text style={stylesViewGame.Text}>Select a player</Text>\r\n\r\n                                <Picker\r\n                                    selectedValue={this.state.selectedOpponentsPlayer}\r\n                                    style={stylesViewGame.input}\r\n                                    onValueChange={(text) => this.setState({selectedOpponentsPlayer:text})}\r\n                                >\r\n\r\n                                <Picker.Item label=\"Select a Player\" value=\"\" />\r\n                                    {this.state.OpponentsPlayerData.map((item, index) => {\r\n                                        return (\r\n\r\n                                                <Picker.Item label={item.PlayerName} value={item.PlayerID}/>\r\n                                            \r\n                                                )\r\n\r\n                                    })} \r\n\r\n                                </Picker> \r\n\r\n                                <Text style={stylesViewGame.Text}>Select a stat (*Optional*)</Text>\r\n\r\n                                <Picker\r\n                                    selectedValue={this.state.OpponentsEventSelection}\r\n                                    style={stylesViewGame.input}\r\n                                    onValueChange={(text) => this.setState({OpponentsEventSelection:text})}\r\n                                    >\r\n                                                    \r\n                                        <Picker.Item label=\"Select a event\" value=\"\" />\r\n                                        <Picker.Item label=\"Goal\" value=\"Goal\" /> \r\n                                        <Picker.Item label=\"Pass\" value=\"Pass\"/>\r\n\r\n\r\n                                </Picker>  \r\n\r\n                                <TouchableOpacity style={stylesViewGame.button} onPress = {this.ReviewPlayerStats}>\r\n                                    <Text style={stylesViewGame.Text}>Review this players games stats</Text>\r\n                                </TouchableOpacity> \r\n\r\n                                \r\n                                <TouchableOpacity style={stylesViewGame.button} onPress = {this.GetSpecificOpponentsPlayerEventLocations}>\r\n                                    <Text style={stylesViewGame.Text}>Review this players event locations</Text>\r\n                                </TouchableOpacity> \r\n\r\n                                <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToMainMenu}>\r\n                                        <Text style={stylesViewGame.Text}>Back to Main Menu</Text>\r\n                                </TouchableOpacity>\r\n\r\n\r\n\r\n                                \r\n                            </ScrollView>\r\n\r\n                        );\r\n\r\n                      \r\n   \r\n                    }\r\n\r\n                }\r\n                 \r\n//HERe\r\n\r\n\r\n                if(YourTeamSpecificStatFieldEvents == true)\r\n                {\r\n\r\n\r\n                   //Condition to check if the Device is smaller than the image so for mobile view we check the StatsStoredUsingScreenWidth  \r\n                        //if screenwidth < StatsStoredUsingScreenWidth || screenHeight < StatsStoredUsingScreenHeight\r\n                            //Then alert the user that this maybe be inaccurate . please try a larger device screen size e.g web version\r\n                                //ScrollView possibly for mobile\r\n\r\n                    if(SportType == 'GAA')\r\n                    {\r\n\r\n                        if(screenWidth != this.state.StatsStoredUsingScreenWidth && screenHeight != this.state.StatsStoredUsingScreenHeight)\r\n                        {\r\n                            \r\n                                if(screenWidth < 600 || screenHeight < 376)\r\n                                {\r\n                                    alert('Warning - This device is too small to display the full image. Please swipe left to view the field location or use a larger device screen size.');\r\n\r\n                                    FieldWithPlots = (\r\n  \r\n                                        <ScrollView>\r\n                                            \r\n                                            <ScrollView horizontal={true} style={stylesViewGame.imagePlotContainer}>\r\n                                                \r\n                                                <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToMainMenu}>\r\n                                                    <Text style={stylesViewGame.Text}>Back to Main Menu</Text>\r\n                                                </TouchableOpacity>\r\n\r\n                                                <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToViewGameMenu}>\r\n                                                    <Text style={stylesViewGame.Text}>Back to View Game Menu</Text>\r\n                                                </TouchableOpacity>\r\n                         \r\n                                                <ScrollView horizontal={true} style={stylesViewGame.imagePlotContainer}>\r\n                                                    \r\n                                                    <ScrollView>\r\n                                                \r\n                                                        <Image style ={stylesViewGame.imagePxGAA}                              \r\n                                                        source={require('./GAApitch1.png')}/>\r\n                                        \r\n                                                                    {this.state.tempEventFieldLocations.map((data) => {\r\n                                                                        return (\r\n                                                                        <View \r\n                                                                            style={{\r\n                                                                            position: 'absolute',\r\n                                                                            left: data.x,\r\n                                                                            top: data.y,\r\n                                                                            backgroundColor:'#242424',\r\n                                                                            width: 10,\r\n                                                                            height: 10,\r\n                                                                            borderRadius: 50\r\n                                                                            }}>\r\n                                                                        </View> \r\n                                                                \r\n                                                                    )\r\n                                                                })} \r\n                                \r\n\r\n                                                        </ScrollView>\r\n\r\n                                                    </ScrollView>\r\n\r\n                                                </ScrollView>\r\n\r\n                                        </ScrollView>\r\n                \r\n                                    );\r\n\r\n\r\n                                } \r\n                                else \r\n                                {\r\n                          \r\n                                    FieldWithPlots = (\r\n\r\n                                            <ScrollView>\r\n                                                \r\n                                                <ScrollView horizontal={true} style={stylesViewGame.imagePlotContainer}>\r\n                                                \r\n                                                        <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToMainMenu}>\r\n                                                            <Text style={stylesViewGame.Text}>Back to Main Menu</Text>\r\n                                                        </TouchableOpacity>\r\n\r\n                                                        <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToViewGameMenu}>\r\n                                                            <Text style={stylesViewGame.Text}>Back to View Game Menu</Text>\r\n                                                        </TouchableOpacity>\r\n\r\n                                                        <ScrollView horizontal={true} style={stylesViewGame.imagePlotContainer}>\r\n\r\n                                                            <ScrollView>\r\n                                                                        \r\n                                                                        <Image style ={stylesViewGame.imagePxGAA}                        \r\n                                                                        source={require('./GAApitch1.png')}/>\r\n                                                                        {this.state.tempEventFieldLocations.map((data) => {\r\n                                                                            return (\r\n                                                                            <View \r\n                                                                                style={{\r\n                                                                                position: 'absolute',\r\n                                                                                left: data.x,\r\n                                                                                top: data.y,\r\n                                                                                backgroundColor:'#242424',\r\n                                                                                width: 10,\r\n                                                                                height: 10,\r\n                                                                                borderRadius: 50\r\n                                                                                }}>\r\n                                                                            </View> \r\n                                                                    \r\n                                                                        )\r\n                                                                    })} \r\n                                        \r\n                                                            </ScrollView>\r\n\r\n                                                        </ScrollView>\r\n\r\n                                                    </ScrollView>\r\n\r\n                                            </ScrollView>\r\n                                \r\n                                    );\r\n\r\n                                }\r\n                       \r\n\r\n            \r\n\r\n\r\n                        }   \r\n\r\n                        else\r\n                        {\r\n\r\n\r\n\r\n                            if(screenWidth < 600 || screenHeight < 376)\r\n                            {\r\n    \r\n                                alert('Warning - This device is too small to display the full image. Please swipe left to view the field location or use a larger device screen size.');\r\n                                \r\n                                FieldWithPlots = (\r\n                                    \r\n                                    <ScrollView>\r\n                                        \r\n                                        <ScrollView horizontal={true} style={stylesViewGame.imagePlotContainer}>\r\n                                            \r\n                                            <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToMainMenu}>\r\n                                                <Text style={stylesViewGame.Text}>Back to Main Menu</Text>\r\n                                            </TouchableOpacity>\r\n\r\n                                            <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToViewGameMenu}>\r\n                                                <Text style={stylesViewGame.Text}>Back to View Game Menu</Text>\r\n                                            </TouchableOpacity>\r\n\r\n                    \r\n                                            <ScrollView horizontal={true} style={stylesViewGame.imagePlotContainer}>\r\n\r\n                                                <ScrollView>\r\n                                                        \r\n                                                        \r\n                                                    <Image style ={stylesViewGame.imagePxGAA}                              \r\n                                                        source={require('./GAApitch1.png')}/>\r\n                                                        {this.state.tempEventFieldLocations.map((data) => {\r\n                                                            return (\r\n                                                            <View \r\n                                                                style={{\r\n                                                                position: 'absolute',\r\n                                                                left: data.x,\r\n                                                                top: data.y,\r\n                                                                backgroundColor:'#242424',\r\n                                                                width: 10,\r\n                                                                height: 10,\r\n                                                                borderRadius: 50\r\n                                                                }}>\r\n                                                            </View> \r\n                                                    \r\n                                                        )\r\n                                                    })} \r\n                                                </ScrollView>\r\n\r\n                                            \r\n                                            </ScrollView>\r\n                                        </ScrollView>\r\n                \r\n                                    </ScrollView>\r\n                \r\n                                );\r\n                            }\r\n\r\n                            FieldWithPlots = (\r\n\r\n                                <ScrollView>\r\n                                \r\n                                    <ScrollView horizontal={true} style={stylesViewGame.imagePlotContainer}>\r\n                                        \r\n                                        <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToMainMenu}>\r\n                                            <Text style={stylesViewGame.Text}>Back to Main Menu</Text>\r\n                                        </TouchableOpacity>\r\n\r\n                                        <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToViewGameMenu}>\r\n                                            <Text style={stylesViewGame.Text}>Back to View Game Menu</Text>\r\n                                        </TouchableOpacity>\r\n\r\n                                                <ScrollView horizontal={true} style={stylesViewGame.imagePlotContainer}>\r\n\r\n                                                    <ScrollView>\r\n                                                            \r\n                                                        <Image style ={stylesViewGame.imagePxGAA}                              \r\n                                                            source={require('./GAApitch1.png')}/>\r\n                                                            {this.state.tempEventFieldLocations.map((data) => {\r\n                                                                return (\r\n                                                                <View \r\n                                                                    style={{\r\n                                                                    position: 'absolute',\r\n                                                                    left: data.x,\r\n                                                                    top: data.y,\r\n                                                                    backgroundColor:'#242424',\r\n                                                                    width: 10,\r\n                                                                    height: 10,\r\n                                                                    borderRadius: 50\r\n                                                                    }}>\r\n                                                                </View> \r\n                                                        \r\n                                                            )\r\n                                                        })} \r\n                                                    </ScrollView>\r\n\r\n                                                </ScrollView>\r\n                                    </ScrollView>\r\n\r\n                                </ScrollView>\r\n\r\n                            );\r\n\r\n                        }   \r\n\r\n                    }\r\n                    else if(SportType == 'Soccer')\r\n                    {\r\n\r\n                            if(screenWidth != this.state.StatsStoredUsingScreenWidth && screenHeight != this.state.StatsStoredUsingScreenHeight)\r\n                            {\r\n\r\n                                if(screenWidth < 600 || screenHeight < 376)\r\n                                {\r\n                                    alert('Warning - This device is too small to display the full image. Please swipe left to view the field location or use a larger device screen size.');\r\n\r\n                            \r\n                                    FieldWithPlots = (\r\n\r\n                                        <ScrollView>\r\n                                            \r\n                                            <ScrollView horizontal={true} style={stylesViewGame.imagePlotContainer}>\r\n                                                \r\n                                                <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToMainMenu}>\r\n                                                    <Text style={stylesViewGame.Text}>Back to Main Menu</Text>\r\n                                                </TouchableOpacity>\r\n\r\n                                                <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToViewGameMenu}>\r\n                                                    <Text style={stylesViewGame.Text}>Back to View Game Menu</Text>\r\n                                                </TouchableOpacity>\r\n\r\n                                                        <ScrollView horizontal={true} style={stylesViewGame.imagePlotContainer}>\r\n                                                                \r\n                                                                <ScrollView>\r\n\r\n                                                                    <Image style ={stylesViewGame.imageSoccerMobile} \r\n                                                                        source={require('./SoccerField.png')}/> \r\n                                                                        {this.state.tempEventFieldLocations.map((data) => {\r\n                                                                            return (\r\n                                                                            <View \r\n                                                                                style={{\r\n                                                                            \r\n                                                                                position: 'absolute',\r\n                                                                                left: data.x,\r\n                                                                                top: data.y,\r\n                                                                                backgroundColor:'#242424',\r\n                                                                                width: 10,\r\n                                                                                height: 10,\r\n                                                                                borderRadius: 50\r\n                                                                                }}>\r\n                                                                            </View> \r\n                                                                \r\n                                                                            )\r\n                                                                            })}        \r\n                                                                </ScrollView>\r\n\r\n                                                        </ScrollView>\r\n\r\n                                                    </ScrollView>\r\n                                                \r\n                                                </ScrollView>\r\n                                    );\r\n\r\n                                }\r\n                                else\r\n                                {\r\n\r\n                                    FieldWithPlots = (\r\n          \r\n                                        <ScrollView>\r\n                                        \r\n                                                <ScrollView horizontal={true} style={stylesViewGame.imagePlotContainer}>\r\n                                                    \r\n                                                    <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToMainMenu}>\r\n                                                        <Text style={stylesViewGame.Text}>Back to Main Menu</Text>\r\n                                                    </TouchableOpacity>\r\n\r\n                                                    <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToViewGameMenu}>\r\n                                                                    <Text style={stylesViewGame.Text}>Back to View Game Menu</Text>\r\n                                                    </TouchableOpacity>\r\n\r\n                                    \r\n                                                        <ScrollView horizontal={true} style={stylesViewGame.imagePlotContainer}>\r\n                                                \r\n                                                            <ScrollView>\r\n                                                    \r\n                                                                <Image style ={stylesViewGame.imagePxSoccer}                              \r\n                                                                    source={require('./SoccerField.png')}/>\r\n                                                                    {this.state.tempEventFieldLocations.map((data) => {\r\n                                                                        return (\r\n                                                                        <View \r\n                                                                            style={{\r\n                                                                            position: 'absolute',\r\n                                                                            left: data.x,\r\n                                                                            top: data.y,\r\n                                                                            backgroundColor:'#242424',\r\n                                                                            width: 10,\r\n                                                                            height: 10,\r\n                                                                            borderRadius: 50\r\n                                                                            }}>\r\n                                                                        </View> \r\n                                                                \r\n                                                                    )\r\n                                                                })} \r\n                            \r\n                                                            </ScrollView>\r\n\r\n                                                        </ScrollView>\r\n                                                    \r\n                                                </ScrollView>\r\n                                                \r\n                                        </ScrollView>\r\n                    \r\n                                    );\r\n                                }\r\n\r\n                        \r\n\r\n                            }\r\n                            else\r\n                            {\r\n\r\n                                if(screenWidth < 600 || screenHeight < 376)\r\n                                {\r\n                                    alert('Warning - This device is too small to display the full image. Please swipe left to view the field location or use a larger device screen size.');\r\n                            \r\n                                    FieldWithPlots = (\r\n                                       \r\n                                        <ScrollView>\r\n                                        \r\n                                            <ScrollView horizontal={true} style={stylesViewGame.imagePlotContainer}>\r\n                                                <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToMainMenu}>\r\n                                                    <Text style={stylesViewGame.Text}>Back to Main Menu</Text>\r\n                                                </TouchableOpacity>\r\n            \r\n                                                <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToViewGameMenu}>\r\n                                                    <Text style={stylesViewGame.Text}>Back to View Game Menu</Text>\r\n                                                </TouchableOpacity>\r\n        \r\n                                      \r\n                                       \r\n                                                <ScrollView horizontal={true} style={stylesViewGame.imagePlotContainer}>\r\n                                        \r\n                                   \r\n                                                    <ScrollView>\r\n\r\n                                                        <Image style ={stylesViewGame.imageSoccerMobile} \r\n                                                                        source={require('./SoccerField.png')}/> \r\n                                                                        {this.state.tempEventFieldLocations.map((data) => {\r\n                                                                            return (\r\n                                                                            <View \r\n                                                                                style={{\r\n                                                                            \r\n                                                                                position: 'absolute',\r\n                                                                                left: data.x,\r\n                                                                                top: data.y,\r\n                                                                                backgroundColor:'#242424',\r\n                                                                                width: 10,\r\n                                                                                height: 10,\r\n                                                                                borderRadius: 50\r\n                                                                                }}>\r\n                                                                            </View> \r\n                                                                \r\n                                                                            )\r\n                                                                            })}        \r\n                                                    \r\n\r\n                                                    </ScrollView>\r\n\r\n                                                </ScrollView>\r\n\r\n                                            </ScrollView>\r\n\r\n                                        </ScrollView>\r\n                                    );\r\n\r\n                                }\r\n\r\n                            \r\n                                FieldWithPlots = (\r\n\r\n                                    <ScrollView>\r\n\r\n                                        <ScrollView horizontal={true} style={stylesViewGame.imagePlotContainer}>\r\n                                            \r\n                                            <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToMainMenu}>\r\n                                                <Text style={stylesViewGame.Text}>Back to Main Menu</Text>\r\n                                            </TouchableOpacity>\r\n        \r\n                                            <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToViewGameMenu}>\r\n                                                <Text style={stylesViewGame.Text}>Back to View Game Menu</Text>\r\n                                            </TouchableOpacity>\r\n        \r\n                                                <ScrollView horizontal={true} style={stylesViewGame.imagePlotContainer}>\r\n\r\n                                                        <ScrollView>\r\n                                                            \r\n                                                            <Image style ={stylesViewGame.imagePxSoccer}                              \r\n                                                                source={require('./SoccerField.png')}/>\r\n                                                                {this.state.tempEventFieldLocations.map((data) => {\r\n                                                                    return (\r\n                                                                    <View \r\n                                                                        style={{\r\n                                                                        position: 'absolute',\r\n                                                                        left: data.x,\r\n                                                                        top: data.y,\r\n                                                                        backgroundColor:'#242424',\r\n                                                                        width: 10,\r\n                                                                        height: 10,\r\n                                                                        borderRadius: 50\r\n                                                                        }}>\r\n                                                                    </View> \r\n                                                            \r\n                                                                )\r\n                                                            })} \r\n                            \r\n                                                        </ScrollView>\r\n                                                        \r\n                                                </ScrollView>\r\n\r\n                                            </ScrollView>\r\n\r\n                                        </ScrollView>\r\n                                \r\n                                \r\n                \r\n                                );\r\n                            }\r\n\r\n\r\n\r\n                    }\r\n                  \r\n                }\r\n\r\n                if(OpponentsSpecificStatFieldEvents == true)\r\n                {\r\n\r\n\r\n                   // OpponentsEventFieldLocations\r\n\r\n                   //Condition to check if the Device is smaller than the image so for mobile view we check the StatsStoredUsingScreenWidth  \r\n                        //if screenwidth < StatsStoredUsingScreenWidth || screenHeight < StatsStoredUsingScreenHeight\r\n                            //Then alert the user that this maybe be inaccurate . please try a larger device screen size e.g web version\r\n                                //ScrollView possibly for mobile\r\n                    \r\n              \r\n                                if(SportType == 'GAA')\r\n                                {\r\n            \r\n                                    if(screenWidth != this.state.StatsStoredUsingScreenWidth && screenHeight != this.state.StatsStoredUsingScreenHeight)\r\n                                    {\r\n                                        \r\n                                            if(screenWidth < 600 || screenHeight < 376)\r\n                                            {\r\n                                                alert('Warning - This device is too small to display the full image. Please swipe left to view the field location or use a larger device screen size.');\r\n            \r\n                                                FieldWithPlots = (\r\n                                                   \r\n                                                    <ScrollView>\r\n                                                    \r\n                                                    <ScrollView horizontal={true} style={stylesViewGame.imagePlotContainer}>\r\n                                                       \r\n                                                        <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToMainMenu}>\r\n                                                            <Text style={stylesViewGame.Text}>Back to Main Menu</Text>\r\n                                                        </TouchableOpacity>\r\n                    \r\n                                                        <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToViewGameMenu}>\r\n                                                            <Text style={stylesViewGame.Text}>Back to View Game Menu</Text>\r\n                                                        </TouchableOpacity>\r\n                    \r\n                                                   \r\n                                                        <ScrollView horizontal={true} style={stylesViewGame.imagePlotContainer}>\r\n                \r\n                                                            <ScrollView>\r\n                                                    \r\n                \r\n                                                            <Image style ={stylesViewGame.imagePxGAA}                              \r\n                                                            source={require('./GAApitch1.png')}/>\r\n                                            \r\n                                                                        {this.state.tempEventFieldLocations.map((data) => {\r\n                                                                            return (\r\n                                                                            <View \r\n                                                                                style={{\r\n                                                                                position: 'absolute',\r\n                                                                                left: data.x,\r\n                                                                                top: data.y,\r\n                                                                                backgroundColor:'#242424',\r\n                                                                                width: 10,\r\n                                                                                height: 10,\r\n                                                                                borderRadius: 50\r\n                                                                                }}>\r\n                                                                            </View> \r\n                                                                    \r\n                                                                            )\r\n                                                                        })} \r\n                                    \r\n                \r\n                                                            </ScrollView>\r\n                \r\n                                                      </ScrollView>\r\n\r\n                                                    </ScrollView>\r\n            \r\n                                             \r\n            \r\n                                                </ScrollView>\r\n                            \r\n                        \r\n                        \r\n                                                );\r\n            \r\n            \r\n            \r\n                                            } \r\n                                            else \r\n                                            {\r\n                                      \r\n                                                FieldWithPlots = (\r\n            \r\n                                                    <ScrollView>\r\n                                                    \r\n                                                    <ScrollView horizontal={true} style={stylesViewGame.imagePlotContainer}>\r\n                                                        <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToMainMenu}>\r\n                                                            <Text style={stylesViewGame.Text}>Back to Main Menu</Text>\r\n                                                        </TouchableOpacity>\r\n                    \r\n                                                        <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToViewGameMenu}>\r\n                                                            <Text style={stylesViewGame.Text}>Back to View Game Menu</Text>\r\n                                                        </TouchableOpacity>\r\n                    \r\n                                                    \r\n                                                    <ScrollView horizontal={true} style={stylesViewGame.imagePlotContainer}>\r\n            \r\n                                                            <ScrollView>\r\n                                                                        \r\n                                                                        <Image style ={stylesViewGame.imagePxGAA}                        \r\n                                                                        source={require('./GAApitch1.png')}/>\r\n                                                                        {this.state.tempEventFieldLocations.map((data) => {\r\n                                                                            return (\r\n                                                                            <View \r\n                                                                                style={{\r\n                                                                                position: 'absolute',\r\n                                                                                left: data.x,\r\n                                                                                top: data.y,\r\n                                                                                backgroundColor:'#242424',\r\n                                                                                width: 10,\r\n                                                                                height: 10,\r\n                                                                                borderRadius: 50\r\n                                                                                }}>\r\n                                                                            </View> \r\n                                                                    \r\n                                                                        )\r\n                                                                    })} \r\n                                        \r\n                                                            </ScrollView>\r\n                                                    </ScrollView>\r\n\r\n                                            \r\n                                                    </ScrollView>\r\n                                                </ScrollView>\r\n\r\n\r\n                                            \r\n                                                );\r\n            \r\n                                            }\r\n                                   \r\n            \r\n                        \r\n            \r\n            \r\n                                    }   \r\n            \r\n                                    else\r\n                                    {\r\n            \r\n            \r\n            \r\n                                        if(screenWidth < 600 || screenHeight < 376)\r\n                                        {\r\n                \r\n                                            alert('Warning - This device is too small to display the full image. Please swipe left to view the field location or use a larger device screen size.');\r\n                                            FieldWithPlots = (\r\n            \r\n                                                <ScrollView>\r\n                                                <ScrollView horizontal={true} style={stylesViewGame.imagePlotContainer}>\r\n                                                    <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToMainMenu}>\r\n                                                        <Text style={stylesViewGame.Text}>Back to Main Menu</Text>\r\n                                                    </TouchableOpacity>\r\n                \r\n                                                    <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToViewGameMenu}>\r\n                                                        <Text style={stylesViewGame.Text}>Back to View Game Menu</Text>\r\n                                                    </TouchableOpacity>\r\n                \r\n                                           \r\n                                                <ScrollView horizontal={true} style={stylesViewGame.imagePlotContainer}>\r\n            \r\n                                                    <ScrollView>\r\n                                                            \r\n                                                            \r\n                                                        <Image style ={stylesViewGame.imagePxGAA}                              \r\n                                                            source={require('./GAApitch1.png')}/>\r\n                                                            {this.state.tempEventFieldLocations.map((data) => {\r\n                                                                return (\r\n                                                                <View \r\n                                                                    style={{\r\n                                                                    position: 'absolute',\r\n                                                                    left: data.x,\r\n                                                                    top: data.y,\r\n                                                                    backgroundColor:'#242424',\r\n                                                                    width: 10,\r\n                                                                    height: 10,\r\n                                                                    borderRadius: 50\r\n                                                                    }}>\r\n                                                                </View> \r\n                                                        \r\n                                                            )\r\n                                                        })} \r\n                                                    </ScrollView>\r\n                                                </ScrollView>\r\n                            \r\n\r\n                                                </ScrollView>\r\n                                                </ScrollView>\r\n\r\n\r\n\r\n                                            );\r\n                                        }\r\n            \r\n                                        FieldWithPlots = (\r\n            \r\n                                            <ScrollView>\r\n                                            <ScrollView horizontal={true} style={stylesViewGame.imagePlotContainer}>\r\n                                                <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToMainMenu}>\r\n                                                    <Text style={stylesViewGame.Text}>Back to Main Menu</Text>\r\n                                                </TouchableOpacity>\r\n            \r\n                                                <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToViewGameMenu}>\r\n                                                    <Text style={stylesViewGame.Text}>Back to View Game Menu</Text>\r\n                                                </TouchableOpacity>\r\n            \r\n                                             \r\n                                    \r\n                                            <ScrollView horizontal={true} style={stylesViewGame.imagePlotContainer}>\r\n            \r\n                                                <ScrollView>\r\n                                                        \r\n                                                        \r\n                                                    <Image style ={stylesViewGame.imagePxGAA}                              \r\n                                                        source={require('./GAApitch1.png')}/>\r\n                                                        {this.state.tempEventFieldLocations.map((data) => {\r\n                                                            return (\r\n                                                            <View \r\n                                                                style={{\r\n                                                                position: 'absolute',\r\n                                                                left: data.x,\r\n                                                                top: data.y,\r\n                                                                backgroundColor:'#242424',\r\n                                                                width: 10,\r\n                                                                height: 10,\r\n                                                                borderRadius: 50\r\n                                                                }}>\r\n                                                            </View> \r\n                                                    \r\n                                                        )\r\n                                                    })} \r\n                                                </ScrollView>\r\n                                            </ScrollView>\r\n\r\n                                            </ScrollView>\r\n                                                    </ScrollView>\r\n                                            \r\n            \r\n                                        );\r\n            \r\n                                    }   \r\n            \r\n                                }\r\n                                else if(SportType == 'Soccer')\r\n                                {\r\n            \r\n                                        if(screenWidth != this.state.StatsStoredUsingScreenWidth && screenHeight != this.state.StatsStoredUsingScreenHeight)\r\n                                        {\r\n            \r\n                                            if(screenWidth < 600 || screenHeight < 376)\r\n                                            {\r\n                                                alert('Warning - This device is too small to display the full image. Please swipe left to view the field location or use a larger device screen size.');\r\n            \r\n                                        \r\n                                                FieldWithPlots = (\r\n                                                    \r\n                                                    <ScrollView>\r\n                                                <ScrollView horizontal={true} style={stylesViewGame.imagePlotContainer}>\r\n                                                    \r\n                                                    <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToMainMenu}>\r\n                                                        <Text style={stylesViewGame.Text}>Back to Main Menu</Text>\r\n                                                    </TouchableOpacity>\r\n                \r\n                                                    <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToViewGameMenu}>\r\n                                                        <Text style={stylesViewGame.Text}>Back to View Game Menu</Text>\r\n                                                    </TouchableOpacity>\r\n                \r\n                                                    \r\n                                                    <ScrollView horizontal={true} style={stylesViewGame.imagePlotContainer}>\r\n                                                            <ScrollView>\r\n                                                            \r\n                                                          \r\n             \r\n                                                                <Image style ={stylesViewGame.imageSoccerMobile} \r\n                                                                    source={require('./SoccerField.png')}/> \r\n                                                                    {this.state.tempEventFieldLocations.map((data) => {\r\n                                                                        return (\r\n                                                                        <View \r\n                                                                            style={{\r\n                                                                        \r\n                                                                            position: 'absolute',\r\n                                                                            left: data.x,\r\n                                                                            top: data.y,\r\n                                                                            backgroundColor:'#242424',\r\n                                                                            width: 10,\r\n                                                                            height: 10,\r\n                                                                            borderRadius: 50\r\n                                                                            }}>\r\n                                                                        </View> \r\n                                                            \r\n                                                                        )\r\n                                                                        })}        \r\n                                                            </ScrollView>\r\n            \r\n                                                    </ScrollView>\r\n\r\n                                                    </ScrollView>\r\n                                                    </ScrollView>\r\n                                            \r\n                                                );\r\n            \r\n                                            }\r\n                                            else\r\n                                            {\r\n            \r\n            \r\n            \r\n                                                FieldWithPlots = (\r\n            \r\n\r\n                                                    <ScrollView>\r\n                                                <ScrollView horizontal={true} style={stylesViewGame.imagePlotContainer}>\r\n                                                    <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToMainMenu}>\r\n                                                        <Text style={stylesViewGame.Text}>Back to Main Menu</Text>\r\n                                                    </TouchableOpacity>\r\n                \r\n                                                    <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToViewGameMenu}>\r\n                                                        <Text style={stylesViewGame.Text}>Back to View Game Menu</Text>\r\n                                                    </TouchableOpacity>\r\n                \r\n                                              \r\n\r\n                                                    <ScrollView horizontal={true} style={stylesViewGame.imagePlotContainer}>\r\n                                                        <ScrollView>\r\n                                                    \r\n                                                            \r\n                                                        <Image style ={stylesViewGame.imagePxSoccer}                              \r\n                                                            source={require('./SoccerField.png')}/>\r\n                                                            {this.state.tempEventFieldLocations.map((data) => {\r\n                                                                return (\r\n                                                                <View \r\n                                                                    style={{\r\n                                                                    position: 'absolute',\r\n                                                                    left: data.x,\r\n                                                                    top: data.y,\r\n                                                                    backgroundColor:'#242424',\r\n                                                                    width: 10,\r\n                                                                    height: 10,\r\n                                                                    borderRadius: 50\r\n                                                                    }}>\r\n                                                                </View> \r\n                                                        \r\n                                                            )\r\n                                                        })} \r\n                            \r\n                                                        </ScrollView>\r\n            \r\n                                                    </ScrollView>\r\n                                                    </ScrollView>\r\n                                                    </ScrollView>\r\n                                            \r\n                        \r\n                                                );\r\n                                            }\r\n            \r\n                                    \r\n            \r\n                                        }\r\n                                        else\r\n                                        {\r\n            \r\n                                            if(screenWidth < 600 || screenHeight < 376)\r\n                                            {\r\n                                                alert('Warning - This device is too small to display the full image. Please swipe left to view the field location or use a larger device screen size.');\r\n                                        \r\n                                                FieldWithPlots = (\r\n                                                   \r\n                                                    <ScrollView>\r\n                                                <ScrollView horizontal={true} style={stylesViewGame.imagePlotContainer}>\r\n                                                    <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToMainMenu}>\r\n                                                        <Text style={stylesViewGame.Text}>Back to Main Menu</Text>\r\n                                                    </TouchableOpacity>\r\n                \r\n                                                    <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToViewGameMenu}>\r\n                                                        <Text style={stylesViewGame.Text}>Back to View Game Menu</Text>\r\n                                                    </TouchableOpacity>\r\n                \r\n                                               \r\n                                                   \r\n                                                    <ScrollView horizontal={true} style={stylesViewGame.imagePlotContainer}>\r\n                                                    <ScrollView>\r\n                                                    \r\n                                                    \r\n                                                            \r\n                                                        \r\n                                                    <Image style ={stylesViewGame.imageSoccerMobile} \r\n                                                                    source={require('./SoccerField.png')}/> \r\n                                                                    {this.state.tempEventFieldLocations.map((data) => {\r\n                                                                        return (\r\n                                                                        <View \r\n                                                                            style={{\r\n                                                                        \r\n                                                                            position: 'absolute',\r\n                                                                            left: data.x,\r\n                                                                            top: data.y,\r\n                                                                            backgroundColor:'#242424',\r\n                                                                            width: 10,\r\n                                                                            height: 10,\r\n                                                                            borderRadius: 50\r\n                                                                            }}>\r\n                                                                        </View> \r\n                                                            \r\n                                                                        )\r\n                                                                        })}        \r\n                                                           \r\n            \r\n                                                         </ScrollView>\r\n                                                    </ScrollView>\r\n                                                    </ScrollView>\r\n                                                    </ScrollView>\r\n                                            \r\n                                                );\r\n            \r\n                                            }\r\n            \r\n                                        \r\n                                            FieldWithPlots = (\r\n            \r\n                                                <ScrollView>\r\n                                                <ScrollView horizontal={true} style={stylesViewGame.imagePlotContainer}>\r\n                                                    \r\n                                                    <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToMainMenu}>\r\n                                                        <Text style={stylesViewGame.Text}>Back to Main Menu</Text>\r\n                                                    </TouchableOpacity>\r\n                \r\n                                                    <TouchableOpacity style={stylesViewGame.button} onPress = {this.GoToViewGameMenu}>\r\n                                                        <Text style={stylesViewGame.Text}>Back to View Game Menu</Text>\r\n                                                    </TouchableOpacity>\r\n                \r\n                                                 \r\n                                                <ScrollView horizontal={true} style={stylesViewGame.imagePlotContainer}>\r\n                                                <ScrollView>\r\n                                                            \r\n                                                        <Image style ={stylesViewGame.imagePxSoccer}                              \r\n                                                            source={require('./SoccerField.png')}/>\r\n                                                            {this.state.tempEventFieldLocations.map((data) => {\r\n                                                                return (\r\n                                                                <View \r\n                                                                    style={{\r\n                                                                    position: 'absolute',\r\n                                                                    left: data.x,\r\n                                                                    top: data.y,\r\n                                                                    backgroundColor:'#242424',\r\n                                                                    width: 10,\r\n                                                                    height: 10,\r\n                                                                    borderRadius: 50\r\n                                                                    }}>\r\n                                                                </View> \r\n                                                        \r\n                                                            )\r\n                                                        })} \r\n                            \r\n                                                        </ScrollView>\r\n                                                    </ScrollView>\r\n\r\n                                                    </ScrollView>\r\n                                                    </ScrollView>\r\n                                            \r\n                                            \r\n                            \r\n                                            );\r\n                                        }\r\n            \r\n            \r\n            \r\n                                }\r\n                }\r\n\r\n\r\n\r\n            return (\r\n \r\n                <View style={{flex: 1, backgroundColor: '#252626'}}>\r\n                      \r\n\r\n                        <View>\r\n                             {ReviewSelection}  \r\n                        </View>\r\n                        <View>\r\n                             {FieldWithPlots}\r\n                        </View>\r\n                        <View>\r\n                            {ReviewGameStats}\r\n                        </View>\r\n\r\n                        <View>\r\n                            {ReviewPlayerStats}\r\n                      \r\n                        </View>\r\n\r\n                        <View>\r\n                             {PlayerStats}\r\n                        </View>\r\n                     \r\n                     \r\n                      \r\n                </View>\r\n\r\n\r\n            )\r\n\r\n        }\r\n}\r\n\r\n\r\nconst stylesViewGame= StyleSheet.create({\r\n    container: {\r\n        backgroundColor: '#242424', \r\n        marginTop: 50,\r\n        marginBottom: 5,\r\n        marginLeft: 5,\r\n        marginRight: 5,\r\n        paddingLeft: 5,\r\n        // alignItems: 'center',\r\n    },\r\n    Text:{\r\n        color: \"white\",\r\n        fontSize:18,\r\n    \r\n       \r\n        justifyContent:'center'\r\n    },\r\n    headerContainer:{ \r\n\r\n        backgroundColor: '#FF6D01',\r\n        alignItems: \"center\",\r\n        borderWidth: 4,\r\n        borderColor:'#ffffff',\r\n         alignItems: 'center',\r\n        width: wp('50%') ,  // % of width device screen\r\n        marginTop:30,\r\n        padding:4,\r\n  \r\n    },\r\n    StatRow: {\r\n        flex:1,\r\n        // flexDirection:\"row\",\r\n        alignItems: \"center\",\r\n        marginBottom:10,\r\n        borderWidth: 4,\r\n        borderColor:'#ffffff',\r\n    },\r\n\r\n\r\n    dataContainer: {\r\n        backgroundColor: '#ffffff', \r\n        alignItems: 'center',\r\n        \r\n    },\r\n    container2: {\r\n        backgroundColor: '#ffffff', \r\n        alignItems: 'center',\r\n    },\r\n    input: {\r\n        height: 48,\r\n        borderRadius: 5,\r\n        overflow: 'hidden',\r\n        backgroundColor: 'white',\r\n        marginTop: 10,\r\n        marginBottom: 10,\r\n        marginLeft: 30,\r\n        marginRight: 30,\r\n        paddingLeft: 16\r\n    },\r\n    button: {\r\n        backgroundColor: '#FF6D01',\r\n        marginLeft: 30,\r\n        marginRight: 30,\r\n        marginTop: 20,\r\n        height: 48,\r\n        borderRadius: 5,\r\n        alignItems: \"center\",\r\n        justifyContent: 'center'\r\n    },\r\n\r\n\r\n  \r\n    \r\n    imagePxGAA:{\r\n    \r\n        height:376,\r\n        width:700,\r\n     \r\n     \r\n     },\r\n\r\n     imagePxGAAmobile:{\r\n    \r\n        height:300,\r\n        width:590,\r\n \r\n     \r\n     \r\n     },\r\n\r\n\r\n     imagePxSoccer:{\r\n        height:400,\r\n        width: 700,\r\n\r\n       \r\n      \r\n    },\r\n    \r\n   \r\nimageSoccerMobile:\r\n{\r\n      //Working \r\n         //Working \r\n         height:280,\r\n         width: 480,\r\n},\r\n   \r\n  \r\n\r\n    imagePlotContainer: {\r\n\r\n        \r\n  \r\n       flexWrap: 'wrap',\r\n        flexDirection:\"row\",\r\n        // position: 'relative',\r\n\r\n        \r\n    \r\n        \r\n    \r\n    },\r\n\r\n    imageGAA:{\r\n        width: win.width,\r\n        height: 300 * ratioGaaView, //399 is actual height of image\r\n    },\r\n    \r\n    \r\n    imageSoccer:{\r\n        width: win.width,\r\n        height: 376 * ratioSoccerView , //399 is actual height of image\r\n        top: '20%'\r\n    \r\n    },\r\n    \r\n    \r\n\r\n});\r\n\r\nexport default ViewGame;"]},"metadata":{},"sourceType":"module"}