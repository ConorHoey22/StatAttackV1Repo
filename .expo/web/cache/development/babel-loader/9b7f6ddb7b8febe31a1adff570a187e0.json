{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\StatsAppNative\\\\MyApp\\\\screens\\\\TeamAnalystRegistrationScreen\\\\TeamAnalystRegistrationScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, useEffect, useState } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport styles from \"./styles\";\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\n\nvar TeamAnalystRegistrationScreen = function (_Component) {\n  _inherits(TeamAnalystRegistrationScreen, _Component);\n\n  var _super = _createSuper(TeamAnalystRegistrationScreen);\n\n  function TeamAnalystRegistrationScreen(props) {\n    var _this;\n\n    _classCallCheck(this, TeamAnalystRegistrationScreen);\n\n    _this = _super.call(this, props);\n\n    _this.onSignUpPress = function () {\n      var fullName = _this.state.fullName;\n      var email = _this.state.email;\n      var password = _this.state.password;\n      var confirmPassword = _this.state.confirmPassword;\n      var teamAdminInvite = _this.state.teamAdminInvite;\n      var CreatedByUserID = _this.state.CreatedByUserID;\n\n      if (fullName == \"\") {\n        alert(\"Please enter your full name.\");\n        return;\n      }\n\n      if (email == \"\") {\n        alert(\"Please enter your email.\");\n        return;\n      }\n\n      if (teamAdminInvite == \"\") {\n        alert(\"Please enter your teamAdminInvite code.\");\n        return;\n      }\n\n      if (password !== confirmPassword) {\n        alert(\"Passwords don't match.\");\n        return;\n      }\n\n      if (password !== confirmPassword) {\n        alert(\"Passwords don't match.\");\n        return;\n      }\n\n      var checkIFTeamExists = firebase.database().ref(\"teams\").orderByChild('teamAdminInvite').equalTo(teamAdminInvite).once('value', function (snapshot) {\n        if (snapshot.exists()) {\n          var teamObj = snapshot.val();\n          snapshot.forEach(function (childSnapshot) {\n            var key = childSnapshot.key;\n            teamAdminArray.push(key);\n          });\n\n          for (var i = 0; i < teamAdminArray.length; i++) {\n            firebase.auth().createUserWithEmailAndPassword(email, password).then(function (response) {\n              var uid = response.user.uid;\n              var userType = \"TeamAnalyst\";\n              var data2 = {\n                id: uid,\n                email: email,\n                fullName: _this.state.fullName,\n                userType: userType,\n                teamAdminInvite: _this.state.teamAdminInvite\n              };\n              var usersRef = firebase.database().ref('users/' + uid);\n              usersRef.set(data2).then(function () {\n                var addTeamAdmin = firebase.database().ref('teams').child(teamAdminArray[0]).child('teamAdmins');\n                var adminData = {\n                  id: uid,\n                  fullName: _this.state.fullName\n                };\n                addTeamAdmin.update(adminData);\n                console.log(adminData);\n\n                _this.props.navigation.navigate('Login');\n              }).catch(function (error) {\n                alert(error);\n              });\n            }).catch(function (error) {\n              alert(error);\n            });\n          }\n        } else {\n          alert('Cannot find Team - Maybe incorrect team admin code');\n        }\n      });\n    };\n\n    _this.state = {\n      fullName: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      teamAdminInvite: '',\n      CreatedByUserID: '',\n      teamAdminArray: []\n    };\n    return _this;\n  }\n\n  _createClass(TeamAnalystRegistrationScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(ScrollView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.footerText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }\n      }, \" Please enter your full name:\"), React.createElement(TextInput, {\n        style: styles.input,\n        placeholderTextColor: \"#aaaaaa\",\n        placeholder: \"Please enter your full name\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            fullName: text\n          });\n        },\n        value: this.state.fullName,\n        underlineColorAndroid: \"transparent\",\n        autoCapitalize: \"none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }\n      }), React.createElement(Text, {\n        style: styles.footerText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }\n      }, \" Please enter your email:\"), React.createElement(TextInput, {\n        style: styles.input,\n        placeholderTextColor: \"#aaaaaa\",\n        placeholder: \"Please enter your email\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            email: text\n          });\n        },\n        value: this.state.email,\n        underlineColorAndroid: \"transparent\",\n        autoCapitalize: \"none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }\n      }), React.createElement(Text, {\n        style: styles.footerText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 21\n        }\n      }, \" Please enter your password:\"), React.createElement(TextInput, {\n        style: styles.input,\n        placeholderTextColor: \"#aaaaaa\",\n        secureTextEntry: true,\n        placeholder: \"Password\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            password: text\n          });\n        },\n        value: this.state.password,\n        underlineColorAndroid: \"transparent\",\n        autoCapitalize: \"none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }\n      }), React.createElement(Text, {\n        style: styles.footerText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 21\n        }\n      }, \" Please confirm your password:\"), React.createElement(TextInput, {\n        style: styles.input,\n        placeholderTextColor: \"#aaaaaa\",\n        secureTextEntry: true,\n        placeholder: \"Confirm Password\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            confirmPassword: text\n          });\n        },\n        value: this.state.confirmPassword,\n        underlineColorAndroid: \"transparent\",\n        autoCapitalize: \"none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }\n      }), React.createElement(Text, {\n        style: styles.footerText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 21\n        }\n      }, \"Please enter you invite code.This can be obtained by your  Head Team Analyst - this will be in the team record:\"), React.createElement(TextInput, {\n        style: styles.input,\n        placeholderTextColor: \"#aaaaaa\",\n        placeholder: \"Please enter your invite code\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            teamAdminInvite: text\n          });\n        },\n        value: this.state.teamAdminInvite,\n        underlineColorAndroid: \"transparent\",\n        autoCapitalize: \"none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 21\n        }\n      }), React.createElement(View, {\n        style: styles.footerView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 21\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.button,\n        onPress: this.onSignUpPress,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonTitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 25\n        }\n      }, \"Sign up!\"))));\n    }\n  }]);\n\n  return TeamAnalystRegistrationScreen;\n}(Component);\n\nexport default TeamAnalystRegistrationScreen;","map":{"version":3,"sources":["D:/StatsAppNative/MyApp/screens/TeamAnalystRegistrationScreen/TeamAnalystRegistrationScreen.js"],"names":["React","Component","useEffect","useState","styles","firebase","TeamAnalystRegistrationScreen","props","onSignUpPress","fullName","state","email","password","confirmPassword","teamAdminInvite","CreatedByUserID","alert","checkIFTeamExists","database","ref","orderByChild","equalTo","once","snapshot","exists","teamObj","val","forEach","childSnapshot","key","teamAdminArray","push","i","length","auth","createUserWithEmailAndPassword","then","response","uid","user","userType","data2","id","usersRef","set","addTeamAdmin","child","adminData","update","console","log","navigation","navigate","catch","error","footerText","input","text","setState","footerView","button","buttonTitle"],"mappings":"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","sourcesContent":["import React, { Component, useEffect, useState } from 'react'\r\nimport { Image, Text, TextInput, TouchableOpacity, ScrollView , View , StyleSheet} from 'react-native';\r\nimport styles from './styles';\r\n// import * as firebase from 'firebase/app';\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\n\r\n\r\n//--Task -fix this page so that it not a function\r\n\r\nclass TeamAnalystRegistrationScreen extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = { \r\n            fullName:'',\r\n            email:'',\r\n            password:'',\r\n            confirmPassword:'',\r\n            teamAdminInvite:'',\r\n            CreatedByUserID:'',\r\n            teamAdminArray:[],\r\n            \r\n        };\r\n    }\r\n\r\n\r\n\r\n    componentDidMount(){\r\n\r\n    }\r\n \r\n    onSignUpPress = () => {\r\n\r\n        var fullName = this.state.fullName;\r\n        var email = this.state.email;\r\n        var password = this.state.password;\r\n        var confirmPassword = this.state.confirmPassword;\r\n        var teamAdminInvite = this.state.teamAdminInvite;\r\n        var CreatedByUserID = this.state.CreatedByUserID;\r\n\r\n        //  Full name Validation\r\n\r\n        if(fullName == \"\")\r\n        {\r\n            alert(\"Please enter your full name.\")\r\n            return\r\n        }\r\n\r\n        //  Email Validation\r\n        if(email == \"\")\r\n        {\r\n            alert(\"Please enter your email.\")\r\n            return\r\n        }\r\n\r\n        //  teamAdminInvite Validation\r\n        if(teamAdminInvite == \"\")\r\n        {\r\n            alert(\"Please enter your teamAdminInvite code.\")\r\n            return\r\n        }\r\n\r\n        //  Password confirmation Check\r\n        if (password !== confirmPassword) {\r\n            alert(\"Passwords don't match.\")\r\n            return\r\n        }\r\n        //Set UserType to TA\r\n        if (password !== confirmPassword) {\r\n            alert(\"Passwords don't match.\")\r\n            return\r\n        }\r\n\r\n\r\n        //Check if the team invite is completely unique in the users list\r\n        const checkIFTeamExists = firebase.database().ref(\"teams\").orderByChild('teamAdminInvite').equalTo(teamAdminInvite).once('value' , snapshot =>  {\r\n        if (snapshot.exists()){\r\n\r\n            //obtain Team ID \r\n            const teamObj = snapshot.val();\r\n\r\n\r\n\r\n            snapshot.forEach(function(childSnapshot) {\r\n              \r\n                var key = childSnapshot.key;\r\n    \r\n                 \r\n                teamAdminArray.push(key);\r\n\r\n            });\r\n     \r\n\r\n\r\n            for(var i = 0; i < teamAdminArray.length; i++)\r\n            {\r\n\r\n                \r\n\r\n\r\n\r\n\r\n\r\n\r\n            // console.log(snapshot.val());\r\n\r\n\r\n            // console.log(snapshot.val().key)\r\n            // // // let CreatedTeamByUserID1 = teamObj.CreatedByUserID;\r\n            // // this.setState({CreatedByUserID: teamObj.CreatedByUserID});\r\n\r\n\r\n\r\n            // this.setState({ CreatedByUserID: teamObj.CreatedByUserID }, () => {\r\n            //     console.log(this.state.CreatedByUserID);\r\n            //   }); \r\n\r\n\r\n\r\n            // console.log(email);\r\n            // console.log(password);\r\n\r\n\r\n            //bug here - CreatID isnt defined in state\r\n            firebase\r\n            .auth()\r\n            .createUserWithEmailAndPassword(email, password)\r\n            .then((response) => {\r\n                const uid = response.user.uid;\r\n                const userType = \"TeamAnalyst\";\r\n                const data2 = {\r\n                    id: uid,\r\n                    email: email,\r\n                    fullName: this.state.fullName,\r\n                    userType: userType,\r\n                    teamAdminInvite:this.state.teamAdminInvite\r\n                \r\n                    \r\n                };\r\n\r\n\r\n                const usersRef = firebase.database().ref('users/' + uid)\r\n                    usersRef\r\n                        .set(data2)\r\n                                .then(() => {\r\n                                       \r\n\r\n                                        //Add the team Analyst to the Team Record\r\n                                        // const teamAdminsRef = firebase.database().ref('teams').orderByChild('')\r\n\r\n                                const addTeamAdmin = firebase.database().ref('teams').child(teamAdminArray[0]).child('teamAdmins')\r\n\r\n                                    var adminData = {\r\n                                        id: uid,\r\n                                        fullName:this.state.fullName\r\n                                    };\r\n\r\n\r\n                                addTeamAdmin.update(adminData);\r\n\r\n                                console.log(adminData);\r\n\r\n                                        this.props.navigation.navigate('Login')\r\n                                    })\r\n                                    .catch((error) => {\r\n                                        alert(error)\r\n                                    });\r\n                            })\r\n                            .catch((error) => {\r\n                                alert(error)\r\n                        });\r\n\r\n\r\n            }  \r\n\r\n            }\r\n        \r\n    \r\n            else\r\n            {\r\n                alert('Cannot find Team - Maybe incorrect team admin code');\r\n            }\r\n\r\n        \r\n\r\n      });\r\n    \r\n\r\n    }\r\n\r\n    render(){\r\n\r\n        return (\r\n            <ScrollView>\r\n                    <Text style={styles.footerText}> Please enter your full name:</Text>\r\n                    <TextInput\r\n                        style={styles.input}\r\n                        placeholderTextColor=\"#aaaaaa\"\r\n                        placeholder='Please enter your full name'\r\n                        onChangeText={(text) => this.setState({fullName:text})}\r\n                        value={this.state.fullName}\r\n                        underlineColorAndroid=\"transparent\"\r\n                        autoCapitalize=\"none\"\r\n                    />\r\n\r\n                    <Text style={styles.footerText}> Please enter your email:</Text>\r\n                    <TextInput\r\n                        style={styles.input}\r\n                        placeholderTextColor=\"#aaaaaa\"\r\n                        placeholder='Please enter your email'\r\n                        onChangeText={(text) => this.setState({email:text})}\r\n                        value={this.state.email}\r\n                        underlineColorAndroid=\"transparent\"\r\n                        autoCapitalize=\"none\"\r\n                    />\r\n\r\n                    <Text style={styles.footerText}> Please enter your password:</Text>\r\n                    <TextInput\r\n                        style={styles.input}\r\n                        placeholderTextColor=\"#aaaaaa\"\r\n                        secureTextEntry\r\n                        placeholder='Password'\r\n                        onChangeText={(text) => this.setState({password:text})}\r\n                        value={this.state.password}\r\n                        underlineColorAndroid=\"transparent\"\r\n                        autoCapitalize=\"none\"\r\n                    />\r\n                    <Text style={styles.footerText}> Please confirm your password:</Text>\r\n                    <TextInput\r\n                        style={styles.input}\r\n                        placeholderTextColor=\"#aaaaaa\"\r\n                        secureTextEntry\r\n                        placeholder='Confirm Password'\r\n                        onChangeText={(text) => this.setState({confirmPassword:text})}\r\n                        value={this.state.confirmPassword}\r\n                        underlineColorAndroid=\"transparent\"\r\n                        autoCapitalize=\"none\"\r\n                    />\r\n\r\n                    <Text style={styles.footerText}>Please enter you invite code.This can be obtained by your  Head Team Analyst - this will be in the team record:</Text>\r\n                    <TextInput\r\n                        style={styles.input}\r\n                        placeholderTextColor=\"#aaaaaa\"\r\n                        placeholder='Please enter your invite code'\r\n                        onChangeText={(text) => this.setState({teamAdminInvite:text})}\r\n                        value={this.state.teamAdminInvite}\r\n                        underlineColorAndroid=\"transparent\"\r\n                        autoCapitalize=\"none\"\r\n                    />\r\n\r\n                    <View style={styles.footerView}>\r\n                        <TouchableOpacity style={styles.button} onPress={this.onSignUpPress}>\r\n                        <Text style={styles.buttonTitle}>Sign up!</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n\r\n            </ScrollView>\r\n        )\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default TeamAnalystRegistrationScreen;\r\n\r\n       \r\n    // const [fullName, setFullName] = useState('')\r\n    // const [email, setEmail] = useState('')\r\n    // const [password, setPassword] = useState('')\r\n    // const [confirmPassword, setConfirmPassword] = useState('')\r\n    // const [teamAdminInvite, setInviteCode] = useState('')\r\n\r\n\r\n    // const CreatedByUserID = '';\r\n\r\n    \r\n    // const onSignUpPress = () => {\r\n    //     //  Full name Validation\r\n    //     if(fullName == \"\")\r\n    //     {\r\n    //         alert(\"Please enter your full name.\")\r\n    //         return\r\n    //     }\r\n\r\n    //     //  Email Validation\r\n    //     if(email == \"\")\r\n    //     {\r\n    //         alert(\"Please enter your email.\")\r\n    //         return\r\n    //     }\r\n\r\n    //     //  teamAdminInvite Validation\r\n    //     if(teamAdminInvite == \"\")\r\n    //     {\r\n    //         alert(\"Please enter your teamAdminInvite code.\")\r\n    //         return\r\n    //     }\r\n\r\n    //     //  Password confirmation Check\r\n    //     if (password !== confirmPassword) {\r\n    //         alert(\"Passwords don't match.\")\r\n    //         return\r\n    //     }\r\n    //     //Set UserType to TA\r\n    //     if (password !== confirmPassword) {\r\n    //         alert(\"Passwords don't match.\")\r\n    //         return\r\n    //     }\r\n\r\n\r\n\r\n//Check if the team invite is completely unique in the users list\r\n// const checkIFTeamExists = firebase.database().ref(\"teams\").orderByChild('teamAdminInvite').equalTo(teamAdminInvite).once('value' , snapshot =>  {\r\n//         if (snapshot.exists()){\r\n\r\n//             //obtain Team ID \r\n//             const teamObj = snapshot.val();\r\n\r\n\r\n//             console.log(snapshot.val());\r\n\r\n//             let CreatedByUserID = teamObj.CreatedByUserID;\r\n//             this.setState({CreatedByUserID: teamObj.CreatedByUserID});\r\n\r\n\r\n//              console.log(CreatedByUserID);\r\n\r\n// console.log(email);\r\n// console.log(password);\r\n\r\n\r\n//             //bug here - CreatID isnt defined in state\r\n//             firebase\r\n//             .auth()\r\n//             .createUserWithEmailAndPassword(email, password)\r\n//             .then((response) => {\r\n//                 const uid = response.user.uid;\r\n//                 const userType = \"TeamAnalyst\";\r\n//                 const data2 = {\r\n//                     id: uid,\r\n//                     email: email,\r\n//                     fullName: this.state.fullName,\r\n//                     userType:   userType,\r\n//                     teamCreated: 0,\r\n//                     teamplayerlimit:this.state.teamplayerlimit,\r\n//                     teamgamelimit:this.state.teamgamelimit,\r\n//                     teamAdminInvite:this.state.teamAdminInvite\r\n                \r\n                    \r\n//                 };\r\n\r\n\r\n//                 const usersRef = firebase.database().ref('users/' + uid)\r\n//                     usersRef\r\n//                         .set(data2)\r\n//                                 .then(() => {\r\n//                                         this.setState({\r\n//                                             isLoading: true,\r\n//                                         })\r\n                                    \r\n\r\n//                                         //Add the team Analyst to the Team Record\r\n//                                         // const teamAdminsRef = firebase.database().ref('teams').orderByChild('')\r\n\r\n//                                 const addTeamAdmin = firebase.database().ref('teams').child(CreatedByUserID).child('teamAdmins')\r\n\r\n//                                     var adminData = {\r\n//                                         id: uid,\r\n//                                         fullName:this.state.fullName\r\n//                                     };\r\n\r\n\r\n//                                 addTeamAdmin.update(adminData);\r\n\r\n//                                         this.props.navigation.navigate('Login')\r\n//                                     })\r\n//                                     .catch((error) => {\r\n//                                         alert(error)\r\n//                                     });\r\n//                             })\r\n//                             .catch((error) => {\r\n//                                 alert(error)\r\n//                         });\r\n//             }\r\n//             else\r\n//             {\r\n//                 alert('Cannot find Team - Maybe incorrect team admin code');\r\n//             }\r\n\r\n//       });\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//   navigation.navigate('Login')\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//         }\r\n       \r\n\r\n\r\n    \r\n\r\n//     return (\r\n//         <ScrollView>\r\n//                 <Text style={styles.footerText}> Please enter your full name:</Text>\r\n//                 <TextInput\r\n//                     style={styles.input}\r\n//                     placeholderTextColor=\"#aaaaaa\"\r\n//                     placeholder='Please enter your full name'\r\n//                     onChangeText={(text) => setFullName(text)}\r\n//                     value={fullName}\r\n//                     underlineColorAndroid=\"transparent\"\r\n//                     autoCapitalize=\"none\"\r\n//                 />\r\n\r\n//                 <Text style={styles.footerText}> Please enter your email:</Text>\r\n//                 <TextInput\r\n//                     style={styles.input}\r\n//                     placeholderTextColor=\"#aaaaaa\"\r\n//                     placeholder='Please enter your email'\r\n//                     onChangeText={(text) => setEmail(text)}\r\n//                     value={email}\r\n//                     underlineColorAndroid=\"transparent\"\r\n//                     autoCapitalize=\"none\"\r\n//                 />\r\n\r\n//                 <Text style={styles.footerText}> Please enter your password:</Text>\r\n//                 <TextInput\r\n//                     style={styles.input}\r\n//                     placeholderTextColor=\"#aaaaaa\"\r\n//                     secureTextEntry\r\n//                     placeholder='Password'\r\n//                     onChangeText={(text) => setPassword(text)}\r\n//                     value={password}\r\n//                     underlineColorAndroid=\"transparent\"\r\n//                     autoCapitalize=\"none\"\r\n//                 />\r\n//                  <Text style={styles.footerText}> Please confirm your password:</Text>\r\n//                 <TextInput\r\n//                     style={styles.input}\r\n//                     placeholderTextColor=\"#aaaaaa\"\r\n//                     secureTextEntry\r\n//                     placeholder='Confirm Password'\r\n//                     onChangeText={(text) => setConfirmPassword(text)}\r\n//                     value={confirmPassword}\r\n//                     underlineColorAndroid=\"transparent\"\r\n//                     autoCapitalize=\"none\"\r\n//                 />\r\n\r\n//                 <Text style={styles.footerText}>Please enter you invite code.This can be obtained by your  Head Team Analyst - this will be in the team record:</Text>\r\n//                 <TextInput\r\n//                     style={styles.input}\r\n//                     placeholderTextColor=\"#aaaaaa\"\r\n//                     placeholder='Please enter your invite code'\r\n//                     onChangeText={(text) => setInviteCode(text)}\r\n//                     value={teamAdminInvite}\r\n//                     underlineColorAndroid=\"transparent\"\r\n//                     autoCapitalize=\"none\"\r\n//                 />\r\n\r\n//                 <View style={styles.footerView}>\r\n//                     <TouchableOpacity style={styles.button} onPress={() => onSignUpPress()}>\r\n//                     <Text style={styles.buttonTitle}>Sign up!</Text>\r\n//                     </TouchableOpacity>\r\n//                 </View>\r\n\r\n//         </ScrollView>\r\n//     )\r\n// }"]},"metadata":{},"sourceType":"module"}