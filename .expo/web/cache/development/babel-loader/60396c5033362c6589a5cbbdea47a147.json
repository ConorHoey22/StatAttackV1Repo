{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\StatsAppNative\\\\MyApp\\\\screens\\\\HeadTeamAnalystRegistrationScreen\\\\HeadTeamAnalystRegistrationScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useEffect, useState, Component } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport styles from \"./styles\";\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\n\nvar HeadTeamAnalystRegistrationScreen = function (_Component) {\n  _inherits(HeadTeamAnalystRegistrationScreen, _Component);\n\n  var _super = _createSuper(HeadTeamAnalystRegistrationScreen);\n\n  function HeadTeamAnalystRegistrationScreen() {\n    var _this;\n\n    _classCallCheck(this, HeadTeamAnalystRegistrationScreen);\n\n    _this = _super.call(this);\n\n    _this.onSignUpPress = function () {\n      var _this$state = _this.state,\n          fullName = _this$state.fullName,\n          email = _this$state.email,\n          password = _this$state.password;\n\n      if (fullName.length > 0) {} else {\n        alert(\"Please enter your full name.\");\n      }\n\n      if (_this.state.password !== _this.state.confirmPassword) {\n        alert(\"Passwords don't match.\");\n        return;\n      }\n\n      var data = {\n        teaminvitecode: _this.state.teaminvitecode\n      };\n      var checkUniqueness = firebase.database().ref(\"users\").orderByChild('teaminvitecode').equalTo(data.teaminvitecode).once('value', function (snapshot) {\n        if (snapshot.exists()) {\n          alert('This team invite code is not unique, try again');\n        } else {\n          firebase.auth().createUserWithEmailAndPassword(_this.state.email, _this.state.password).then(function (response) {\n            var uid = response.user.uid;\n            var userType = \"HeadTeamAnalyst\";\n            console.log(uid);\n            var data2 = {\n              id: uid,\n              email: _this.state.email,\n              fullName: _this.state.fullName,\n              userType: userType,\n              teamCreated: 0,\n              teamplayerlimit: _this.state.teamplayerlimit,\n              teamgamelimit: _this.state.teamgamelimit,\n              teaminvitecode: _this.state.teaminvitecode\n            };\n            var usersRef = firebase.database().ref('users/' + uid);\n            usersRef.set(data2).then(function () {\n              alert('Account created');\n\n              _this.props.navigation.navigate('Login');\n            }).catch(function (error) {\n              alert(error);\n            });\n          }).catch(function (error) {\n            alert(error);\n          });\n        }\n      });\n    };\n\n    _this.state = {\n      fullName: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      inviteCode: '',\n      teamplayerlimit: 0,\n      teamgamelimit: 0,\n      isLoading: false,\n      teaminvitecode: ''\n    };\n    return _this;\n  }\n\n  _createClass(HeadTeamAnalystRegistrationScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.isLoading) {\n        return React.createElement(View, {\n          style: styles.preloader,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 11\n          }\n        }, React.createElement(ActivityIndicator, {\n          size: \"large\",\n          color: \"#9E9E9E\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }\n        }));\n      }\n\n      return React.createElement(ScrollView, {\n        styles: {\n          backgroundColor: '#252626'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.footerText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 17\n        }\n      }, \" Please enter your full name:\"), React.createElement(TextInput, {\n        style: styles.input,\n        placeholderTextColor: \"#aaaaaa\",\n        placeholder: \"Please enter your full name\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            fullName: text\n          });\n        },\n        value: this.state.fullName,\n        underlineColorAndroid: \"transparent\",\n        autoCapitalize: \"none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 17\n        }\n      }), React.createElement(Text, {\n        style: styles.footerText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 17\n        }\n      }, \" Please enter your email:\"), React.createElement(TextInput, {\n        style: styles.input,\n        placeholderTextColor: \"#aaaaaa\",\n        placeholder: \"Please enter your email\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            email: text\n          });\n        },\n        value: this.state.email,\n        underlineColorAndroid: \"transparent\",\n        autoCapitalize: \"none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 17\n        }\n      }), React.createElement(Text, {\n        style: styles.footerText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 17\n        }\n      }, \" Please enter your password:\"), React.createElement(TextInput, {\n        style: styles.input,\n        placeholderTextColor: \"#aaaaaa\",\n        secureTextEntry: true,\n        placeholder: \"Password\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            password: text\n          });\n        },\n        value: this.state.password,\n        underlineColorAndroid: \"transparent\",\n        autoCapitalize: \"none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 17\n        }\n      }), React.createElement(Text, {\n        style: styles.footerText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 18\n        }\n      }, \" Please confirm your password:\"), React.createElement(TextInput, {\n        style: styles.input,\n        placeholderTextColor: \"#aaaaaa\",\n        secureTextEntry: true,\n        placeholder: \"Confirm Password\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            confirmPassword: text\n          });\n        },\n        value: this.state.confirmPassword,\n        underlineColorAndroid: \"transparent\",\n        autoCapitalize: \"none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 17\n        }\n      }), React.createElement(Text, {\n        style: styles.footerText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }\n      }, \" Please enter the team player limit for this client (30 is standard) :\"), React.createElement(TextInput, {\n        style: styles.input,\n        placeholderTextColor: \"#aaaaaa\",\n        placeholder: \"Please enter the team player limit for this client\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            teamplayerlimit: text\n          });\n        },\n        value: this.state.teamplayerlimit,\n        underlineColorAndroid: \"transparent\",\n        autoCapitalize: \"none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 17\n        }\n      }), React.createElement(Text, {\n        style: styles.footerText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }\n      }, \" Please enter the team game limit for this client (30 is standard - You may select more if this is in their payment package) :\"), React.createElement(TextInput, {\n        style: styles.input,\n        placeholderTextColor: \"#aaaaaa\",\n        placeholder: \"Please enter the team game limit for this client\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            teamgamelimit: text\n          });\n        },\n        value: this.state.teamgamelimit,\n        underlineColorAndroid: \"transparent\",\n        autoCapitalize: \"none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 17\n        }\n      }), React.createElement(Text, {\n        style: styles.footerText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }\n      }, \" Please enter their team invite code :\"), React.createElement(TextInput, {\n        style: styles.input,\n        placeholderTextColor: \"#aaaaaa\",\n        placeholder: \"Please enter their team invite code\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            teaminvitecode: text\n          });\n        },\n        value: this.state.teaminvitecode,\n        underlineColorAndroid: \"transparent\",\n        autoCapitalize: \"none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        style: styles.footerView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 17\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.button,\n        onPress: this.onSignUpPress,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonTitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }\n      }, \"Sign up!\"))));\n    }\n  }]);\n\n  return HeadTeamAnalystRegistrationScreen;\n}(Component);\n\nexport { HeadTeamAnalystRegistrationScreen as default };","map":{"version":3,"sources":["D:/StatsAppNative/MyApp/screens/HeadTeamAnalystRegistrationScreen/HeadTeamAnalystRegistrationScreen.js"],"names":["React","useEffect","useState","Component","styles","firebase","HeadTeamAnalystRegistrationScreen","onSignUpPress","state","fullName","email","password","length","alert","confirmPassword","data","teaminvitecode","checkUniqueness","database","ref","orderByChild","equalTo","once","snapshot","exists","auth","createUserWithEmailAndPassword","then","response","uid","user","userType","console","log","data2","id","teamCreated","teamplayerlimit","teamgamelimit","usersRef","set","props","navigation","navigate","catch","error","inviteCode","isLoading","preloader","backgroundColor","footerText","input","text","setState","footerView","button","buttonTitle"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, Component  } from 'react'\r\nimport { Image, Text, TextInput, TouchableOpacity, ScrollView , View , ActivityIndicator} from 'react-native';\r\nimport styles from './styles';\r\n// import * as firebase from 'firebase/app';\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\n\r\n\r\n\r\n\r\nexport default class HeadTeamAnalystRegistrationScreen extends Component{\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            fullName: '',\r\n            email: '', \r\n            password: '',\r\n            confirmPassword:'',\r\n            inviteCode:'',\r\n            teamplayerlimit: 0,\r\n            teamgamelimit:0,\r\n            isLoading: false,\r\n            teaminvitecode: ''\r\n        }\r\n\r\n\r\n  \r\n    \r\n    }\r\n\r\n\r\n    \r\n    onSignUpPress = () => {\r\n       \r\n        const { fullName, email, password } = this.state\r\n\r\n  \r\n        if (fullName.length > 0) {\r\n            \r\n                 \r\n        }\r\n        else\r\n        {\r\n            alert(\"Please enter your full name.\")\r\n        }\r\n     \r\n\r\n\r\n    //  Password confirmation Check\r\n    if (this.state.password !== this.state.confirmPassword) {\r\n        alert(\"Passwords don't match.\")\r\n        return\r\n    }\r\n  \r\n\r\n\r\n     \r\n     \r\n\r\n            //Validation for TeaminviteCode - This must be unique within the users records\r\n\r\n            //snapshot searching for data.teaminvitecode \r\n                //If exist alert user\r\n                //catch then create user \r\n\r\n\r\n    //    const checkUniqueness = firebase.database().ref('users').orderByChild('teaminvitecode').equalTo(data.teaminvitecode).once('value').then(function(snapshot)  {\r\n\r\n    //     alert('not un');\r\n\r\n    //    }).catch(function() {\r\n    //     alert('We cna ');\r\n    // });\r\n\r\n    const data = {\r\n\r\n        teaminvitecode:this.state.teaminvitecode\r\n    \r\n        \r\n    };\r\n\r\n    //Check if the team invite is completely unique in the users list\r\n    const checkUniqueness = firebase.database().ref(\"users\").orderByChild('teaminvitecode').equalTo(data.teaminvitecode).once('value' , snapshot =>  {\r\n        if (snapshot.exists()){\r\n          alert('This team invite code is not unique, try again');\r\n        }\r\n        else\r\n        {\r\n\r\n            firebase\r\n            .auth()\r\n            .createUserWithEmailAndPassword(this.state.email, this.state.password)\r\n            .then((response) => {\r\n                const uid = response.user.uid;\r\n                const userType = \"HeadTeamAnalyst\";\r\n\r\n\r\n                console.log(uid);\r\n                const data2 = {\r\n                    id: uid,\r\n                    email: this.state.email,\r\n                    fullName: this.state.fullName,\r\n                    userType:   userType,\r\n                    teamCreated: 0,\r\n                    teamplayerlimit:this.state.teamplayerlimit,\r\n                    teamgamelimit:this.state.teamgamelimit,\r\n                    teaminvitecode:this.state.teaminvitecode\r\n                \r\n                    \r\n                };\r\n    \r\n\r\n                const usersRef = firebase.database().ref('users/' + uid)\r\n                     usersRef\r\n                         .set(data2)\r\n                              .then(() => {\r\n                                    \r\n\r\n                                        alert('Account created');\r\n                                        this.props.navigation.navigate('Login')\r\n                                    })\r\n                                    .catch((error) => {\r\n                                        alert(error)\r\n                                    });\r\n                            })\r\n                            .catch((error) => {\r\n                                alert(error)\r\n                        });\r\n        }\r\n\r\n    });\r\n      \r\n\r\n\r\n }\r\n   \r\n   \r\n  render(){\r\n    if(this.state.isLoading){\r\n        return(\r\n          <View style={styles.preloader}>\r\n            <ActivityIndicator size=\"large\" color=\"#9E9E9E\"/>\r\n          </View>\r\n        )\r\n      }    \r\n    return (\r\n        <ScrollView styles= {{ backgroundColor: '#252626'}}>\r\n                <Text style={styles.footerText}> Please enter your full name:</Text>\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholderTextColor=\"#aaaaaa\"\r\n                    placeholder='Please enter your full name'\r\n                    // onChangeText={(text) => setFullName(text)}\r\n                    onChangeText={(text) => this.setState({fullName:text})}\r\n                    value={this.state.fullName}\r\n                    underlineColorAndroid=\"transparent\"\r\n                    autoCapitalize=\"none\"\r\n                />\r\n\r\n                <Text style={styles.footerText}> Please enter your email:</Text>\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholderTextColor=\"#aaaaaa\"\r\n                    placeholder='Please enter your email'\r\n                    // onChangeText={(text) => setEmail(text)}\r\n                    onChangeText={(text) => this.setState({email:text})}\r\n                    value={this.state.email}\r\n                    underlineColorAndroid=\"transparent\"\r\n                    autoCapitalize=\"none\"\r\n                />\r\n\r\n                <Text style={styles.footerText}> Please enter your password:</Text>\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholderTextColor=\"#aaaaaa\"\r\n                    secureTextEntry\r\n                    placeholder='Password'\r\n                    // onChangeText={(text) => setPassword(text)}\r\n                    onChangeText={(text) => this.setState({password:text})}\r\n                    value={this.state.password}\r\n                    underlineColorAndroid=\"transparent\"\r\n                    autoCapitalize=\"none\"\r\n                />\r\n                 <Text style={styles.footerText}> Please confirm your password:</Text>\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholderTextColor=\"#aaaaaa\"\r\n                    secureTextEntry\r\n                    placeholder='Confirm Password'\r\n                    // onChangeText={(text) => setConfirmPassword(text)}\r\n                    onChangeText={(text) => this.setState({confirmPassword:text})}\r\n                    value={this.state.confirmPassword}\r\n                    underlineColorAndroid=\"transparent\"\r\n                    autoCapitalize=\"none\"\r\n                />\r\n\r\n            <Text style={styles.footerText}> Please enter the team player limit for this client (30 is standard) :</Text>\r\n                <TextInput\r\n                        style={styles.input}\r\n                        placeholderTextColor=\"#aaaaaa\"\r\n                        placeholder='Please enter the team player limit for this client'\r\n              \r\n                        onChangeText={(text) => this.setState({teamplayerlimit:text})}\r\n                        value={this.state.teamplayerlimit}\r\n                        underlineColorAndroid=\"transparent\"\r\n                        autoCapitalize=\"none\"\r\n                    />\r\n\r\n            <Text style={styles.footerText}> Please enter the team game limit for this client (30 is standard - You may select more if this is in their payment package) :</Text>\r\n                <TextInput\r\n                        style={styles.input}\r\n                        placeholderTextColor=\"#aaaaaa\"\r\n                        placeholder='Please enter the team game limit for this client'\r\n                        onChangeText={(text) => this.setState({teamgamelimit:text})}\r\n                        value={this.state.teamgamelimit}\r\n                        underlineColorAndroid=\"transparent\"\r\n                        autoCapitalize=\"none\"\r\n                    />\r\n                \r\n\r\n            <Text style={styles.footerText}> Please enter their team invite code :</Text>\r\n                <TextInput\r\n                        style={styles.input}\r\n                        placeholderTextColor=\"#aaaaaa\"\r\n                        placeholder='Please enter their team invite code'\r\n                        onChangeText={(text) => this.setState({teaminvitecode:text})}\r\n                        value={this.state.teaminvitecode}\r\n                        underlineColorAndroid=\"transparent\"\r\n                        autoCapitalize=\"none\"\r\n                    />\r\n\r\n                <View style={styles.footerView}>\r\n                    <TouchableOpacity style={styles.button} onPress={this.onSignUpPress}>\r\n                    <Text style={styles.buttonTitle}>Sign up!</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n\r\n\r\n        </ScrollView>\r\n    )\r\n}\r\n\r\n}"]},"metadata":{},"sourceType":"module"}