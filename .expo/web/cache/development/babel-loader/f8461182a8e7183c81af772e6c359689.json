{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\StatsAppNative\\\\MyApp\\\\screens\\\\HomeScreen\\\\HomeScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useEffect, useState, Component } from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nvar screenWidth = Dimensions.get('window').width;\nvar screenHeight = Dimensions.get('window').height;\n\nvar HomeScreen = function (_Component) {\n  _inherits(HomeScreen, _Component);\n\n  var _super = _createSuper(HomeScreen);\n\n  function HomeScreen(props) {\n    var _this;\n\n    _classCallCheck(this, HomeScreen);\n\n    _this = _super.call(this, props);\n\n    _this.ObtainUserData = function _callee() {\n      var _firebase$auth, currentUser, uid, myUserId, teamID, userType;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _firebase$auth = firebase.auth(), currentUser = _firebase$auth.currentUser;\n              uid = currentUser.uid;\n              myUserId = firebase.auth().currentUser.uid;\n              teamID = _this.state.teamID;\n              userType = _this.state.userType;\n              firebase.database().ref('/users/' + uid).on('value', function (snapshot) {\n                var userObj = snapshot.val();\n                var userType = userObj.userType;\n\n                _this.setState({\n                  userType: userType\n                });\n\n                var teamAdminInvite = userObj.teamAdminInvite;\n\n                _this.setState({\n                  teamAdminInvite: teamAdminInvite\n                });\n\n                var teamID = userObj.teamID;\n\n                _this.setState({\n                  teamID: teamID\n                });\n              });\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.snapshotToArray = function (snapshot) {\n      var retArr = [];\n      snapshot.forEach(function (childSnapshot) {\n        var item = childSnapshot.val();\n        item.key = childSnapshot.key;\n        retArr.push(item);\n      });\n      return retArr;\n    };\n\n    _this.ActivateAccount = function () {\n      _this.props.navigation.navigate('ActivateAccount');\n    };\n\n    _this.onSetupStatsApp = function () {\n      _this.props.navigation.navigate('SetupStatsApp');\n    };\n\n    _this.CreateATeam = function () {\n      _this.props.navigation.navigate('CreateATeam');\n    };\n\n    _this.createHeadAnalystAccount = function () {\n      _this.props.navigation.navigate('HeadTeamAnalystRegistration');\n    };\n\n    _this.createTeamAnalystAccount = function () {\n      _this.props.navigation.navigate('TeamAnalystRegistration');\n    };\n\n    _this.AddPlayers = function () {\n      _this.props.navigation.navigate('AddPlayers');\n    };\n\n    _this.ManageTeam = function () {\n      _this.props.navigation.navigate('ManageTeam');\n    };\n\n    _this.TeamProfile = function () {\n      _this.props.navigation.navigate('TeamProfile');\n    };\n\n    _this.PlayerProfile = function () {\n      _this.props.navigation.navigate('PlayerProfile');\n    };\n\n    _this.JoinATeam = function () {\n      _this.props.navigation.navigate('JoinATeam');\n    };\n\n    _this.state = {\n      UserID: '',\n      userType: '',\n      fullName: '',\n      teamID: '',\n      teamAdminInvite: '',\n      hasTACreated: 0,\n      teamCreated: 0,\n      listPlayers: [],\n      SportType: ''\n    };\n    return _this;\n  }\n\n  _createClass(HomeScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var _firebase$auth2 = firebase.auth(),\n          currentUser = _firebase$auth2.currentUser;\n\n      var uid = currentUser.uid;\n      firebase.database().ref('/users/' + uid).on('value', function (snapshot) {\n        var userObj = snapshot.val();\n        var userType = userObj.userType;\n\n        _this2.setState({\n          userType: userType\n        });\n\n        var fullName = userObj.fullName;\n\n        _this2.setState({\n          fullName: fullName\n        });\n\n        var teamAdminInvite = userObj.teamAdminInvite;\n\n        _this2.setState({\n          teamAdminInvite: teamAdminInvite\n        });\n\n        var teamID = userObj.teamID;\n\n        _this2.setState({\n          teamID: teamID\n        });\n\n        var teamCreated = userObj.teamCreated;\n\n        _this2.setState({\n          teamCreated: teamCreated\n        });\n\n        var hasTACreated = userObj.hasTACreated;\n\n        _this2.setState({\n          hasTACreated: hasTACreated\n        });\n\n        if (teamCreated == 1 || hasTACreated == 1) {\n          _this2.ObtainUserData();\n        } else if (hasTACreated == 0) {\n          var myUserId = firebase.auth().currentUser.uid;\n          var addTeamAdmin = firebase.database().ref('teams').child(teamID).child('teamAdmins');\n          var adminData = {\n            id: myUserId,\n            fullName: _this2.state.fullName,\n            teamID: teamID\n          };\n          addTeamAdmin.push(adminData);\n          var usersRef = firebase.database().ref('/users');\n          usersRef.child(myUserId).update({\n            'hasTACreated': 1\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var checkUserType = this.state.userType;\n      var checkTeamCreated = this.state.teamCreated;\n      var checkTACreated = this.state.hasTACreated;\n      var HomeNavigation;\n      var uiddd = this.state.UserID;\n\n      if (checkUserType == 'Player') {\n        HomeNavigation = React.createElement(View, {\n          style: stylesHome.container,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }\n        }, React.createElement(View, {\n          style: stylesHome.RowView,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 17\n          }\n        }, React.createElement(TouchableOpacity, {\n          style: stylesHome.button,\n          onPress: this.PlayerProfile,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 21\n          }\n        }, React.createElement(Text, {\n          style: stylesHome.buttonTitle,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 25\n          }\n        }, \"My Profile\"))), React.createElement(View, {\n          style: stylesHome.RowView,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 17\n          }\n        }, React.createElement(TouchableOpacity, {\n          style: stylesHome.button,\n          onPress: this.TeamProfile,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 21\n          }\n        }, React.createElement(Text, {\n          style: stylesHome.buttonTitle,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 25\n          }\n        }, \"My Team\"))));\n      } else if (checkUserType == 'HeadTeamAnalyst') {\n        if (checkTeamCreated == 1) {\n          HomeNavigation = React.createElement(View, {\n            style: stylesHome.container,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 17\n            }\n          }, React.createElement(View, {\n            style: stylesHome.RowView,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 21\n            }\n          }, React.createElement(TouchableOpacity, {\n            style: stylesHome.button,\n            onPress: this.ManageTeam,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 25\n            }\n          }, React.createElement(Text, {\n            style: stylesHome.buttonTitle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 29\n            }\n          }, \"Manage your Team\"))), React.createElement(View, {\n            style: stylesHome.RowView,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 21\n            }\n          }, React.createElement(Text, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 25\n            }\n          }, uiddd), React.createElement(TouchableOpacity, {\n            style: stylesHome.button,\n            onPress: this.AddPlayers,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 25\n            }\n          }, React.createElement(Text, {\n            style: stylesHome.buttonTitle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 29\n            }\n          }, \"Add Players to your team\"))), React.createElement(View, {\n            style: stylesHome.RowView,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 21\n            }\n          }, React.createElement(TouchableOpacity, {\n            style: stylesHome.button,\n            onPress: this.onSetupStatsApp,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 25\n            }\n          }, React.createElement(Text, {\n            style: stylesHome.buttonTitle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 29\n            }\n          }, \"Stats App\"))), React.createElement(View, {\n            style: stylesHome.RowView,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 21\n            }\n          }, React.createElement(TouchableOpacity, {\n            style: stylesHome.button,\n            onPress: this.TeamProfile,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 25\n            }\n          }, React.createElement(Text, {\n            style: stylesHome.buttonTitle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 29\n            }\n          }, \"My Team \"))));\n        } else {\n          HomeNavigation = React.createElement(View, {\n            style: stylesHome.container,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 17\n            }\n          }, React.createElement(View, {\n            style: stylesHome.RowView,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 21\n            }\n          }, React.createElement(TouchableOpacity, {\n            style: stylesHome.button,\n            onPress: this.CreateATeam,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 25\n            }\n          }, React.createElement(Text, {\n            style: stylesHome.buttonTitle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 29\n            }\n          }, \"Create a Team\"))));\n        }\n      } else if (checkUserType == 'TeamAnalyst') {\n        if (checkTACreated == 1) {\n          {}\n          HomeNavigation = React.createElement(View, {\n            style: stylesHome.container,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 17\n            }\n          }, React.createElement(View, {\n            style: stylesHome.RowView,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 21\n            }\n          }, React.createElement(TouchableOpacity, {\n            style: stylesHome.button,\n            onPress: this.onSetupStatsApp,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 25\n            }\n          }, React.createElement(Text, {\n            style: stylesHome.buttonTitle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 29\n            }\n          }, \"Setup Stats App\"))), React.createElement(View, {\n            style: stylesHome.RowView,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 21\n            }\n          }, React.createElement(TouchableOpacity, {\n            style: stylesHome.button,\n            onPress: this.TeamProfile,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 25\n            }\n          }, React.createElement(Text, {\n            style: stylesHome.buttonTitle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 29\n            }\n          }, \" My Team\"))), React.createElement(View, {\n            style: stylesHome.RowView,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 21\n            }\n          }, React.createElement(TouchableOpacity, {\n            style: stylesHome.button,\n            onPress: this.onSetupStatsApp,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 25\n            }\n          }, React.createElement(Text, {\n            style: stylesHome.buttonTitle,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 29\n            }\n          }, \"Stats App\"))));\n        }\n      } else if (checkUserType == 'CompanySuperUser') {\n        HomeNavigation = React.createElement(View, {\n          style: stylesHome.container,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 13\n          }\n        }, React.createElement(View, {\n          style: stylesHome.RowView,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 17\n          }\n        }, React.createElement(TouchableOpacity, {\n          style: stylesHome.button,\n          onPress: this.createHeadAnalystAccount,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 21\n          }\n        }, React.createElement(Text, {\n          style: stylesHome.buttonTitle,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 25\n          }\n        }, \"Create a Head Team Analyst\"))), React.createElement(View, {\n          style: stylesHome.RowView,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 17\n          }\n        }, React.createElement(TouchableOpacity, {\n          style: stylesHome.button,\n          onPress: this.createTeamAnalystAccount,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 21\n          }\n        }, React.createElement(Text, {\n          style: stylesHome.buttonTitle,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 25\n          }\n        }, \"Create a Team Analyst\"))));\n      }\n\n      return React.createElement(View, {\n        style: stylesHome.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 6\n        }\n      }, HomeNavigation);\n    }\n  }]);\n\n  return HomeScreen;\n}(Component);\n\nvar stylesHome = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    backgroundColor: '#252626',\n    width: '100%',\n    height: '100%',\n    justifyContent: \"center\"\n  },\n  input: {\n    height: 48,\n    borderRadius: 5,\n    overflow: 'hidden',\n    backgroundColor: 'white',\n    marginTop: 10,\n    marginBottom: 10,\n    marginLeft: 30,\n    marginRight: 30,\n    paddingLeft: 16\n  },\n  RowView: {\n    flex: 1,\n    alignItems: 'center',\n    flexDirection: 'row',\n    marginTop: 10,\n    paddingVertical: 4,\n    color: \"#20232a\",\n    textAlign: \"center\",\n    fontSize: 30\n  },\n  ColumnView: {\n    flex: 1,\n    alignItems: 'center',\n    flexDirection: 'column',\n    paddingLeft: 50,\n    marginTop: 110\n  },\n  button: {\n    backgroundColor: '#FF6D01',\n    marginLeft: 30,\n    marginRight: 30,\n    marginTop: 20,\n    height: 48,\n    borderRadius: 5,\n    alignItems: \"center\",\n    justifyContent: 'center',\n    width: '50%'\n  },\n  buttonTitle: {\n    color: 'white',\n    fontSize: 15\n  }\n});\nexport default HomeScreen;","map":{"version":3,"sources":["D:/StatsAppNative/MyApp/screens/HomeScreen/HomeScreen.js"],"names":["React","useEffect","useState","Component","firebase","screenWidth","Dimensions","get","width","screenHeight","height","HomeScreen","props","ObtainUserData","auth","currentUser","uid","myUserId","teamID","state","userType","database","ref","on","snapshot","userObj","val","setState","teamAdminInvite","snapshotToArray","retArr","forEach","childSnapshot","item","key","push","ActivateAccount","navigation","navigate","onSetupStatsApp","CreateATeam","createHeadAnalystAccount","createTeamAnalystAccount","AddPlayers","ManageTeam","TeamProfile","PlayerProfile","JoinATeam","UserID","fullName","hasTACreated","teamCreated","listPlayers","SportType","addTeamAdmin","child","adminData","id","usersRef","update","checkUserType","checkTeamCreated","checkTACreated","HomeNavigation","uiddd","stylesHome","container","RowView","button","buttonTitle","StyleSheet","create","flex","alignItems","backgroundColor","justifyContent","input","borderRadius","overflow","marginTop","marginBottom","marginLeft","marginRight","paddingLeft","flexDirection","paddingVertical","color","textAlign","fontSize","ColumnView"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, Component } from 'react'\r\nimport { Dimensions, Text, View ,StyleSheet,ScrollView, TouchableOpacity} from 'react-native'\r\n\r\n// import * as firebase from 'firebase/app';\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\n\r\n\r\n  \r\n\r\nconst screenWidth = Dimensions.get('window').width;\r\n\r\nconst screenHeight = Dimensions.get('window').height;\r\n\r\nclass HomeScreen extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            UserID: '',\r\n            userType: '',\r\n            fullName:'',\r\n            teamID:'',\r\n            teamAdminInvite:'',\r\n            hasTACreated:0,\r\n            teamCreated: 0, \r\n            listPlayers:[],\r\n            SportType: '',\r\n       \r\n            \r\n            };\r\n        }\r\n       \r\n    \r\n        componentDidMount(){\r\n\r\n            const { currentUser } = firebase.auth();\r\n            \r\n            //Check the user type of the AUTH user\r\n            const uid = currentUser.uid;\r\n           \r\n            firebase.database().ref('/users/' + uid).on('value', (snapshot) => {\r\n                const userObj = snapshot.val();\r\n    \r\n                let userType = userObj.userType;\r\n                this.setState({userType:userType});\r\n\r\n                let fullName = userObj.fullName;\r\n                this.setState({fullName:fullName});\r\n\r\n                let teamAdminInvite = userObj.teamAdminInvite;\r\n                this.setState({teamAdminInvite:teamAdminInvite});\r\n\r\n                let teamID = userObj.teamID;\r\n                this.setState({teamID:teamID});\r\n\r\n                let teamCreated = userObj.teamCreated;\r\n                this.setState({teamCreated:teamCreated});\r\n\r\n                let hasTACreated = userObj.hasTACreated;\r\n                this.setState({hasTACreated:hasTACreated});\r\n\r\n                \r\n            //Obtain user data\r\n            if(teamCreated == 1 || hasTACreated == 1){\r\n                \r\n                this.ObtainUserData();\r\n            }\r\n            else if(hasTACreated == 0)\r\n            {\r\n                \r\n                var myUserId = firebase.auth().currentUser.uid;\r\n\r\n                //Add the team Analyst to the Team Record\r\n                const addTeamAdmin = firebase.database().ref('teams').child(teamID).child('teamAdmins')\r\n            \r\n                    var adminData = {\r\n\r\n                        id: myUserId,\r\n                        fullName: this.state.fullName,\r\n                        teamID: teamID\r\n\r\n                    };\r\n\r\n                    addTeamAdmin.push(adminData);\r\n\r\n                    //Update user id to make it change hasTACreated to = 1\r\n                    const usersRef = firebase.database().ref('/users')\r\n                    usersRef.child(myUserId).update({'hasTACreated': 1})\r\n  \r\n            }\r\n            \r\n\r\n\r\n\r\n\r\n            });\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        \r\n          \r\n              \r\n        \r\n        \r\n            // if(userTypeState == 'TeamAnalyst') \r\n            // {\r\n            //     firebase.database().ref('/users/' + uid).on('value', (snapshot) => {\r\n            //         const userObj = snapshot.val();\r\n        \r\n            //         let userType = userObj.userType;\r\n            //         this.setState({userType:userType});\r\n    \r\n            //         let teamAdminInvite = userObj.teamAdminInvite;\r\n            //         this.setState({teamAdminInvite:teamAdminInvite});\r\n    \r\n            //         let teamID = userObj.teamID;\r\n            //         this.setState({teamID:teamID});\r\n            //     });\r\n\r\n\r\n            //     if(hasTACreated == 0)\r\n            //     {\r\n\r\n            //         var myUserId = firebase.auth().currentUser.uid;\r\n\r\n            //         //Add the team Analyst to the Team Record\r\n            //         const addTeamAdmin = firebase.database().ref('teams').child(teamID).child('teamAdmins')\r\n            \r\n            //             var adminData = {\r\n\r\n            //                 id: myUserId,\r\n            //                 fullName: this.state.fullName,\r\n            //                 teamID: teamID\r\n\r\n            //             };\r\n\r\n            //         addTeamAdmin.push(adminData);\r\n\r\n\r\n\r\n            //         //Update user id to make it change hasTACreated to = 1\r\n            //         const usersRef = firebase.database().ref('/users')\r\n            //         usersRef.child(myUserId).update({'hasTACreated': 1})\r\n  \r\n\r\n                    \r\n            //     }\r\n               \r\n\r\n            // }\r\n\r\n                   \r\n        }\r\n\r\n\r\n       \r\n      \r\n\r\n        ObtainUserData = async () => {\r\n            const { currentUser } = firebase.auth();\r\n            \r\n            //Check the user type of the AUTH user\r\n            const uid = currentUser.uid;\r\n\r\n            // -------------- GET/STORE Auth UID\r\n            var myUserId = firebase.auth().currentUser.uid;\r\n\r\n            var teamID = this.state.teamID;\r\n            var userType = this.state.userType;\r\n\r\n\r\n                   firebase.database().ref('/users/' + uid).on('value', (snapshot) => {\r\n                    const userObj = snapshot.val();\r\n        \r\n                    let userType = userObj.userType;\r\n                    this.setState({userType:userType});\r\n    \r\n                    let teamAdminInvite = userObj.teamAdminInvite;\r\n                    this.setState({teamAdminInvite:teamAdminInvite});\r\n    \r\n                    let teamID = userObj.teamID;\r\n                    this.setState({teamID:teamID});\r\n                });\r\n\r\n          \r\n\r\n        }\r\n            \r\n\r\n\r\n\r\n           \r\n        \r\n\r\n\r\n\r\n        snapshotToArray = snapshot => {\r\n            var retArr = [];\r\n            snapshot.forEach(childSnapshot => {\r\n                var item = childSnapshot.val();\r\n                item.key = childSnapshot.key;\r\n                retArr.push(item);\r\n            });\r\n            return retArr;\r\n        }\r\n        \r\n\r\n    ActivateAccount = () => {\r\n        this.props.navigation.navigate('ActivateAccount');\r\n    }\r\n\r\n\r\n    onSetupStatsApp = () => {\r\n        this.props.navigation.navigate('SetupStatsApp');\r\n    }\r\n\r\n    \r\n    CreateATeam = () => {\r\n        this.props.navigation.navigate('CreateATeam');\r\n    }\r\n\r\n    createHeadAnalystAccount = () => {\r\n        this.props.navigation.navigate('HeadTeamAnalystRegistration');\r\n    }\r\n\r\n    createTeamAnalystAccount = () => {\r\n        this.props.navigation.navigate('TeamAnalystRegistration');\r\n    }\r\n\r\n    AddPlayers = () => {\r\n        this.props.navigation.navigate('AddPlayers');\r\n    }\r\n\r\n    ManageTeam = () => {\r\n        this.props.navigation.navigate('ManageTeam');\r\n    }\r\n\r\n    TeamProfile = () => {\r\n        this.props.navigation.navigate('TeamProfile');\r\n    }\r\n\r\n    PlayerProfile = () => {\r\n        this.props.navigation.navigate('PlayerProfile');\r\n    }\r\n\r\n    JoinATeam = () => {\r\n        this.props.navigation.navigate('JoinATeam');\r\n    }\r\n\r\n\r\n \r\n\r\n\r\n        \r\n        \r\n    \r\n\r\n \r\nrender(){\r\n\r\n\r\n\r\n    //This is used to check userType and based on that the user will have a custom navigation\r\n    const checkUserType = this.state.userType;\r\n    const checkTeamCreated = this.state.teamCreated;\r\n    const checkTACreated = this.state.hasTACreated;\r\n    var HomeNavigation;\r\n    const uiddd = this.state.UserID;\r\n\r\n\r\n    if(checkUserType == 'Player')\r\n    {\r\n        HomeNavigation = (\r\n           \r\n            <View style={stylesHome.container}>\r\n                    \r\n                <View style={stylesHome.RowView}>\r\n                    <TouchableOpacity style={stylesHome.button} onPress={this.PlayerProfile}>\r\n                        <Text style={stylesHome.buttonTitle}>My Profile</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n\r\n                <View style={stylesHome.RowView}>\r\n                    <TouchableOpacity style={stylesHome.button} onPress={this.TeamProfile}>\r\n                        <Text style={stylesHome.buttonTitle}>My Team</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n\r\n            </View>\r\n        );\r\n    \r\n    }\r\n    else if(checkUserType == 'HeadTeamAnalyst')\r\n    {\r\n\r\n        //Check IF the HeadTeamAnalyst has already create a team\r\n            //IF True then Do not display \"CreateATeam\" , Replace with \"Add Players\"\r\n               //IF False then display CreateATeam\r\n        if(checkTeamCreated == 1)\r\n        {\r\n\r\n            HomeNavigation = (\r\n\r\n                <View style={stylesHome.container}>\r\n                    \r\n                    <View style={stylesHome.RowView}>\r\n                        <TouchableOpacity style={stylesHome.button} onPress={this.ManageTeam}>\r\n                            <Text style={stylesHome.buttonTitle}>Manage your Team</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n\r\n                    <View style={stylesHome.RowView}>\r\n                        <Text>{uiddd}</Text>\r\n\r\n                        <TouchableOpacity style={stylesHome.button} onPress={this.AddPlayers}>\r\n                            <Text style={stylesHome.buttonTitle}>Add Players to your team</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n\r\n\r\n                    <View style={stylesHome.RowView}>\r\n                        <TouchableOpacity style={stylesHome.button} onPress={this.onSetupStatsApp}>\r\n                            <Text style={stylesHome.buttonTitle}>Stats App</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n\r\n                    <View style={stylesHome.RowView}>\r\n                        <TouchableOpacity style={stylesHome.button} onPress={this.TeamProfile}>\r\n                            <Text style={stylesHome.buttonTitle}>My Team </Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n\r\n\r\n               \r\n\r\n                </View>\r\n\r\n            );\r\n        }\r\n        else\r\n        {\r\n            HomeNavigation = (\r\n                <View style={stylesHome.container}>\r\n                \r\n                    <View style={stylesHome.RowView}>\r\n                        <TouchableOpacity style={stylesHome.button} onPress={this.CreateATeam}>\r\n                            <Text style={stylesHome.buttonTitle}>Create a Team</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n         \r\n                </View>\r\n            );\r\n        }\r\n\r\n     \r\n    }\r\n    else if(checkUserType == 'TeamAnalyst')\r\n    {\r\n\r\n        // Check if TeamAdmin has been created in the team record\r\n        if(checkTACreated == 1)\r\n        {\r\n\r\n            {/* No Access to create a team or Add players  */}\r\n\r\n            // Statements will be inside these Files which will check for myUserID , if myUserID =! CreatedByUserID then we check the TeamAdmins records , if a match they will get access to these screens and functions\r\n            HomeNavigation = (\r\n\r\n                <View style={stylesHome.container}>\r\n                \r\n                    <View style={stylesHome.RowView}>\r\n                        <TouchableOpacity style={stylesHome.button} onPress={this.onSetupStatsApp}>\r\n                            <Text style={stylesHome.buttonTitle}>Setup Stats App</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n\r\n                    <View style={stylesHome.RowView}>\r\n                        <TouchableOpacity style={stylesHome.button} onPress={this.TeamProfile}>\r\n                            <Text style={stylesHome.buttonTitle}> My Team</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n\r\n                    <View style={stylesHome.RowView}>\r\n                        <TouchableOpacity style={stylesHome.button} onPress={this.onSetupStatsApp}>\r\n                            <Text style={stylesHome.buttonTitle}>Stats App</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n\r\n\r\n                </View>\r\n\r\n            );\r\n\r\n        }\r\n    }\r\n    else if(checkUserType == 'CompanySuperUser')\r\n    {\r\n        HomeNavigation = (\r\n            <View style={stylesHome.container}>\r\n\r\n\r\n               \r\n                <View style={stylesHome.RowView}>\r\n                    <TouchableOpacity style={stylesHome.button} onPress={this.createHeadAnalystAccount}>\r\n                        <Text style={stylesHome.buttonTitle}>Create a Head Team Analyst</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n\r\n\r\n                \r\n                <View style={stylesHome.RowView}>\r\n                    <TouchableOpacity style={stylesHome.button} onPress={this.createTeamAnalystAccount}>\r\n                        <Text style={stylesHome.buttonTitle}>Create a Team Analyst</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n                    {/* No Access to create a team or Add players  */}\r\n            </View>\r\n        );\r\n    }\r\n\r\n\r\n\r\n    return (\r\n\r\n\r\n     <View style={stylesHome.container}> \r\n             {/* Navigation UserType Validation */}\r\n             {HomeNavigation}\r\n\r\n           \r\n    </View>\r\n               \r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst stylesHome = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        backgroundColor: '#252626',\r\n        width:'100%',\r\n        height:'100%',\r\n        justifyContent: \"center\"\r\n\r\n    },\r\n \r\n   \r\n    input: {\r\n        height: 48,\r\n        borderRadius: 5,\r\n        overflow: 'hidden',\r\n        backgroundColor: 'white',\r\n        marginTop: 10,\r\n        marginBottom: 10,\r\n        marginLeft: 30,\r\n        marginRight: 30,\r\n        paddingLeft: 16\r\n    },\r\n\r\n    \r\n    RowView: {\r\n        flex: 1,\r\n        \r\n        alignItems: 'center',\r\n        flexDirection: 'row',\r\n        marginTop: 10,\r\n        paddingVertical: 4,\r\n\r\n        color: \"#20232a\",\r\n        textAlign: \"center\",\r\n        fontSize: 30,\r\n \r\n    },\r\n    ColumnView: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        flexDirection: 'column',  \r\n        paddingLeft: 50, \r\n        marginTop:110,\r\n    \r\n    },\r\n\r\n    button: {\r\n        backgroundColor: '#FF6D01',\r\n        marginLeft: 30,\r\n        marginRight: 30,\r\n        marginTop: 20,\r\n        height: 48,\r\n        borderRadius: 5,\r\n        alignItems: \"center\",\r\n        justifyContent: 'center',\r\n        width: '50%'\r\n    },\r\n    buttonTitle: {\r\n        color: 'white',\r\n        fontSize:15,\r\n       \r\n    },\r\n\r\n});\r\n\r\nexport default HomeScreen;"]},"metadata":{},"sourceType":"module"}