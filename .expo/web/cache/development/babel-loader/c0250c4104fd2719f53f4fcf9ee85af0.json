{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { AlphabetComponent, ListItemComponent, SearchComponent, ScrollToTopComponent, SelectBoxComponent } from \"./\";\nimport { ModalStyles, CommonStyle } from \"../Assets/Styles\";\nimport { generateAlphabet, getFilteredData, getIndex } from \"../Helpers\";\nexport var ModalComponent = function (_React$PureComponent) {\n  _inherits(ModalComponent, _React$PureComponent);\n\n  var _super = _createSuper(ModalComponent);\n\n  function ModalComponent(props) {\n    var _this;\n\n    _classCallCheck(this, ModalComponent);\n\n    _this = _super.call(this, props);\n    _this.flatListRef = null;\n    _this.numToRender = 20;\n    _this.state = {\n      modalVisible: false,\n      searchText: '',\n      stickyBottomButton: false,\n      selectedAlpha: null,\n      selectedObject: {}\n    };\n    _this._onViewableItemsChanged = _this._onViewableItemsChanged.bind(_assertThisInitialized(_this));\n    _this.viewabilityConfig = {\n      minimumViewTime: 500,\n      waitForInteraction: true,\n      viewAreaCoveragePercentThreshold: 95\n    };\n    return _this;\n  }\n\n  _createClass(ModalComponent, [{\n    key: \"_clearComponent\",\n    value: function _clearComponent() {\n      this.setState({\n        stickyBottomButton: false,\n        searchText: '',\n        selectedAlpha: null\n      });\n    }\n  }, {\n    key: \"clearComponent\",\n    value: function clearComponent() {\n      this._clearComponent();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n          autoGenerateAlphabeticalIndex = _this$props.autoGenerateAlphabeticalIndex,\n          alphabeticalIndexChars = _this$props.alphabeticalIndexChars,\n          items = _this$props.items,\n          sortingLanguage = _this$props.sortingLanguage;\n\n      if (autoGenerateAlphabeticalIndex) {\n        this.setState({\n          alphabeticalIndexChars: generateAlphabet(items, sortingLanguage)\n        });\n      } else if (alphabeticalIndexChars) {\n        this.setState({\n          alphabeticalIndexChars: alphabeticalIndexChars\n        });\n      }\n    }\n  }, {\n    key: \"_openModal\",\n    value: function _openModal() {\n      var _this$props2 = this.props,\n          items = _this$props2.items,\n          autoGenerateAlphabeticalIndex = _this$props2.autoGenerateAlphabeticalIndex,\n          disabled = _this$props2.disabled,\n          sortingLanguage = _this$props2.sortingLanguage;\n\n      if (autoGenerateAlphabeticalIndex) {\n        this.setState({\n          alphabeticalIndexChars: generateAlphabet(items, sortingLanguage)\n        });\n      }\n\n      if (items.length > 0 && !disabled) {\n        this.setState({\n          modalVisible: true\n        });\n      }\n    }\n  }, {\n    key: \"openModal\",\n    value: function openModal() {\n      this._openModal();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props3 = this.props,\n          autoSort = _this$props3.autoSort,\n          modalAnimationType = _this$props3.modalAnimationType,\n          onClosed = _this$props3.onClosed,\n          showAlphabeticalIndex = _this$props3.showAlphabeticalIndex,\n          searchInputTextColor = _this$props3.searchInputTextColor,\n          keyExtractor = _this$props3.keyExtractor,\n          showToTopButton = _this$props3.showToTopButton,\n          onEndReached = _this$props3.onEndReached,\n          removeClippedSubviews = _this$props3.removeClippedSubviews,\n          FlatListProps = _this$props3.FlatListProps,\n          selectPlaceholderText = _this$props3.selectPlaceholderText,\n          searchPlaceholderText = _this$props3.searchPlaceholderText,\n          SearchInputProps = _this$props3.SearchInputProps,\n          selected = _this$props3.selected,\n          disabled = _this$props3.disabled,\n          items = _this$props3.items,\n          requireSelection = _this$props3.requireSelection,\n          renderSelectView = _this$props3.renderSelectView,\n          ModalProps = _this$props3.ModalProps,\n          backButtonDisabled = _this$props3.backButtonDisabled,\n          renderSearch = _this$props3.renderSearch;\n      var _this$state = this.state,\n          modalVisible = _this$state.modalVisible,\n          alphabeticalIndexChars = _this$state.alphabeticalIndexChars,\n          stickyBottomButton = _this$state.stickyBottomButton,\n          selectedAlpha = _this$state.selectedAlpha,\n          selectedObject = _this$state.selectedObject,\n          searchText = _this$state.searchText;\n      return React.createElement(React.Fragment, null, React.createElement(SelectBoxComponent, {\n        renderSelectView: renderSelectView,\n        items: items,\n        disabled: disabled,\n        selectedObject: selectedObject,\n        chooseText: selected && selected.Name ? selected.Name : selectPlaceholderText,\n        openModal: this.openModal.bind(this)\n      }), React.createElement(Modal, _extends({\n        animationType: modalAnimationType,\n        visible: modalVisible,\n        onRequestClose: function onRequestClose() {\n          return onClosed;\n        }\n      }, ModalProps), React.createElement(SafeAreaView, {\n        style: ModalStyles.container\n      }, renderSearch ? renderSearch(this.onClose.bind(this), this.onBackRequest.bind(this)) : React.createElement(SearchComponent, _extends({\n        searchText: searchPlaceholderText,\n        placeholderTextColor: searchInputTextColor,\n        onClose: this.onClose.bind(this),\n        onBackRequest: this.onBackRequest.bind(this),\n        forceSelect: requireSelection,\n        setText: function setText(text) {\n          return _this2.setText(text);\n        },\n        backButtonDisabled: backButtonDisabled\n      }, SearchInputProps)), React.createElement(KeyboardAvoidingView, {\n        style: ModalStyles.keyboardContainer,\n        behavior: Platform.OS === 'ios' ? 'padding' : null,\n        enabled: true\n      }, React.createElement(View, {\n        style: ModalStyles.listArea\n      }, React.createElement(FlatList, _extends({\n        ref: function ref(_ref) {\n          return _this2.flatListRef = _ref;\n        },\n        keyExtractor: keyExtractor ? keyExtractor : function (item, index) {\n          return index.toString();\n        },\n        data: getFilteredData(items, autoSort, searchText),\n        renderItem: function renderItem(_ref2) {\n          var item = _ref2.item,\n              index = _ref2.index;\n          return _this2.renderItem(item, index);\n        },\n        onScroll: showToTopButton && this.onScrolling.bind(this),\n        initialNumToRender: this.numToRender,\n        keyboardShouldPersistTaps: 'always',\n        keyboardDismissMode: 'interactive',\n        onEndReached: onEndReached,\n        maxToRenderPerBatch: 20,\n        legacyImplementation: false,\n        updateCellsBatchingPeriod: 50,\n        removeClippedSubviews: removeClippedSubviews,\n        viewabilityConfig: this.viewabilityConfig,\n        getItemLayout: function getItemLayout(_, index) {\n          return {\n            length: CommonStyle.BTN_HEIGHT,\n            offset: CommonStyle.BTN_HEIGHT * index,\n            index: index\n          };\n        },\n        onViewableItemsChanged: this._onViewableItemsChanged\n      }, FlatListProps)), React.createElement(AlphabetComponent, {\n        showAlphabeticalIndex: showAlphabeticalIndex,\n        setAlphabet: function setAlphabet(alphabet) {\n          return _this2.setAlphabet(alphabet);\n        },\n        alphabets: alphabeticalIndexChars,\n        selectedAlpha: selectedAlpha\n      }))), React.createElement(ScrollToTopComponent, {\n        goToUp: this.scrollToUp.bind(this),\n        stickyBottomButton: stickyBottomButton\n      }))));\n    }\n  }, {\n    key: \"_onViewableItemsChanged\",\n    value: function _onViewableItemsChanged(_ref3) {\n      var viewableItems = _ref3.viewableItems;\n\n      if (viewableItems && viewableItems[0]) {\n        var firstLetter = viewableItems[0].item.Name.charAt(0);\n        this.setState({\n          selectedAlpha: firstLetter\n        });\n      }\n    }\n  }, {\n    key: \"_onClose\",\n    value: function _onClose() {\n      var _this$props4 = this.props,\n          onClosed = _this$props4.onClosed,\n          onSelected = _this$props4.onSelected,\n          requireSelection = _this$props4.requireSelection,\n          selected = _this$props4.selected;\n      var _this$state2 = this.state,\n          modalVisible = _this$state2.modalVisible,\n          selectedObject = _this$state2.selectedObject;\n      if (requireSelection && selectedObject && ![selectedObject.Id] && selected && ![selected.Id]) return;\n\n      if (!requireSelection) {\n        onSelected({});\n      }\n\n      this.setState({\n        selectedObject: {},\n        modalVisible: !modalVisible\n      });\n      this.clearComponent();\n\n      if (onClosed) {\n        onClosed();\n      }\n    }\n  }, {\n    key: \"onClose\",\n    value: function onClose() {\n      this._onClose();\n    }\n  }, {\n    key: \"_onBackRequest\",\n    value: function _onBackRequest() {\n      var onBackButtonPressed = this.props.onBackButtonPressed;\n      var modalVisible = this.state.modalVisible;\n      this.setState({\n        modalVisible: !modalVisible\n      });\n      this.clearComponent();\n\n      if (onBackButtonPressed) {\n        onBackButtonPressed();\n      }\n    }\n  }, {\n    key: \"onBackRequest\",\n    value: function onBackRequest() {\n      this._onBackRequest();\n    }\n  }, {\n    key: \"_scrollToUp\",\n    value: function _scrollToUp() {\n      var _this3 = this;\n\n      if (this.flatListRef) {\n        this.setState({\n          selectedAlpha: null\n        }, function () {\n          _this3.flatListRef.scrollToOffset({\n            animated: true,\n            offset: 0\n          });\n        });\n      }\n    }\n  }, {\n    key: \"scrollToUp\",\n    value: function scrollToUp() {\n      this._scrollToUp();\n    }\n  }, {\n    key: \"_onScrolling\",\n    value: function _onScrolling(e) {\n      var contentOffset = e.nativeEvent.contentOffset;\n\n      if (contentOffset.y > 100) {\n        this.setState({\n          stickyBottomButton: true\n        });\n      } else {\n        this.setState({\n          stickyBottomButton: false\n        });\n      }\n    }\n  }, {\n    key: \"onScrolling\",\n    value: function onScrolling(e) {\n      this._onScrolling(e);\n    }\n  }, {\n    key: \"_renderItem\",\n    value: function _renderItem(item, index) {\n      var _this4 = this;\n\n      var _this$props5 = this.props,\n          selected = _this$props5.selected,\n          renderListItem = _this$props5.renderListItem;\n      return renderListItem && React.createElement(TouchableOpacity, {\n        key: index.toString(),\n        onPress: function onPress() {\n          return _this4.onSelectMethod(item);\n        }\n      }, renderListItem(selected, item)) || React.createElement(ListItemComponent, {\n        key: index.toString(),\n        defaultSelected: selected,\n        list: item,\n        onSelectMethod: this.onSelectMethod.bind(this)\n      });\n    }\n  }, {\n    key: \"renderItem\",\n    value: function renderItem(item, index) {\n      return this._renderItem(item, index);\n    }\n  }, {\n    key: \"_setText\",\n    value: function _setText(text) {\n      this.setState({\n        searchText: text\n      });\n    }\n  }, {\n    key: \"setText\",\n    value: function setText(text) {\n      this._setText(text);\n    }\n  }, {\n    key: \"_onSelectMethod\",\n    value: function _onSelectMethod(key) {\n      var onSelected = this.props.onSelected;\n      this.setState({\n        modalVisible: false,\n        selectedObject: key\n      });\n      this.clearComponent();\n\n      if (key && ![key.Id]) {\n        return onSelected({});\n      }\n\n      return onSelected(key);\n    }\n  }, {\n    key: \"onSelectMethod\",\n    value: function onSelectMethod(key) {\n      return this._onSelectMethod(key);\n    }\n  }, {\n    key: \"_setAlphabet\",\n    value: function _setAlphabet(alphabet) {\n      var _this5 = this;\n\n      this.setState({\n        selectedAlpha: alphabet\n      }, function () {\n        var list = getFilteredData(_this5.props.items, _this5.props.autoSort, _this5.state.searchText);\n        var findIndex = getIndex(alphabet, _this5.props.items, _this5.props.autoSort, _this5.state.searchText);\n\n        if (findIndex >= 0 && findIndex <= list.length - _this5.numToRender / 2) {\n          setTimeout(function () {\n            _this5.flatListRef.scrollToIndex({\n              animated: true,\n              index: findIndex,\n              viewPosition: 0\n            });\n          }, 100);\n        } else {\n          _this5.flatListRef.scrollToEnd();\n        }\n      });\n    }\n  }, {\n    key: \"setAlphabet\",\n    value: function setAlphabet(alphabet) {\n      this._setAlphabet(alphabet);\n    }\n  }]);\n\n  return ModalComponent;\n}(React.PureComponent);\nModalComponent.defaultProps = {\n  showToTopButton: true,\n  modalAnimationType: 'slide',\n  showAlphabeticalIndex: false,\n  searchInputTextColor: '#252525',\n  autoGenerateAlphabeticalIndex: false,\n  sortingLanguage: 'tr',\n  removeClippedSubviews: false,\n  selectPlaceholderText: 'Choose one...',\n  searchPlaceholderText: 'Search...',\n  autoSort: false,\n  items: [],\n  disabled: false,\n  requireSelection: false\n};","map":{"version":3,"sources":["../../src/Components/Modal.tsx"],"names":[],"mappings":";;;;;;;;;;;;AACA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;;;;;;;;AAGA,SAAS,iBAAT,EAA4B,iBAA5B,EAA+C,eAA/C,EAAgE,oBAAhE,EAAsF,kBAAtF;AAEA,SAAS,WAAT,EAAsB,WAAtB;AACA,SAAS,gBAAT,EAA2B,eAA3B,EAA4C,QAA5C;AACA,WAAa,cAAb;AAAA;;AAAA;;AAgBC,0BAAY,KAAZ,EAA8B;AAAA;;AAAA;;AAC7B,8BAAM,KAAN;AAfO,UAAA,WAAA,GAAc,IAAd;AACA,UAAA,WAAA,GAAsB,EAAtB;AAED,UAAA,KAAA,GAAqB;AAC3B,MAAA,YAAY,EAAE,KADa;AAE3B,MAAA,UAAU,EAAE,EAFe;AAG3B,MAAA,kBAAkB,EAAE,KAHO;AAI3B,MAAA,aAAa,EAAE,IAJY;AAK3B,MAAA,cAAc,EAAE;AALW,KAArB;AAaN,UAAK,uBAAL,GAA+B,MAAK,uBAAL,CAA6B,IAA7B,+BAA/B;AACA,UAAK,iBAAL,GAAyB;AACxB,MAAA,eAAe,EAAE,GADO;AAExB,MAAA,kBAAkB,EAAE,IAFI;AAGxB,MAAA,gCAAgC,EAAE;AAHV,KAAzB;AAH6B;AAQ7B;;AAxBF;AAAA;AAAA,WAyBS,2BAAe;AACtB,WAAK,QAAL,CAAc;AACb,QAAA,kBAAkB,EAAE,KADP;AAEb,QAAA,UAAU,EAAE,EAFC;AAGb,QAAA,aAAa,EAAE;AAHF,OAAd;AAKA;AA/BF;AAAA;AAAA,WAiCQ,0BAAc;AACpB,WAAK,eAAL;AACA;AAnCF;AAAA;AAAA,WAqCQ,6BAAiB;AAAA,wBACmE,KAAK,KADxE;AAAA,UACf,6BADe,eACf,6BADe;AAAA,UACgB,sBADhB,eACgB,sBADhB;AAAA,UACwC,KADxC,eACwC,KADxC;AAAA,UAC+C,eAD/C,eAC+C,eAD/C;;AAEvB,UAAI,6BAAJ,EAAmC;AAClC,aAAK,QAAL,CAAc;AAAE,UAAA,sBAAsB,EAAE,gBAAgB,CAAC,KAAD,EAAQ,eAAR;AAA1C,SAAd;AACA,OAFD,MAEO,IAAI,sBAAJ,EAA4B;AAClC,aAAK,QAAL,CAAc;AACb,UAAA,sBAAsB,EAAtB;AADa,SAAd;AAGA;AACD;AA9CF;AAAA;AAAA,WAgDS,sBAAU;AAAA,yBAC2D,KAAK,KADhE;AAAA,UACT,KADS,gBACT,KADS;AAAA,UACF,6BADE,gBACF,6BADE;AAAA,UAC6B,QAD7B,gBAC6B,QAD7B;AAAA,UACuC,eADvC,gBACuC,eADvC;;AAEjB,UAAI,6BAAJ,EAAmC;AAClC,aAAK,QAAL,CAAc;AAAE,UAAA,sBAAsB,EAAE,gBAAgB,CAAC,KAAD,EAAQ,eAAR;AAA1C,SAAd;AACA;;AAED,UAAI,KAAK,CAAC,MAAN,GAAe,CAAf,IAAoB,CAAC,QAAzB,EAAmC;AAClC,aAAK,QAAL,CAAc;AACb,UAAA,YAAY,EAAE;AADD,SAAd;AAGA;AACD;AA3DF;AAAA;AAAA,WA6DQ,qBAAS;AACf,WAAK,UAAL;AACA;AA/DF;AAAA;AAAA,WAiEQ,kBAAM;AAAA;;AAAA,yBACoV,KAAK,KADzV;AAAA,UACJ,QADI,gBACJ,QADI;AAAA,UACM,kBADN,gBACM,kBADN;AAAA,UAC0B,QAD1B,gBAC0B,QAD1B;AAAA,UACoC,qBADpC,gBACoC,qBADpC;AAAA,UAC2D,oBAD3D,gBAC2D,oBAD3D;AAAA,UACiF,YADjF,gBACiF,YADjF;AAAA,UAC+F,eAD/F,gBAC+F,eAD/F;AAAA,UACgH,YADhH,gBACgH,YADhH;AAAA,UAC8H,qBAD9H,gBAC8H,qBAD9H;AAAA,UACqJ,aADrJ,gBACqJ,aADrJ;AAAA,UACoK,qBADpK,gBACoK,qBADpK;AAAA,UAC2L,qBAD3L,gBAC2L,qBAD3L;AAAA,UACkN,gBADlN,gBACkN,gBADlN;AAAA,UACoO,QADpO,gBACoO,QADpO;AAAA,UAC8O,QAD9O,gBAC8O,QAD9O;AAAA,UACwP,KADxP,gBACwP,KADxP;AAAA,UAC+P,gBAD/P,gBAC+P,gBAD/P;AAAA,UACiR,gBADjR,gBACiR,gBADjR;AAAA,UACmS,UADnS,gBACmS,UADnS;AAAA,UAC+S,kBAD/S,gBAC+S,kBAD/S;AAAA,UACmU,YADnU,gBACmU,YADnU;AAAA,wBAGoG,KAAK,KAHzG;AAAA,UAGJ,YAHI,eAGJ,YAHI;AAAA,UAGU,sBAHV,eAGU,sBAHV;AAAA,UAGkC,kBAHlC,eAGkC,kBAHlC;AAAA,UAGsD,aAHtD,eAGsD,aAHtD;AAAA,UAGqE,cAHrE,eAGqE,cAHrE;AAAA,UAGqF,UAHrF,eAGqF,UAHrF;AAKZ,aACC,KAAA,CAAA,aAAA,CAAC,KAAK,CAAC,QAAP,EAAe,IAAf,EACC,KAAA,CAAA,aAAA,CAAC,kBAAD,EAAmB;AAClB,QAAA,gBAAgB,EAAE,gBADA;AAElB,QAAA,KAAK,EAAE,KAFW;AAGlB,QAAA,QAAQ,EAAE,QAHQ;AAIlB,QAAA,cAAc,EAAE,cAJE;AAKlB,QAAA,UAAU,EAAG,QAAQ,IAAI,QAAQ,CAAC,IAAtB,GAA8B,QAAQ,CAAC,IAAvC,GAA8C,qBALxC;AAMlB,QAAA,SAAS,EAAE,KAAK,SAAL,CAAe,IAAf,CAAoB,IAApB;AANO,OAAnB,CADD,EASC,KAAA,CAAA,aAAA,CAAC,KAAD,EAAM,SAAA;AACL,QAAA,aAAa,EAAE,kBADV;AAEL,QAAA,OAAO,EAAE,YAFJ;AAGL,QAAA,cAAc,EAAE;AAAA,iBAAM,QAAN;AAAA;AAHX,OAAA,EAID,UAJC,CAAN,EAMC,KAAA,CAAA,aAAA,CAAC,YAAD,EAAa;AAAC,QAAA,KAAK,EAAE,WAAW,CAAC;AAApB,OAAb,EAEE,YAAY,GAAG,YAAY,CACzB,KAAK,OAAL,CAAa,IAAb,CAAkB,IAAlB,CADyB,EAEzB,KAAK,aAAL,CAAmB,IAAnB,CAAwB,IAAxB,CAFyB,CAAf,GAIX,KAAA,CAAA,aAAA,CAAC,eAAD,EAAgB,SAAA;AACf,QAAA,UAAU,EAAE,qBADG;AAEf,QAAA,oBAAoB,EAAE,oBAFP;AAGf,QAAA,OAAO,EAAE,KAAK,OAAL,CAAa,IAAb,CAAkB,IAAlB,CAHM;AAIf,QAAA,aAAa,EAAE,KAAK,aAAL,CAAmB,IAAnB,CAAwB,IAAxB,CAJA;AAKf,QAAA,WAAW,EAAE,gBALE;AAMf,QAAA,OAAO,EAAE,iBAAC,IAAD;AAAA,iBAAkB,MAAI,CAAC,OAAL,CAAa,IAAb,CAAlB;AAAA,SANM;AAOf,QAAA,kBAAkB,EAAE;AAPL,OAAA,EAQX,gBARW,CAAhB,CANH,EAkBC,KAAA,CAAA,aAAA,CAAC,oBAAD,EAAqB;AAAC,QAAA,KAAK,EAAE,WAAW,CAAC,iBAApB;AACpB,QAAA,QAAQ,EAAE,QAAQ,CAAC,EAAT,KAAgB,KAAhB,GAAwB,SAAxB,GAAoC,IAD1B;AAEpB,QAAA,OAAO,EAAA;AAFa,OAArB,EAGC,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK;AAAC,QAAA,KAAK,EAAE,WAAW,CAAC;AAApB,OAAL,EACC,KAAA,CAAA,aAAA,CAAC,QAAD,EAAS,SAAA;AACR,QAAA,GAAG,EAAE,aAAC,IAAD;AAAA,iBAAS,MAAI,CAAC,WAAL,GAAmB,IAA5B;AAAA,SADG;AAER,QAAA,YAAY,EAAE,YAAY,GAAG,YAAH,GAAkB,UAAC,IAAD,EAAO,KAAP;AAAA,iBAAiB,KAAK,CAAC,QAAN,EAAjB;AAAA,SAFpC;AAGR,QAAA,IAAI,EAAE,eAAe,CAAC,KAAD,EAAQ,QAAR,EAAkB,UAAlB,CAHb;AAIR,QAAA,UAAU,EAAE;AAAA,cAAG,IAAH,SAAG,IAAH;AAAA,cAAS,KAAT,SAAS,KAAT;AAAA,iBAAqB,MAAI,CAAC,UAAL,CAAgB,IAAhB,EAAsB,KAAtB,CAArB;AAAA,SAJJ;AAKR,QAAA,QAAQ,EAAE,eAAe,IAAI,KAAK,WAAL,CAAiB,IAAjB,CAAsB,IAAtB,CALrB;AAMR,QAAA,kBAAkB,EAAE,KAAK,WANjB;AAOR,QAAA,yBAAyB,EAAE,QAPnB;AAQR,QAAA,mBAAmB,EAAE,aARb;AASR,QAAA,YAAY,EAAE,YATN;AAUR,QAAA,mBAAmB,EAAE,EAVb;AAWR,QAAA,oBAAoB,EAAE,KAXd;AAYR,QAAA,yBAAyB,EAAE,EAZnB;AAaR,QAAA,qBAAqB,EAAE,qBAbf;AAcR,QAAA,iBAAiB,EAAE,KAAK,iBAdhB;AAeR,QAAA,aAAa,EAAE,uBAAC,CAAD,EAAI,KAAJ;AAAA,iBAAe;AAC7B,YAAA,MAAM,EAAE,WAAW,CAAC,UADS;AAE7B,YAAA,MAAM,EAAE,WAAW,CAAC,UAAZ,GAAyB,KAFJ;AAG7B,YAAA,KAAK,EAAL;AAH6B,WAAf;AAAA,SAfP;AAoBR,QAAA,sBAAsB,EAAE,KAAK;AApBrB,OAAA,EAqBJ,aArBI,CAAT,CADD,EAwBC,KAAA,CAAA,aAAA,CAAC,iBAAD,EAAkB;AACjB,QAAA,qBAAqB,EAAE,qBADN;AAEjB,QAAA,WAAW,EAAE,qBAAC,QAAD;AAAA,iBAAsB,MAAI,CAAC,WAAL,CAAiB,QAAjB,CAAtB;AAAA,SAFI;AAGjB,QAAA,SAAS,EAAE,sBAHM;AAIjB,QAAA,aAAa,EAAE;AAJE,OAAlB,CAxBD,CAHD,CAlBD,EAqDC,KAAA,CAAA,aAAA,CAAC,oBAAD,EAAqB;AAAC,QAAA,MAAM,EAAE,KAAK,UAAL,CAAgB,IAAhB,CAAqB,IAArB,CAAT;AAAqC,QAAA,kBAAkB,EAAE;AAAzD,OAArB,CArDD,CAND,CATD,CADD;AA0EA;AAhJF;AAAA;AAAA,WAkJS,wCAAyC;AAAA,UAAf,aAAe,SAAf,aAAe;;AAChD,UAAI,aAAa,IAAI,aAAa,CAAC,CAAD,CAAlC,EAAuC;AACtC,YAAM,WAAW,GAAG,aAAa,CAAC,CAAD,CAAb,CAAiB,IAAjB,CAAsB,IAAtB,CAA2B,MAA3B,CAAkC,CAAlC,CAApB;AACA,aAAK,QAAL,CAAc;AACb,UAAA,aAAa,EAAE;AADF,SAAd;AAGA;AACD;AAzJF;AAAA;AAAA,WA2JS,oBAAQ;AAAA,yBAC8C,KAAK,KADnD;AAAA,UACP,QADO,gBACP,QADO;AAAA,UACG,UADH,gBACG,UADH;AAAA,UACe,gBADf,gBACe,gBADf;AAAA,UACiC,QADjC,gBACiC,QADjC;AAAA,yBAE0B,KAAK,KAF/B;AAAA,UAEP,YAFO,gBAEP,YAFO;AAAA,UAEO,cAFP,gBAEO,cAFP;AAIf,UAAI,gBAAgB,IAAK,cAAc,IAAI,CAAC,CAAC,cAAc,CAAC,EAAhB,CAAxC,IAAiE,QAAQ,IAAI,CAAC,CAAC,QAAQ,CAAC,EAAV,CAAlF,EAAkG;;AAElG,UAAI,CAAC,gBAAL,EAAuB;AACtB,QAAA,UAAU,CAAC,EAAD,CAAV;AACA;;AAED,WAAK,QAAL,CAAc;AACb,QAAA,cAAc,EAAE,EADH;AAEb,QAAA,YAAY,EAAE,CAAC;AAFF,OAAd;AAIA,WAAK,cAAL;;AACA,UAAI,QAAJ,EAAc;AACb,QAAA,QAAQ;AACR;AACD;AA7KF;AAAA;AAAA,WA+KQ,mBAAO;AACb,WAAK,QAAL;AACA;AAjLF;AAAA;AAAA,WAmLS,0BAAc;AAAA,UACb,mBADa,GACW,KAAK,KADhB,CACb,mBADa;AAAA,UAEb,YAFa,GAEI,KAAK,KAFT,CAEb,YAFa;AAGrB,WAAK,QAAL,CAAc;AACb,QAAA,YAAY,EAAE,CAAC;AADF,OAAd;AAIA,WAAK,cAAL;;AACA,UAAI,mBAAJ,EAAyB;AACxB,QAAA,mBAAmB;AACnB;AACD;AA9LF;AAAA;AAAA,WAgMQ,yBAAa;AACnB,WAAK,cAAL;AACA;AAlMF;AAAA;AAAA,WAoMS,uBAAW;AAAA;;AAClB,UAAI,KAAK,WAAT,EAAsB;AACrB,aAAK,QAAL,CAAc;AACb,UAAA,aAAa,EAAE;AADF,SAAd,EAEG,YAAK;AACP,UAAA,MAAI,CAAC,WAAL,CAAiB,cAAjB,CAAgC;AAAE,YAAA,QAAQ,EAAE,IAAZ;AAAkB,YAAA,MAAM,EAAE;AAA1B,WAAhC;AACA,SAJD;AAKA;AACD;AA5MF;AAAA;AAAA,WA8MQ,sBAAU;AAChB,WAAK,WAAL;AACA;AAhNF;AAAA;AAAA,WAkNS,sBAAa,CAAb,EAAuD;AAAA,UACtD,aADsD,GACpC,CAAC,CAAC,WADkC,CACtD,aADsD;;AAG9D,UAAI,aAAa,CAAC,CAAd,GAAkB,GAAtB,EAA2B;AAC1B,aAAK,QAAL,CAAc;AACb,UAAA,kBAAkB,EAAE;AADP,SAAd;AAGA,OAJD,MAIO;AACN,aAAK,QAAL,CAAc;AACb,UAAA,kBAAkB,EAAE;AADP,SAAd;AAGA;AACD;AA9NF;AAAA;AAAA,WAgOQ,qBAAY,CAAZ,EAAsD;AAC5D,WAAK,YAAL,CAAkB,CAAlB;AACA;AAlOF;AAAA;AAAA,WAoOS,qBAAY,IAAZ,EAAmC,KAAnC,EAAgD;AAAA;;AAAA,yBAClB,KAAK,KADa;AAAA,UAC/C,QAD+C,gBAC/C,QAD+C;AAAA,UACrC,cADqC,gBACrC,cADqC;AAGvD,aACE,cAAc,IACd,KAAA,CAAA,aAAA,CAAC,gBAAD,EAAiB;AAChB,QAAA,GAAG,EAAE,KAAK,CAAC,QAAN,EADW;AAEhB,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAAC,cAAL,CAAoB,IAApB,CAAN;AAAA;AAFO,OAAjB,EAIE,cAAc,CAAC,QAAD,EAAW,IAAX,CAJhB,CADD,IAQA,KAAA,CAAA,aAAA,CAAC,iBAAD,EAAkB;AACjB,QAAA,GAAG,EAAE,KAAK,CAAC,QAAN,EADY;AAEjB,QAAA,eAAe,EAAE,QAFA;AAGjB,QAAA,IAAI,EAAE,IAHW;AAIjB,QAAA,cAAc,EAAE,KAAK,cAAL,CAAoB,IAApB,CAAyB,IAAzB;AAJC,OAAlB,CATD;AAgBA;AAvPF;AAAA;AAAA,WAyPQ,oBAAW,IAAX,EAAkC,KAAlC,EAA+C;AACrD,aAAO,KAAK,WAAL,CAAiB,IAAjB,EAAuB,KAAvB,CAAP;AACA;AA3PF;AAAA;AAAA,WA6PS,kBAAS,IAAT,EAAqB;AAC5B,WAAK,QAAL,CAAc;AACb,QAAA,UAAU,EAAE;AADC,OAAd;AAGA;AAjQF;AAAA;AAAA,WAmQQ,iBAAQ,IAAR,EAAoB;AAC1B,WAAK,QAAL,CAAc,IAAd;AACA;AArQF;AAAA;AAAA,WAuQS,yBAAgB,GAAhB,EAAoC;AAAA,UACnC,UADmC,GACpB,KAAK,KADe,CACnC,UADmC;AAE3C,WAAK,QAAL,CAAc;AACb,QAAA,YAAY,EAAE,KADD;AAEb,QAAA,cAAc,EAAE;AAFH,OAAd;AAIA,WAAK,cAAL;;AAEA,UAAI,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,EAAL,CAAZ,EAAsB;AACrB,eAAO,UAAU,CAAC,EAAD,CAAjB;AACA;;AAED,aAAO,UAAU,CAAC,GAAD,CAAjB;AACA;AApRF;AAAA;AAAA,WAsRQ,wBAAe,GAAf,EAAmC;AACzC,aAAO,KAAK,eAAL,CAAqB,GAArB,CAAP;AACA;AAxRF;AAAA;AAAA,WA0RS,sBAAa,QAAb,EAA6B;AAAA;;AACpC,WAAK,QAAL,CAAc;AACb,QAAA,aAAa,EAAE;AADF,OAAd,EAEG,YAAK;AACP,YAAM,IAAI,GAAG,eAAe,CAAC,MAAI,CAAC,KAAL,CAAW,KAAZ,EAAmB,MAAI,CAAC,KAAL,CAAW,QAA9B,EAAwC,MAAI,CAAC,KAAL,CAAW,UAAnD,CAA5B;AACA,YAAM,SAAS,GAAG,QAAQ,CAAC,QAAD,EAAW,MAAI,CAAC,KAAL,CAAW,KAAtB,EAA6B,MAAI,CAAC,KAAL,CAAW,QAAxC,EAAkD,MAAI,CAAC,KAAL,CAAW,UAA7D,CAA1B;;AAEA,YAAI,SAAS,IAAI,CAAb,IAAkB,SAAS,IAAK,IAAI,CAAC,MAAL,GAAe,MAAI,CAAC,WAAL,GAAmB,CAAtE,EAA2E;AAC1E,UAAA,UAAU,CAAC,YAAK;AACf,YAAA,MAAI,CAAC,WAAL,CAAiB,aAAjB,CAA+B;AAAE,cAAA,QAAQ,EAAE,IAAZ;AAAkB,cAAA,KAAK,EAAE,SAAzB;AAAoC,cAAA,YAAY,EAAE;AAAlD,aAA/B;AACA,WAFS,EAEP,GAFO,CAAV;AAGA,SAJD,MAIO;AACN,UAAA,MAAI,CAAC,WAAL,CAAiB,WAAjB;AACA;AACD,OAbD;AAcA;AAzSF;AAAA;AAAA,WA2SQ,qBAAY,QAAZ,EAA4B;AAClC,WAAK,YAAL,CAAkB,QAAlB;AACA;AA7SF;;AAAA;AAAA,EAAoC,KAAK,CAAC,aAA1C;AAae,cAAA,CAAA,YAAA,GAAe;AAAE,EAAA,eAAe,EAAE,IAAnB;AAAyB,EAAA,kBAAkB,EAAE,OAA7C;AAAsD,EAAA,qBAAqB,EAAE,KAA7E;AAAoF,EAAA,oBAAoB,EAAE,SAA1G;AAAqH,EAAA,6BAA6B,EAAE,KAApJ;AAA2J,EAAA,eAAe,EAAE,IAA5K;AAAkL,EAAA,qBAAqB,EAAE,KAAzM;AAAgN,EAAA,qBAAqB,EAAE,eAAvO;AAAwP,EAAA,qBAAqB,EAAE,WAA/Q;AAA4R,EAAA,QAAQ,EAAE,KAAtS;AAA6S,EAAA,KAAK,EAAE,EAApT;AAAwT,EAAA,QAAQ,EAAE,KAAlU;AAAyU,EAAA,gBAAgB,EAAE;AAA3V,CAAf","sourceRoot":"","sourcesContent":["import * as React from 'react';\nimport { Modal, View, FlatList, KeyboardAvoidingView, Platform, SafeAreaView, TouchableOpacity } from 'react-native';\nimport { AlphabetComponent, ListItemComponent, SearchComponent, ScrollToTopComponent, SelectBoxComponent } from './';\nimport { ModalStyles, CommonStyle } from '../Assets/Styles';\nimport { generateAlphabet, getFilteredData, getIndex } from '../Helpers';\nexport class ModalComponent extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.flatListRef = null;\n        this.numToRender = 20;\n        this.state = {\n            modalVisible: false,\n            searchText: '',\n            stickyBottomButton: false,\n            selectedAlpha: null,\n            selectedObject: {},\n        };\n        this._onViewableItemsChanged = this._onViewableItemsChanged.bind(this);\n        this.viewabilityConfig = {\n            minimumViewTime: 500,\n            waitForInteraction: true,\n            viewAreaCoveragePercentThreshold: 95\n        };\n    }\n    _clearComponent() {\n        this.setState({\n            stickyBottomButton: false,\n            searchText: '',\n            selectedAlpha: null,\n        });\n    }\n    clearComponent() {\n        this._clearComponent();\n    }\n    componentDidMount() {\n        const { autoGenerateAlphabeticalIndex, alphabeticalIndexChars, items, sortingLanguage } = this.props;\n        if (autoGenerateAlphabeticalIndex) {\n            this.setState({ alphabeticalIndexChars: generateAlphabet(items, sortingLanguage) });\n        }\n        else if (alphabeticalIndexChars) {\n            this.setState({\n                alphabeticalIndexChars,\n            });\n        }\n    }\n    _openModal() {\n        const { items, autoGenerateAlphabeticalIndex, disabled, sortingLanguage } = this.props;\n        if (autoGenerateAlphabeticalIndex) {\n            this.setState({ alphabeticalIndexChars: generateAlphabet(items, sortingLanguage) });\n        }\n        if (items.length > 0 && !disabled) {\n            this.setState({\n                modalVisible: true,\n            });\n        }\n    }\n    openModal() {\n        this._openModal();\n    }\n    render() {\n        const { autoSort, modalAnimationType, onClosed, showAlphabeticalIndex, searchInputTextColor, keyExtractor, showToTopButton, onEndReached, removeClippedSubviews, FlatListProps, selectPlaceholderText, searchPlaceholderText, SearchInputProps, selected, disabled, items, requireSelection, renderSelectView, ModalProps, backButtonDisabled, renderSearch } = this.props;\n        const { modalVisible, alphabeticalIndexChars, stickyBottomButton, selectedAlpha, selectedObject, searchText } = this.state;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(SelectBoxComponent, { renderSelectView: renderSelectView, items: items, disabled: disabled, selectedObject: selectedObject, chooseText: (selected && selected.Name) ? selected.Name : selectPlaceholderText, openModal: this.openModal.bind(this) }),\n            React.createElement(Modal, Object.assign({ animationType: modalAnimationType, visible: modalVisible, onRequestClose: () => onClosed }, ModalProps),\n                React.createElement(SafeAreaView, { style: ModalStyles.container },\n                    renderSearch ? renderSearch(this.onClose.bind(this), this.onBackRequest.bind(this)) : (React.createElement(SearchComponent, Object.assign({ searchText: searchPlaceholderText, placeholderTextColor: searchInputTextColor, onClose: this.onClose.bind(this), onBackRequest: this.onBackRequest.bind(this), forceSelect: requireSelection, setText: (text) => this.setText(text), backButtonDisabled: backButtonDisabled }, SearchInputProps))),\n                    React.createElement(KeyboardAvoidingView, { style: ModalStyles.keyboardContainer, behavior: Platform.OS === 'ios' ? 'padding' : null, enabled: true },\n                        React.createElement(View, { style: ModalStyles.listArea },\n                            React.createElement(FlatList, Object.assign({ ref: (ref) => this.flatListRef = ref, keyExtractor: keyExtractor ? keyExtractor : (item, index) => index.toString(), data: getFilteredData(items, autoSort, searchText), renderItem: ({ item, index }) => this.renderItem(item, index), onScroll: showToTopButton && this.onScrolling.bind(this), initialNumToRender: this.numToRender, keyboardShouldPersistTaps: 'always', keyboardDismissMode: 'interactive', onEndReached: onEndReached, maxToRenderPerBatch: 20, legacyImplementation: false, updateCellsBatchingPeriod: 50, removeClippedSubviews: removeClippedSubviews, viewabilityConfig: this.viewabilityConfig, getItemLayout: (_, index) => ({\n                                    length: CommonStyle.BTN_HEIGHT,\n                                    offset: CommonStyle.BTN_HEIGHT * index,\n                                    index\n                                }), onViewableItemsChanged: this._onViewableItemsChanged }, FlatListProps)),\n                            React.createElement(AlphabetComponent, { showAlphabeticalIndex: showAlphabeticalIndex, setAlphabet: (alphabet) => this.setAlphabet(alphabet), alphabets: alphabeticalIndexChars, selectedAlpha: selectedAlpha }))),\n                    React.createElement(ScrollToTopComponent, { goToUp: this.scrollToUp.bind(this), stickyBottomButton: stickyBottomButton })))));\n    }\n    _onViewableItemsChanged({ viewableItems }) {\n        if (viewableItems && viewableItems[0]) {\n            const firstLetter = viewableItems[0].item.Name.charAt(0);\n            this.setState({\n                selectedAlpha: firstLetter,\n            });\n        }\n    }\n    _onClose() {\n        const { onClosed, onSelected, requireSelection, selected } = this.props;\n        const { modalVisible, selectedObject } = this.state;\n        if (requireSelection && (selectedObject && ![selectedObject.Id]) && (selected && ![selected.Id]))\n            return;\n        if (!requireSelection) {\n            onSelected({});\n        }\n        this.setState({\n            selectedObject: {},\n            modalVisible: !modalVisible,\n        });\n        this.clearComponent();\n        if (onClosed) {\n            onClosed();\n        }\n    }\n    onClose() {\n        this._onClose();\n    }\n    _onBackRequest() {\n        const { onBackButtonPressed } = this.props;\n        const { modalVisible } = this.state;\n        this.setState({\n            modalVisible: !modalVisible,\n        });\n        this.clearComponent();\n        if (onBackButtonPressed) {\n            onBackButtonPressed();\n        }\n    }\n    onBackRequest() {\n        this._onBackRequest();\n    }\n    _scrollToUp() {\n        if (this.flatListRef) {\n            this.setState({\n                selectedAlpha: null,\n            }, () => {\n                this.flatListRef.scrollToOffset({ animated: true, offset: 0 });\n            });\n        }\n    }\n    scrollToUp() {\n        this._scrollToUp();\n    }\n    _onScrolling(e) {\n        const { contentOffset } = e.nativeEvent;\n        if (contentOffset.y > 100) {\n            this.setState({\n                stickyBottomButton: true,\n            });\n        }\n        else {\n            this.setState({\n                stickyBottomButton: false,\n            });\n        }\n    }\n    onScrolling(e) {\n        this._onScrolling(e);\n    }\n    _renderItem(item, index) {\n        const { selected, renderListItem } = this.props;\n        return ((renderListItem &&\n            React.createElement(TouchableOpacity, { key: index.toString(), onPress: () => this.onSelectMethod(item) }, renderListItem(selected, item)))\n            ||\n                React.createElement(ListItemComponent, { key: index.toString(), defaultSelected: selected, list: item, onSelectMethod: this.onSelectMethod.bind(this) }));\n    }\n    renderItem(item, index) {\n        return this._renderItem(item, index);\n    }\n    _setText(text) {\n        this.setState({\n            searchText: text,\n        });\n    }\n    setText(text) {\n        this._setText(text);\n    }\n    _onSelectMethod(key) {\n        const { onSelected } = this.props;\n        this.setState({\n            modalVisible: false,\n            selectedObject: key,\n        });\n        this.clearComponent();\n        if (key && ![key.Id]) {\n            return onSelected({});\n        }\n        return onSelected(key);\n    }\n    onSelectMethod(key) {\n        return this._onSelectMethod(key);\n    }\n    _setAlphabet(alphabet) {\n        this.setState({\n            selectedAlpha: alphabet,\n        }, () => {\n            const list = getFilteredData(this.props.items, this.props.autoSort, this.state.searchText);\n            const findIndex = getIndex(alphabet, this.props.items, this.props.autoSort, this.state.searchText);\n            if (findIndex >= 0 && findIndex <= (list.length - (this.numToRender / 2))) {\n                setTimeout(() => {\n                    this.flatListRef.scrollToIndex({ animated: true, index: findIndex, viewPosition: 0 });\n                }, 100);\n            }\n            else {\n                this.flatListRef.scrollToEnd();\n            }\n        });\n    }\n    setAlphabet(alphabet) {\n        this._setAlphabet(alphabet);\n    }\n}\nModalComponent.defaultProps = { showToTopButton: true, modalAnimationType: 'slide', showAlphabeticalIndex: false, searchInputTextColor: '#252525', autoGenerateAlphabeticalIndex: false, sortingLanguage: 'tr', removeClippedSubviews: false, selectPlaceholderText: 'Choose one...', searchPlaceholderText: 'Search...', autoSort: false, items: [], disabled: false, requireSelection: false, };\n//# sourceMappingURL=Modal.js.map"]},"metadata":{},"sourceType":"module"}