{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\StatsAppNative\\\\MyApp\\\\screens\\\\CreateATeamScreen\\\\CreateATeam.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useEffect, useState, Component } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport styles from \"./styles\";\nimport { Picker } from '@react-native-picker/picker';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport { ThemeColors } from 'react-navigation';\nimport { useNavigation } from '@react-navigation/native';\nimport { createAppContainer } from 'react-navigation';\nimport { createStackNavigator } from 'react-navigation-stack';\n\nvar CreateATeam = function (_Component) {\n  _inherits(CreateATeam, _Component);\n\n  var _super = _createSuper(CreateATeam);\n\n  function CreateATeam(props) {\n    var _this;\n\n    _classCallCheck(this, CreateATeam);\n\n    _this = _super.call(this, props);\n\n    _this.CheckCreatedTeam = function () {\n      _this.props.navigation.navigate('Home');\n    };\n\n    _this.CreateTeam = function () {\n      var _this$state = _this.state,\n          TeamName = _this$state.TeamName,\n          SportType = _this$state.SportType;\n\n      if (TeamName.length > 0) {\n        if (SportType.length > 0) {\n          var myUserId = firebase.auth().currentUser.uid;\n          var data = {\n            TeamName: _this.state.TeamName,\n            SportType: _this.state.SportType,\n            CreatedByUserID: myUserId,\n            teamAdminInvite: _this.state.teamAdminInvite,\n            playercounter: 0,\n            gamecounter: 0\n          };\n          var teamAdmincode = firebase.database().ref('/teams').orderByChild('teamAdminInvite').equalTo(data.teamAdminInvite).once('value', function (snapshot) {\n            if (snapshot.exists()) {\n              alert('This team admin invite code is not unique, try again');\n            } else {\n              var teamsRef = firebase.database().ref('/teams').child(myUserId);\n              teamsRef.set(data).then(function () {\n                var usersRef = firebase.database().ref('/users');\n                usersRef.child(myUserId).update({\n                  'teamCreated': 1,\n                  'teamID': myUserId\n                }).catch(function (error) {\n                  console.error(\"Error writing document: \", error);\n                });\n                alert(\"Team Created\");\n              }).catch(function (error) {\n                console.error(\"Error writing document: \", error);\n              });\n\n              _this.props.navigation.navigate('Home');\n            }\n          });\n        } else if (SportType == \"\") {\n          alert(\"Please select your sport.\");\n        }\n      } else {\n        alert(\"Please enter your Team Name.\");\n      }\n    };\n\n    _this.state = {\n      TeamName: '',\n      SportType: '',\n      inviteCode: '',\n      teamAdminInvite: '',\n      hasATeam: false,\n      userType: []\n    };\n    return _this;\n  }\n\n  _createClass(CreateATeam, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(ScrollView, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }\n      }, \"Enter your team name: \"), React.createElement(TextInput, {\n        style: styles.input,\n        placeholder: \"Team Name\",\n        placeholderTextColor: \"#aaaaaa\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            TeamName: text\n          });\n        },\n        value: this.state.TeamName,\n        underlineColorAndroid: \"transparent\",\n        autoCapitalize: \"none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 25\n        }\n      }), React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 25\n        }\n      }, \"Select your sport from the list below: \"), React.createElement(Picker, {\n        selectedValue: this.state.SportType,\n        style: styles.picker,\n        onValueChange: function onValueChange(text) {\n          return _this2.setState({\n            SportType: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 25\n        }\n      }, React.createElement(Picker.Item, {\n        label: \"Select a sport\",\n        value: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 33\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"Soccer\",\n        value: \"Soccer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 33\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"GAA\",\n        value: \"GAA\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 33\n        }\n      })), React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 25\n        }\n      }, \"Enter your team admin invite code: \"), React.createElement(TextInput, {\n        style: styles.input,\n        placeholder: \"Team Admin code\",\n        placeholderTextColor: \"#aaaaaa\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            teamAdminInvite: text\n          });\n        },\n        value: this.state.teamAdminInvite,\n        underlineColorAndroid: \"transparent\",\n        autoCapitalize: \"none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 25\n        }\n      }), React.createElement(View, {\n        style: styles.footerView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 29\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.button,\n        onPress: this.CreateTeam,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 33\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 41\n        }\n      }, \"Submit\"))));\n    }\n  }]);\n\n  return CreateATeam;\n}(Component);\n\nexport default CreateATeam;","map":{"version":3,"sources":["D:/StatsAppNative/MyApp/screens/CreateATeamScreen/CreateATeam.js"],"names":["React","useEffect","useState","Component","styles","Picker","firebase","ThemeColors","useNavigation","createAppContainer","createStackNavigator","CreateATeam","props","CheckCreatedTeam","navigation","navigate","CreateTeam","state","TeamName","SportType","length","myUserId","auth","currentUser","uid","data","CreatedByUserID","teamAdminInvite","playercounter","gamecounter","teamAdmincode","database","ref","orderByChild","equalTo","once","snapshot","exists","alert","teamsRef","child","set","then","usersRef","update","catch","error","console","inviteCode","hasATeam","userType","container","text","input","setState","picker","footerView","button"],"mappings":"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","sourcesContent":["import React, { useEffect, useState , Component  } from 'react'\r\nimport {FlatList, Keyboard, Text, View , ScrollView, TouchableOpacity,TextInput , Button , Alert} from 'react-native'\r\nimport styles from './styles';\r\n\r\n// import {Picker} from '@react-native-community/picker';\r\n\r\nimport {Picker} from '@react-native-picker/picker';\r\n// import * as firebase from 'firebase/app';\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\nimport { ThemeColors } from 'react-navigation';\r\n\r\n\r\n\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { createAppContainer } from 'react-navigation';\r\nimport { createStackNavigator } from 'react-navigation-stack';\r\n\r\n\r\nclass CreateATeam extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            TeamName: '',\r\n            SportType: '',\r\n            inviteCode:'',\r\n            teamAdminInvite:'',\r\n            hasATeam: false,\r\n            userType: [],\r\n          \r\n            };\r\n        }\r\n\r\n        //On Load need to check if the usertype is headteamanalyst\r\n            //check if they have created a team already or not\r\n                //if they have created a team , tell them to delete it first\r\n                //They shouldnt be able to access this page if they have a value for teamcreated\r\n     \r\n\r\n\r\n\r\n\r\n        //Check if user has created an account or has an existing account \r\n        CheckCreatedTeam = () => {\r\n\r\n            this.props.navigation.navigate('Home')\r\n        }\r\n\r\n        CreateTeam = () => {\r\n\r\n\r\n            const { TeamName, SportType } = this.state\r\n\r\n  \r\n            if (TeamName.length > 0) {\r\n                  \r\n                if (SportType.length > 0) {\r\n                    \r\n                        var myUserId = firebase.auth().currentUser.uid;\r\n\r\n                        const data = {\r\n                            \r\n                            TeamName:this.state.TeamName,\r\n                            SportType:this.state.SportType,\r\n                            CreatedByUserID: myUserId,\r\n                            teamAdminInvite: this.state.teamAdminInvite,\r\n                            playercounter:0,\r\n                            gamecounter:0,\r\n                        \r\n            \r\n                        };\r\n\r\n\r\n\r\n                        //Checking that the teamAdminvite code is unique\r\n\r\n                        const teamAdmincode = firebase.database().ref('/teams').orderByChild('teamAdminInvite').equalTo(data.teamAdminInvite).once('value' , snapshot =>  {\r\n                            if (snapshot.exists()){\r\n                            alert('This team admin invite code is not unique, try again');\r\n                            }\r\n                            else\r\n                            {\r\n\r\n                                    const teamsRef = firebase.database().ref('/teams').child(myUserId)\r\n                                    teamsRef.\r\n                                        set(data).then(function() {\r\n                                \r\n                                            //update user teamcreated\r\n                                            const usersRef = firebase.database().ref('/users')\r\n                                            usersRef.child(myUserId).update({'teamCreated': 1 , 'teamID':myUserId})\r\n                                            \r\n                \r\n                                            .catch(function(error) {\r\n                                                console.error(\"Error writing document: \", error);\r\n                                            });\r\n                        \r\n                                       \r\n                                            alert(\"Team Created\");\r\n                                                                            \r\n                                    })\r\n                        \r\n                                \r\n                                    .catch(function(error) {\r\n                                        console.error(\"Error writing document: \", error);\r\n                                    });\r\n\r\n\r\n                                    this.props.navigation.navigate('Home');\r\n\r\n\r\n                            }\r\n                        \r\n                            \r\n                    });\r\n\r\n                }\r\n                else if(SportType == \"\")\r\n                {\r\n                        alert(\"Please select your sport.\")\r\n                }\r\n\r\n            }\r\n            else\r\n            {\r\n                alert(\"Please enter your Team Name.\")\r\n            }\r\n\r\n\r\n     \r\n\r\n}\r\n\r\n\r\n\r\n\r\n           \r\n\r\n\r\n        render(){\r\n\r\n\r\n\r\n            return (\r\n            <ScrollView style={styles.container}>\r\n                    <Text style={styles.text}>Enter your team name: </Text>\r\n                        <TextInput\r\n                            style={styles.input}\r\n                            placeholder='Team Name'\r\n                            placeholderTextColor=\"#aaaaaa\"\r\n                            onChangeText={(text) => this.setState({TeamName:text})}\r\n                            value={this.state.TeamName}\r\n                            underlineColorAndroid=\"transparent\"\r\n                            autoCapitalize=\"none\"\r\n                        />\r\n                        <Text style={styles.text}>Select your sport from the list below: </Text>\r\n                        <Picker\r\n                                selectedValue={this.state.SportType}\r\n                                style={styles.picker}\r\n                                onValueChange={(text) => this.setState({SportType:text})}\r\n                            >\r\n                                 \r\n                                <Picker.Item label=\"Select a sport\" value=\"\" />\r\n                                <Picker.Item label=\"Soccer\" value=\"Soccer\" />\r\n                                <Picker.Item label=\"GAA\" value=\"GAA\" />\r\n                        </Picker>\r\n\r\n\r\n                        <Text style={styles.text}>Enter your team admin invite code: </Text>\r\n                        <TextInput\r\n                            style={styles.input}\r\n                            placeholder='Team Admin code'\r\n                            placeholderTextColor=\"#aaaaaa\"\r\n                            onChangeText={(text) => this.setState({teamAdminInvite:text})}\r\n                            value={this.state.teamAdminInvite}\r\n                            underlineColorAndroid=\"transparent\"\r\n                            autoCapitalize=\"none\"\r\n                        />\r\n                        \r\n                  \r\n                            <View style={styles.footerView}>\r\n                                <TouchableOpacity style={styles.button} onPress={this.CreateTeam}>\r\n                                        <Text style={styles.text}>Submit</Text>\r\n                                </TouchableOpacity>\r\n                            </View>\r\n            \r\n        \r\n                </ScrollView>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default CreateATeam;"]},"metadata":{},"sourceType":"module"}