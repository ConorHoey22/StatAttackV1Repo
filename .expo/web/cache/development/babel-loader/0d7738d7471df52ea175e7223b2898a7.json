{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\StatsAppNative\\\\MyApp\\\\screens\\\\TeamAnalystRegistrationScreen\\\\TeamAnalystRegistrationScreen.js\";\nimport React, { useEffect, useState } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport styles from \"./styles\";\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nexport default function TeamAnalystRegistrationScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      fullName = _useState2[0],\n      setFullName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      confirmPassword = _useState8[0],\n      setConfirmPassword = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      InviteCode = _useState10[0],\n      setInviteCode = _useState10[1];\n\n  var onSignUpPress = function onSignUpPress() {\n    if (fullName == \"\") {\n      alert(\"Please enter your full name.\");\n      return;\n    }\n\n    if (email == \"\") {\n      alert(\"Please enter your email.\");\n      return;\n    }\n\n    if (password !== confirmPassword) {\n      alert(\"Passwords don't match.\");\n      return;\n    }\n\n    if (password !== confirmPassword) {\n      alert(\"Passwords don't match.\");\n      return;\n    }\n\n    firebase.auth().createUserWithEmailAndPassword(email, password).then(function (response) {\n      var uid = response.user.uid;\n      var userType = \"TeamAnalyst\";\n      var data = {\n        id: uid,\n        email: email,\n        fullName: fullName\n      };\n      var usersRef = firebase.firestore().collection('users');\n      usersRef.doc(uid).set(data).then(function () {\n        navigation.navigate('Welcome', {\n          user: data\n        });\n      }).catch(function (error) {\n        alert(error);\n      });\n    }).catch(function (error) {\n      alert(error);\n    });\n    navigation.navigate('Login');\n  };\n\n  return React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.footerText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, \" Please enter your full name:\"), React.createElement(TextInput, {\n    style: styles.input,\n    placeholderTextColor: \"#aaaaaa\",\n    placeholder: \"Please enter your full name\",\n    onChangeText: function onChangeText(text) {\n      return setFullName(text);\n    },\n    value: fullName,\n    underlineColorAndroid: \"transparent\",\n    autoCapitalize: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    style: styles.footerText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, \" Please enter your email:\"), React.createElement(TextInput, {\n    style: styles.input,\n    placeholderTextColor: \"#aaaaaa\",\n    placeholder: \"Please enter your email\",\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    value: email,\n    underlineColorAndroid: \"transparent\",\n    autoCapitalize: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    style: styles.footerText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, \" Please enter your password:\"), React.createElement(TextInput, {\n    style: styles.input,\n    placeholderTextColor: \"#aaaaaa\",\n    secureTextEntry: true,\n    placeholder: \"Password\",\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    value: password,\n    underlineColorAndroid: \"transparent\",\n    autoCapitalize: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    style: styles.footerText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 18\n    }\n  }, \" Please confirm your password:\"), React.createElement(TextInput, {\n    style: styles.input,\n    placeholderTextColor: \"#aaaaaa\",\n    secureTextEntry: true,\n    placeholder: \"Confirm Password\",\n    onChangeText: function onChangeText(text) {\n      return setConfirmPassword(text);\n    },\n    value: confirmPassword,\n    underlineColorAndroid: \"transparent\",\n    autoCapitalize: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    style: styles.footerText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, \"Please enter you invite code.This can be obtained by your Team Analyst:\"), React.createElement(TextInput, {\n    style: styles.input,\n    placeholderTextColor: \"#aaaaaa\",\n    placeholder: \"Please enter your invite code\",\n    onChangeText: function onChangeText(text) {\n      return setInviteCode(text);\n    },\n    value: InviteCode,\n    underlineColorAndroid: \"transparent\",\n    autoCapitalize: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: styles.footerView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: function onPress() {\n      return onSignUpPress();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 21\n    }\n  }, \"Sign up!\"))));\n}","map":{"version":3,"sources":["D:/StatsAppNative/MyApp/screens/TeamAnalystRegistrationScreen/TeamAnalystRegistrationScreen.js"],"names":["React","useEffect","useState","styles","firebase","TeamAnalystRegistrationScreen","navigation","fullName","setFullName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","InviteCode","setInviteCode","onSignUpPress","alert","auth","createUserWithEmailAndPassword","then","response","uid","user","userType","data","id","usersRef","firestore","collection","doc","set","navigate","catch","error","footerText","input","text","footerView","button","buttonTitle"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Image, Text, TextInput, TouchableOpacity, ScrollView , View , StyleSheet} from 'react-native';\r\nimport styles from './styles';\r\n// import * as firebase from 'firebase/app';\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\n\r\n\r\n\r\n\r\nexport default function TeamAnalystRegistrationScreen({navigation}){\r\n\r\n    const [fullName, setFullName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [InviteCode, setInviteCode] = useState('')\r\n\r\n    \r\n    const onSignUpPress = () => {\r\n        //  Full name Validation\r\n        if(fullName == \"\")\r\n        {\r\n            alert(\"Please enter your full name.\")\r\n            return\r\n        }\r\n\r\n        //  Email Validation\r\n        if(email == \"\")\r\n        {\r\n            alert(\"Please enter your email.\")\r\n            return\r\n        }\r\n\r\n        //  Password confirmation Check\r\n        if (password !== confirmPassword) {\r\n            alert(\"Passwords don't match.\")\r\n            return\r\n        }\r\n        //Set UserType to TA\r\n        if (password !== confirmPassword) {\r\n            alert(\"Passwords don't match.\")\r\n            return\r\n        }\r\n        firebase\r\n            .auth()\r\n            .createUserWithEmailAndPassword(email, password)\r\n            .then((response) => {\r\n                const uid = response.user.uid\r\n                const userType = \"TeamAnalyst\"\r\n                const data = {\r\n                    id: uid,\r\n                    email,\r\n                    fullName,\r\n                };\r\n                const usersRef = firebase.firestore().collection('users')\r\n                usersRef\r\n                    .doc(uid)\r\n                    .set(data)\r\n                    .then(() => {\r\n                        navigation.navigate('Welcome', {user: data})\r\n                    })\r\n                    .catch((error) => {\r\n                        alert(error)\r\n                    });\r\n            })\r\n            .catch((error) => {\r\n                alert(error)\r\n        });\r\n\r\n\r\n        navigation.navigate('Login')\r\n    }\r\n\r\n    return (\r\n        <ScrollView>\r\n                <Text style={styles.footerText}> Please enter your full name:</Text>\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholderTextColor=\"#aaaaaa\"\r\n                    placeholder='Please enter your full name'\r\n                    onChangeText={(text) => setFullName(text)}\r\n                    value={fullName}\r\n                    underlineColorAndroid=\"transparent\"\r\n                    autoCapitalize=\"none\"\r\n                />\r\n\r\n                <Text style={styles.footerText}> Please enter your email:</Text>\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholderTextColor=\"#aaaaaa\"\r\n                    placeholder='Please enter your email'\r\n                    onChangeText={(text) => setEmail(text)}\r\n                    value={email}\r\n                    underlineColorAndroid=\"transparent\"\r\n                    autoCapitalize=\"none\"\r\n                />\r\n\r\n                <Text style={styles.footerText}> Please enter your password:</Text>\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholderTextColor=\"#aaaaaa\"\r\n                    secureTextEntry\r\n                    placeholder='Password'\r\n                    onChangeText={(text) => setPassword(text)}\r\n                    value={password}\r\n                    underlineColorAndroid=\"transparent\"\r\n                    autoCapitalize=\"none\"\r\n                />\r\n                 <Text style={styles.footerText}> Please confirm your password:</Text>\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholderTextColor=\"#aaaaaa\"\r\n                    secureTextEntry\r\n                    placeholder='Confirm Password'\r\n                    onChangeText={(text) => setConfirmPassword(text)}\r\n                    value={confirmPassword}\r\n                    underlineColorAndroid=\"transparent\"\r\n                    autoCapitalize=\"none\"\r\n                />\r\n\r\n                <Text style={styles.footerText}>Please enter you invite code.This can be obtained by your Team Analyst:</Text>\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholderTextColor=\"#aaaaaa\"\r\n                    placeholder='Please enter your invite code'\r\n                    onChangeText={(text) => setInviteCode(text)}\r\n                    value={InviteCode}\r\n                    underlineColorAndroid=\"transparent\"\r\n                    autoCapitalize=\"none\"\r\n                />\r\n\r\n                <View style={styles.footerView}>\r\n                    <TouchableOpacity style={styles.button} onPress={() => onSignUpPress()}>\r\n                    <Text style={styles.buttonTitle}>Sign up!</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n\r\n        </ScrollView>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}