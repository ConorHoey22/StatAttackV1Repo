{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\StatsAppNative\\\\MyApp\\\\screens\\\\LoginScreen\\\\LoginScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useEffect, useState, Component } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { useNavigation } from '@react-navigation/native';\nimport { createAppContainer } from 'react-navigation';\nimport { createStackNavigator } from 'react-navigation-stack';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\nimport { Picker } from '@react-native-picker/picker';\nvar screenWidth = Dimensions.get('window').width;\nvar screenHeight = Dimensions.get('window').height;\n\nvar LoginScreen = function (_Component) {\n  _inherits(LoginScreen, _Component);\n\n  var _super = _createSuper(LoginScreen);\n\n  function LoginScreen(props) {\n    var _this;\n\n    _classCallCheck(this, LoginScreen);\n\n    _this = _super.call(this, props);\n\n    _this.onLogin = function _callee() {\n      var email, password;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              email = _this.state.email;\n              password = _this.state.password;\n\n              if (_this.state.email == '' || _this.state.password == '') {\n                alert('Enter details to signin!');\n              } else {\n                _this.setState({\n                  isLoading: true\n                });\n\n                firebase.auth().signInWithEmailAndPassword(email, password).then(function () {\n                  return _this.props.navigation.navigate('Home');\n                }).catch(function (error) {\n                  return alert(error.toString(error));\n                });\n              }\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      email: '',\n      password: '',\n      selectedPlayerPosition: ''\n    };\n    return _this;\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(ScrollView, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }\n      }, React.createElement(Picker, {\n        selectedValue: this.state.selectedPlayerPosition,\n        onValueChange: function onValueChange(text) {\n          return _this2.setState({\n            selectedPlayerPosition: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 2\n        }\n      }, React.createElement(Picker.Item, {\n        label: \"Select their position\",\n        value: \"\",\n        itemStyle: {\n          backgroundColor: \"grey\",\n          color: \"blue\",\n          fontFamily: \"Ebrima\",\n          fontSize: 17\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 3\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"Java\",\n        value: \"java\",\n        itemStyle: {\n          backgroundColor: \"grey\",\n          color: \"blue\",\n          fontFamily: \"Ebrima\",\n          fontSize: 17\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 3\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"JavaScript\",\n        value: \"js\",\n        itemStyle: {\n          backgroundColor: \"grey\",\n          color: \"blue\",\n          fontFamily: \"Ebrima\",\n          fontSize: 17\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 3\n        }\n      })));\n    }\n  }]);\n\n  return LoginScreen;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#252626'\n  },\n  logo: {\n    flex: 1,\n    height: 120,\n    width: 90,\n    alignSelf: \"center\",\n    margin: 30\n  },\n  input: {\n    height: 60,\n    borderRadius: 5,\n    overflow: 'hidden',\n    backgroundColor: 'white',\n    marginTop: 10,\n    marginBottom: 10,\n    marginLeft: 30,\n    marginRight: 30,\n    paddingLeft: 16\n  },\n  button: {\n    backgroundColor: '#C30000',\n    marginLeft: 30,\n    marginRight: 50,\n    marginTop: 20,\n    height: 48,\n    width: 150,\n    borderRadius: 5,\n    borderWidth: 2,\n    borderColor: '#000000',\n    alignItems: \"center\",\n    justifyContent: 'center'\n  },\n  Text: {\n    color: \"white\",\n    fontSize: 15,\n    marginTop: 10,\n    marginBottom: 10,\n    marginLeft: 16,\n    marginRight: 30,\n    paddingLeft: 16,\n    fontWeight: \"bold\"\n  },\n  footerView: {\n    flex: 1,\n    alignItems: \"center\",\n    marginTop: 20\n  },\n  footerText: {\n    fontSize: 18,\n    height: 30,\n    marginTop: 15,\n    marginBottom: 5,\n    marginLeft: 20,\n    marginRight: 30,\n    paddingLeft: 10,\n    color: 'white',\n    fontWeight: \"bold\"\n  },\n  footerLink: {\n    color: \"#788eec\",\n    fontWeight: \"bold\",\n    fontSize: 16\n  },\n  test: {\n    backgroundColor: '#000000',\n    borderWidth: 4,\n    borderColor: '#949494',\n    borderRadius: 6\n  }\n});\nexport default LoginScreen;","map":{"version":3,"sources":["D:/StatsAppNative/MyApp/screens/LoginScreen/LoginScreen.js"],"names":["React","useEffect","useState","Component","firebase","useNavigation","createAppContainer","createStackNavigator","widthPercentageToDP","wp","heightPercentageToDP","hp","Picker","screenWidth","Dimensions","get","width","screenHeight","height","LoginScreen","props","onLogin","email","state","password","alert","setState","isLoading","auth","signInWithEmailAndPassword","then","navigation","navigate","catch","error","toString","selectedPlayerPosition","styles","container","text","backgroundColor","color","fontFamily","fontSize","StyleSheet","create","flex","logo","alignSelf","margin","input","borderRadius","overflow","marginTop","marginBottom","marginLeft","marginRight","paddingLeft","button","borderWidth","borderColor","alignItems","justifyContent","Text","fontWeight","footerView","footerText","footerLink","test"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, Component } from 'react'\r\nimport { ScrollView,Image, Text, TextInput,StyleSheet, TouchableOpacity, View ,Button } from 'react-native'\r\n\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\n\r\nimport {Dimensions} from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { createAppContainer } from 'react-navigation';\r\nimport { createStackNavigator } from 'react-navigation-stack';\r\n\r\nimport {widthPercentageToDP as wp, heightPercentageToDP as hp} from 'react-native-responsive-screen';\r\n\r\nimport {Picker} from '@react-native-picker/picker';\r\n\r\n\r\nconst screenWidth = Dimensions.get('window').width;\r\n\r\nconst screenHeight = Dimensions.get('window').height;\r\n\r\n\r\nclass LoginScreen extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            email: '',\r\n            password: '',\r\n            selectedPlayerPosition:''\r\n          \r\n         };\r\n      }\r\n\r\n     \r\n  \r\n\r\n    onLogin = async() => {\r\n\r\n        const email = this.state.email;\r\n        const password = this.state.password;\r\n\r\n\r\n        if(this.state.email == '' || this.state.password == '') {\r\n          alert('Enter details to signin!')\r\n        } else {\r\n          this.setState({\r\n            isLoading: true,\r\n          });\r\n\r\n\r\n         \r\n    \r\n            firebase.auth()\r\n                .signInWithEmailAndPassword(email, password)\r\n                .then(() => this.props.navigation.navigate('Home'))\r\n                .catch(error => alert(error.toString(error)));\r\n\r\n                  \r\n\r\n                  \r\n            \r\n        }\r\n    \r\n\r\n  }\r\n            \r\n\r\n\r\n    render (){\r\n     \r\n   \r\n        \r\n        return(\r\n            \r\n            <ScrollView style={styles.container}>\r\n             {/* <Text style={styles.Text}> Please enter your email:</Text>\r\n              <TextInput\r\n                  name='email'\r\n                  style={styles.input}\r\n                  placeholderTextColor=\"#aaaaaa\"\r\n                  placeholder='Please enter your email'\r\n                  onChangeText={(text) => this.setState({email:text})}\r\n                  value={this.state.email}\r\n                  underlineColorAndroid=\"transparent\"\r\n                  autoCapitalize=\"none\"\r\n              />\r\n              <Text style={styles.Text}> Please enter your password:</Text>\r\n              <TextInput\r\n                  name='password'\r\n                  style={styles.input}\r\n                  placeholderTextColor=\"#aaaaaa\"\r\n                  secureTextEntry\r\n                  placeholder='Password'\r\n            \r\n                  onChangeText={(text) => this.setState({password:text})}\r\n                  value={this.state.password}\r\n                  underlineColorAndroid=\"transparent\"\r\n                  autoCapitalize=\"none\"\r\n              /> \r\n                            \r\n             <TouchableOpacity style={styles.button} onPress={this.onLogin}>\r\n                  <Text style={styles.Text}>Login</Text>\r\n              </TouchableOpacity>  \r\n             */}\r\n\r\n              {/* <Picker\r\n                    \r\n                    selectedValue={this.state.selectedPlayerPosition}\r\n                    style={styles.input}\r\n                    onValueChange={(text) => this.setState({selectedPlayerPosition:text})}\r\n                >\r\n                    <Picker.Item label=\"Select their position\" value=\"\" />\r\n                    <Picker.Item label=\"Goalkeeper\" value=\"GK\" />\r\n                    <Picker.Item label=\"Defender\" value=\"Defender\" />\r\n                    <Picker.Item label=\"Midfielder\" value=\"Midfielder\"  />\r\n                    <Picker.Item label=\"Forward\" value=\"Forward\"  />\r\n                </Picker> \r\n */}\r\n\r\n <Picker\r\n  selectedValue={this.state.selectedPlayerPosition}\r\n  onValueChange={(text) => this.setState({selectedPlayerPosition:text})}>\r\n \r\n  <Picker.Item label=\"Select their position\" value=\"\"  itemStyle={{ backgroundColor: \"grey\", color: \"blue\", fontFamily:\"Ebrima\", fontSize:17 }}/>\r\n  <Picker.Item label=\"Java\" value=\"java\"  itemStyle={{ backgroundColor: \"grey\", color: \"blue\", fontFamily:\"Ebrima\", fontSize:17 }}/>\r\n  <Picker.Item label=\"JavaScript\" value=\"js\"  itemStyle={{ backgroundColor: \"grey\", color: \"blue\", fontFamily:\"Ebrima\", fontSize:17 }}/>\r\n</Picker>\r\n\r\n\r\n\r\n            </ScrollView>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: '#252626',\r\n  \r\n    },\r\n    logo: {\r\n        flex: 1,\r\n        height: 120,\r\n        width: 90,\r\n        alignSelf: \"center\",\r\n        margin: 30\r\n    },\r\n    input: {\r\n        height: 60,\r\n        borderRadius: 5,\r\n        overflow: 'hidden',\r\n        backgroundColor: 'white',\r\n        marginTop: 10,\r\n        marginBottom: 10,\r\n        marginLeft: 30,\r\n        marginRight: 30,\r\n        paddingLeft: 16\r\n    },\r\n    button: {\r\n        backgroundColor: '#C30000',\r\n        marginLeft: 30,\r\n        marginRight: 50,\r\n        marginTop: 20,\r\n        height: 48,\r\n        width:150,\r\n        borderRadius: 5,\r\n        borderWidth: 2,\r\n        borderColor:'#000000',\r\n        alignItems: \"center\",\r\n        justifyContent: 'center'\r\n    },\r\n    Text:{\r\n      color: \"white\",\r\n      fontSize:15,\r\n      marginTop: 10,\r\n      marginBottom: 10,\r\n      marginLeft: 16,\r\n      marginRight: 30,\r\n      paddingLeft: 16,\r\n      fontWeight: \"bold\",\r\n     \r\n  \r\n  },\r\n    footerView: {\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        marginTop: 20\r\n    },\r\n    footerText: {\r\n        fontSize:18,\r\n        height: 30,\r\n        marginTop: 15,\r\n        marginBottom: 5,\r\n        marginLeft: 20,\r\n        marginRight: 30,\r\n        paddingLeft: 10,\r\n        color: 'white',\r\n        fontWeight: \"bold\",\r\n    },\r\n    footerLink: {\r\n        color: \"#788eec\",\r\n        fontWeight: \"bold\",\r\n        fontSize: 16\r\n    },\r\n\r\n\r\n  \r\n  \r\n   \r\n    test: {\r\n      backgroundColor: '#000000',\r\n      borderWidth: 4,\r\n      borderColor:'#949494',\r\n      borderRadius: 6,\r\n    }\r\n  });\r\n\r\nexport default LoginScreen;"]},"metadata":{},"sourceType":"module"}