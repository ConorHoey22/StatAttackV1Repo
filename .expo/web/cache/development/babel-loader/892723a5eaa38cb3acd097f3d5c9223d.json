{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\StatsAppNative\\\\MyApp\\\\screens\\\\LoginScreen\\\\LoginScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useEffect, useState, Component } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { useNavigation } from '@react-navigation/native';\nimport { createAppContainer } from 'react-navigation';\nimport { createStackNavigator } from 'react-navigation-stack';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\nimport { Picker } from '@react-native-picker/picker';\nimport PickerModal from 'react-native-picker-modal-view';\nvar screenWidth = Dimensions.get('window').width;\nvar screenHeight = Dimensions.get('window').height;\n\nvar LoginScreen = function (_Component) {\n  _inherits(LoginScreen, _Component);\n\n  var _super = _createSuper(LoginScreen);\n\n  function LoginScreen(props) {\n    var _this;\n\n    _classCallCheck(this, LoginScreen);\n\n    _this = _super.call(this, props);\n\n    _this.onLogin = function _callee() {\n      var email, password;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              email = _this.state.email;\n              password = _this.state.password;\n\n              if (_this.state.email == '' || _this.state.password == '') {\n                alert('Enter details to signin!');\n              } else {\n                _this.setState({\n                  isLoading: true\n                });\n\n                firebase.auth().signInWithEmailAndPassword(email, password).then(function () {\n                  return _this.props.navigation.navigate('Home');\n                }).catch(function (error) {\n                  return alert(error.toString(error));\n                });\n              }\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      email: '',\n      password: '',\n      selectedPlayerPosition: ''\n    };\n    return _this;\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }\n      }, React.createElement(PickerModal, {\n        renderSelectView: function renderSelectView(disabled, selected, showModal) {\n          return React.createElement(Button, {\n            disabled: disabled,\n            title: 'Show me!',\n            onPress: showModal,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 19\n            }\n          });\n        },\n        onSelected: this.onSelected.bind(this),\n        onClosed: this.onClosed.bind(this),\n        onBackButtonPressed: this.onBackButtonPressed.bind(this),\n        items: data,\n        sortingLanguage: 'tr',\n        showToTopButton: true,\n        selected: selectedItem,\n        showAlphabeticalIndex: true,\n        autoGenerateAlphabeticalIndex: true,\n        selectPlaceholderText: 'Choose one...',\n        onEndReached: function onEndReached() {\n          return console.log('list ended...');\n        },\n        searchPlaceholderText: 'Search...',\n        requireSelection: false,\n        autoSort: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }\n      }), React.createElement(View, {\n        style: {\n          padding: 10,\n          alignItems: 'center',\n          backgroundColor: '#ddd'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 15\n        }\n      }, \"Chosen: \"), this.state.SelectedStartingTeam.map(function (item, index) {\n        return React.createElement(Text, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 23\n          }\n        }, JSON.stringify(selectedItem));\n      })));\n    }\n  }]);\n\n  return LoginScreen;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#252626'\n  },\n  card: {\n    borderWidth: 1,\n    height: '100%',\n    width: '100%',\n    borderColor: \"#C30000\",\n    borderRadius: 10,\n    backgroundColor: \"#ffffff\",\n    marginTop: 10,\n    marginLeft: 4\n  },\n  logo: {\n    flex: 1,\n    height: 120,\n    width: 90,\n    alignSelf: \"center\",\n    margin: 30\n  },\n  input: {\n    height: 60,\n    borderRadius: 5,\n    overflow: 'hidden',\n    backgroundColor: 'white',\n    marginTop: 10,\n    marginBottom: 10,\n    marginLeft: 30,\n    marginRight: 30,\n    paddingLeft: 16\n  },\n  button: {\n    backgroundColor: '#C30000',\n    marginLeft: 30,\n    marginRight: 50,\n    marginTop: 20,\n    height: 48,\n    width: 150,\n    borderRadius: 5,\n    borderWidth: 2,\n    borderColor: '#000000',\n    alignItems: \"center\",\n    justifyContent: 'center'\n  },\n  Text: {\n    color: \"white\",\n    fontSize: 15,\n    marginTop: 10,\n    marginBottom: 10,\n    marginLeft: 16,\n    marginRight: 30,\n    paddingLeft: 16,\n    fontWeight: \"bold\"\n  },\n  footerView: {\n    flex: 1,\n    alignItems: \"center\",\n    marginTop: 20\n  },\n  footerText: {\n    fontSize: 18,\n    height: 30,\n    marginTop: 15,\n    marginBottom: 5,\n    marginLeft: 20,\n    marginRight: 30,\n    paddingLeft: 10,\n    color: 'white',\n    fontWeight: \"bold\"\n  },\n  footerLink: {\n    color: \"#788eec\",\n    fontWeight: \"bold\",\n    fontSize: 16\n  },\n  test: {\n    backgroundColor: '#000000',\n    borderWidth: 4,\n    borderColor: '#949494',\n    borderRadius: 6\n  }\n});\nexport default LoginScreen;","map":{"version":3,"sources":["D:/StatsAppNative/MyApp/screens/LoginScreen/LoginScreen.js"],"names":["React","useEffect","useState","Component","firebase","useNavigation","createAppContainer","createStackNavigator","widthPercentageToDP","wp","heightPercentageToDP","hp","Picker","PickerModal","screenWidth","Dimensions","get","width","screenHeight","height","LoginScreen","props","onLogin","email","state","password","alert","setState","isLoading","auth","signInWithEmailAndPassword","then","navigation","navigate","catch","error","toString","selectedPlayerPosition","disabled","selected","showModal","onSelected","bind","onClosed","onBackButtonPressed","data","selectedItem","console","log","padding","alignItems","backgroundColor","SelectedStartingTeam","map","item","index","JSON","stringify","styles","StyleSheet","create","container","flex","card","borderWidth","borderColor","borderRadius","marginTop","marginLeft","logo","alignSelf","margin","input","overflow","marginBottom","marginRight","paddingLeft","button","justifyContent","Text","color","fontSize","fontWeight","footerView","footerText","footerLink","test"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, Component } from 'react'\r\nimport { ScrollView,Image, Text, TextInput,StyleSheet, TouchableOpacity, View ,Button } from 'react-native'\r\n\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\n\r\nimport {Dimensions} from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { createAppContainer } from 'react-navigation';\r\nimport { createStackNavigator } from 'react-navigation-stack';\r\n\r\nimport {widthPercentageToDP as wp, heightPercentageToDP as hp} from 'react-native-responsive-screen';\r\n\r\nimport {Picker} from '@react-native-picker/picker';\r\nimport PickerModal from 'react-native-picker-modal-view';\r\n\r\nconst screenWidth = Dimensions.get('window').width;\r\n\r\nconst screenHeight = Dimensions.get('window').height;\r\n\r\n\r\nclass LoginScreen extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            email: '',\r\n            password: '',\r\n            selectedPlayerPosition:''\r\n          \r\n         };\r\n      }\r\n\r\n     \r\n  \r\n\r\n    onLogin = async() => {\r\n\r\n        const email = this.state.email;\r\n        const password = this.state.password;\r\n\r\n\r\n        if(this.state.email == '' || this.state.password == '') {\r\n          alert('Enter details to signin!')\r\n        } else {\r\n          this.setState({\r\n            isLoading: true,\r\n          });\r\n\r\n\r\n         \r\n    \r\n            firebase.auth()\r\n                .signInWithEmailAndPassword(email, password)\r\n                .then(() => this.props.navigation.navigate('Home'))\r\n                .catch(error => alert(error.toString(error)));\r\n\r\n                  \r\n\r\n                  \r\n            \r\n        }\r\n    \r\n\r\n  }\r\n            \r\n\r\n\r\n    render (){\r\n     \r\n   \r\n        \r\n        return(\r\n            \r\n            // <ScrollView style={styles.container}>\r\n            //  <Text style={styles.Text}> Please enter your email:</Text>\r\n            //   <TextInput\r\n            //       name='email'\r\n            //       style={styles.input}\r\n            //       placeholderTextColor=\"#aaaaaa\"\r\n            //       placeholder='Please enter your email'\r\n            //       onChangeText={(text) => this.setState({email:text})}\r\n            //       value={this.state.email}\r\n            //       underlineColorAndroid=\"transparent\"\r\n            //       autoCapitalize=\"none\"\r\n            //   />\r\n            //   <Text style={styles.Text}> Please enter your password:</Text>\r\n            //   <TextInput\r\n            //       name='password'\r\n            //       style={styles.input}\r\n            //       placeholderTextColor=\"#aaaaaa\"\r\n            //       secureTextEntry\r\n            //       placeholder='Password'\r\n            \r\n            //       onChangeText={(text) => this.setState({password:text})}\r\n            //       value={this.state.password}\r\n            //       underlineColorAndroid=\"transparent\"\r\n            //       autoCapitalize=\"none\"\r\n            //   /> \r\n                            \r\n            //  <TouchableOpacity style={styles.button} onPress={this.onLogin}>\r\n            //       <Text style={styles.Text}>Login</Text>\r\n            //   </TouchableOpacity>  \r\n          \r\n\r\n\r\n\r\n            // </ScrollView>\r\n\r\n\r\n          <View>\r\n              <PickerModal\r\n              renderSelectView={(disabled, selected, showModal) =>\r\n                  <Button disabled={disabled} title={'Show me!'} onPress={showModal} />\r\n              }\r\n              onSelected={this.onSelected.bind(this)}\r\n              onClosed={this.onClosed.bind(this)}\r\n              onBackButtonPressed={this.onBackButtonPressed.bind(this)}\r\n              items={data}\r\n              sortingLanguage={'tr'}\r\n              showToTopButton={true}\r\n              selected={selectedItem}\r\n              showAlphabeticalIndex={true}\r\n              autoGenerateAlphabeticalIndex={true}\r\n              selectPlaceholderText={'Choose one...'}\r\n              onEndReached={() => console.log('list ended...')}\r\n              searchPlaceholderText={'Search...'}\r\n              requireSelection={false}\r\n              autoSort={false}\r\n          />\r\n          <View style={{ padding: 10, alignItems: 'center', backgroundColor: '#ddd' }}>\r\n              <Text>Chosen: </Text>\r\n\r\n              {this.state.SelectedStartingTeam.map((item, index) => {\r\n                  return (\r\n                      /* <Picker.Item label={item.fullName} value={item.UserID}/>                                */\r\n                      <Text>{JSON.stringify(selectedItem)}</Text>\r\n\r\n              )})}\r\n                                                \r\n          </View>\r\n\r\n\r\n        </View>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: '#252626',\r\n  \r\n    },\r\n\r\n    card:{\r\n      borderWidth: 1,\r\n      height:'100%',\r\n      width: '100%',\r\n      borderColor: \"#C30000\",\r\n      borderRadius: 10,\r\n      backgroundColor: \"#ffffff\",\r\n      marginTop: 10,\r\n      marginLeft: 4\r\n    },\r\n    logo: {\r\n        flex: 1,\r\n        height: 120,\r\n        width: 90,\r\n        alignSelf: \"center\",\r\n        margin: 30\r\n    },\r\n    input: {\r\n        height: 60,\r\n        borderRadius: 5,\r\n        overflow: 'hidden',\r\n        backgroundColor: 'white',\r\n        marginTop: 10,\r\n        marginBottom: 10,\r\n        marginLeft: 30,\r\n        marginRight: 30,\r\n        paddingLeft: 16\r\n    },\r\n    button: {\r\n        backgroundColor: '#C30000',\r\n        marginLeft: 30,\r\n        marginRight: 50,\r\n        marginTop: 20,\r\n        height: 48,\r\n        width:150,\r\n        borderRadius: 5,\r\n        borderWidth: 2,\r\n        borderColor:'#000000',\r\n        alignItems: \"center\",\r\n        justifyContent: 'center'\r\n    },\r\n    Text:{\r\n      color: \"white\",\r\n      fontSize:15,\r\n      marginTop: 10,\r\n      marginBottom: 10,\r\n      marginLeft: 16,\r\n      marginRight: 30,\r\n      paddingLeft: 16,\r\n      fontWeight: \"bold\",\r\n     \r\n  \r\n  },\r\n    footerView: {\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        marginTop: 20\r\n    },\r\n    footerText: {\r\n        fontSize:18,\r\n        height: 30,\r\n        marginTop: 15,\r\n        marginBottom: 5,\r\n        marginLeft: 20,\r\n        marginRight: 30,\r\n        paddingLeft: 10,\r\n        color: 'white',\r\n        fontWeight: \"bold\",\r\n    },\r\n    footerLink: {\r\n        color: \"#788eec\",\r\n        fontWeight: \"bold\",\r\n        fontSize: 16\r\n    },\r\n\r\n\r\n  \r\n  \r\n   \r\n    test: {\r\n      backgroundColor: '#000000',\r\n      borderWidth: 4,\r\n      borderColor:'#949494',\r\n      borderRadius: 6,\r\n    }\r\n  });\r\n\r\nexport default LoginScreen;"]},"metadata":{},"sourceType":"module"}